{"version":3,"sources":["utils/wallet.ts","config/localization/languages.ts","components/ConnectWalletButton.tsx","config/constants/maximizers.ts","state/maximizers/fetchMaximizers.ts","state/maximizers/fetchMaximizersUser.ts","state/maximizers/index.ts","config/constants/vaults.ts","state/vaults/fetchVaultPools.ts","state/vaults/fetchVaultPoolsUser.ts","state/vaults/index.ts","config/constants/multiPools.ts","state/multiPool/fetchMultiPools.ts","state/multiPool/fetchMultiPoolUser.ts","state/multiPool/index.ts","state/global/actions.ts","state/transactions/actions.ts","utils/contractHelperMulti.ts","hooks/useTheme.ts","state/lists/hooks.ts","config/constants/farms.ts","config/constants/nfts.ts","utils/addressHelperMulti.ts","utils/multicallMulti.ts","state/user/hooks/index.tsx","utils/getRpcUrl.ts","contexts/Localization/helpers.ts","state/profile/index.tsx","state/profile/getProfile.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","state/teams/index.tsx","utils/web3React.ts","state/network/fetchNetwork.ts","state/network/index.ts","utils/addressHelpers.ts","contexts/PotDetail.tsx","config/constants/meta.ts","components/Layout/Container.tsx","components/Layout/Page.tsx","state/block/index.ts","hooks/useLastUpdated.ts","utils/getProvider.ts","components/Layout/Row.tsx","hooks/useAuth.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/ConnectNetwork/icons/BinanceChain.tsx","config/constants/tokens.ts","utils/wrappedCurrency.ts","hooks/usePairs.ts","components/QuestionHelper/index.tsx","utils/farmHelpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/ConnectNetwork/icons/AvalancheChain.tsx","state/teams/helpers.ts","config/constants/teams.ts","hooks/Tokens.ts","components/App/Settings/TransactionSettings.tsx","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","components/App/AppBodyPot.tsx","hooks/useDebounce.ts","state/mint/actions.ts","utils/bigNumber.ts","config/constants/ifo.ts","state/application/actions.ts","state/pools/helpers.ts","utils/collectibles.ts","state/collectibles/index.ts","hooks/useSelectNetwork.ts","contexts/RefreshContext.tsx","config/constants/connectors.ts","components/ConnectWallet/Modals/ConnectModal.tsx","components/ConnectWallet/Modals/AccountModal.tsx","components/ConnectWallet/useWalletModal.tsx","utils/uriToHttp.ts","state/transactions/hooks.tsx","hooks/useActiveWeb3React.ts","utils/formatBalance.ts","state/burn/actions.ts","state/user/hooks/useUserAddedTokens.ts","config/constants/multicall/index.ts","hooks/useContract.ts","utils/ENS/parseENSAddress.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","components/SearchModal/filtering.ts","utils/contractHelpers.ts","utils/multicall.ts","config/constants/chains.ts","components/ConnectNetwork/icons/PolygonChain.tsx","components/Loader/CircleLoader.tsx","config/constants/pots.ts","config/constants/potsMulti.ts","hooks/usePreviousValue.ts","hooks/useRefresh.ts","config/constants/types.ts","state/hooks.ts","state/predictions/index.ts","config/constants/campaigns.ts","state/achievements/index.ts","state/voting/helpers.ts","state/voting/index.tsx","config/constants/lottery.ts","state/lottery/helpers.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/application/reducer.ts","state/user/reducer.ts","state/zap/actions.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/zap/reducer.ts","state/index.ts","config/index.ts","hooks/useContractMulti.ts","components/Layout/Column.tsx","state/types.ts","hooks/useToast.ts","config/constants/contracts.ts","state/swap/actions.ts","state/multicall/hooks.ts","config/constants/lists.ts","state/user/actions.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","hooks/useEagerConnect.ts","components/DatePicker/DatePickerPortal.tsx","components/AccountWalletButton.tsx","components/Svg/ArrowDropDownSmall.tsx","components/ConnectNetwork/Modals/ConnectNetworkModal.tsx","components/ConnectNetwork/useNetworkModal.tsx","components/ConnectNetworkButton.tsx","components/LangSelector.tsx","components/Menu/index.tsx","components/Footer/index.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","routerHistory.ts","views/PotDetail/components/TimerCard/StyledRightCard.tsx","views/PotDetail/components/TimerCard/CountdownTimer.tsx","views/PotDetail/components/TimerCard/StyledRightCardHeader.tsx","views/PotDetail/components/DepositBannerStyledCard.tsx","views/PotDetail/hooks/useUserDepositedBalance.ts","utils/calls/farms.ts","utils/calls/pots.ts","views/PotDetail/hooks/useDepositPots.ts","views/PotDetail/hooks/useWithdrawPots.ts","views/PotDetail/hooks/useClaimPots.ts","views/PotDetail/hooks/useDepositPotsUpline.ts","views/PotDetail/components/PenaltyTimer/CountdownTimer.tsx","views/PotDetail/components/PotDepositBanner.tsx","views/PotDetail/hooks/useUserReferral.ts","views/PotDetail/hooks/useUserBalance.ts","views/PotDetail/hooks/useApprove.ts","views/PotDetail/hooks/useCheckApprove.ts","views/PotDetail/hooks/useUserClaimable.ts","views/PotDetail/hooks/useUserContractReferral.ts","views/PotDetail/hooks/useUserWithdrawPenalty.ts","hooks/usePagination.ts","components/Pagination/Pagination.tsx","hooks/useBUSDPrice.ts","views/PotDetail/components/PotDetailWinnerCard/StyledCard.tsx","views/PotDetail/components/PotDetailWinnerCard/StyledRightCard.tsx","views/PotDetail/components/PotDetailWinnerCard/StyledRightCardHeader.tsx","views/PotDetail/components/PotDetailWinnerCard/WinnerList.tsx","views/PotDetail/components/LearnMoreModal.tsx","views/PotDetail/components/PotDetailWinnerCard/index.tsx","views/PotDetail/hooks/useCmsContent.ts","views/PotDetail/hooks/usePotSponsorship.ts","views/PotDetail/hooks/usePotDepositList.ts","views/PotDetail/components/PotDetailLastWinnerList/StyledCard.tsx","views/PotDetail/components/PotDetailLastWinnerList/StyledCardHeader.tsx","views/PotDetail/components/PotDetailLastWinnerList/LastWinnerList.tsx","hooks/useTokenBalance.ts","views/PotDetail/components/PotDetailLastWinnerList/index.tsx","views/PotDetail/hooks/usePotWinnerList.ts","views/PotDetail/index.tsx","views/PotDetail/hooks/usePotTotalDeposit.ts","views/PotDetail/hooks/useStakingTokenBalance.ts","views/PotDetail/hooks/usePotPancakeChefInfo.ts","views/PotDetailMulti/hooks/usePotTotalRewardTotalDeposit.ts","views/PotDetailMulti/hooks/usePotTotalDeposit.ts","views/PotDetailMulti/hooks/useUserPotInfo.ts","views/PotDetailMulti/components/styleds.tsx","views/PotDetailMulti/components/TimerCard/CountdownTimer.tsx","views/PotDetailMulti/components/TimerCard/index.tsx","views/PotDetailMulti/components/PenaltyTimerCard/CountdownTimer.tsx","views/PotDetailMulti/components/PotAction.tsx","views/PotDetailMulti/hooks/useUserPotAction.ts","views/PotDetailMulti/components/PotDetailDepositList/DepositListRow.tsx","views/PotDetailMulti/hooks/usePotDepositWinnerList.ts","views/PotDetailMulti/components/PotDetailDepositList/index.tsx","views/PotDetailMulti/components/PotWinnerList/LastWinnerList.tsx","views/PotDetailMulti/components/PotWinnerList/index.tsx","views/PotDetailMulti/index.tsx","state/vaults/helpers.ts","state/maximizers/helpers.ts","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/TokenImage/index.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","components/Balance.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/DepositedCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/Modals/LearnMoreModal.tsx","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/GridContainer.tsx","views/Pools/components/GridItem.tsx","views/Pools/components/NavPills.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","views/Pools/hooks/useCmsContent.ts","state/pools/hooks.ts","state/vaults/hooks.ts","state/maximizers/hooks.ts","state/multiPool/helpers.ts","views/MultiPools/components/PoolsTable/Cells/BaseCell.tsx","views/MultiPools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/MultiPools/components/PoolsTable/Cells/NameCell.tsx","views/MultiPools/components/PoolsTable/Apr.tsx","views/MultiPools/components/PoolsTable/Cells/AprCell.tsx","views/MultiPools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/MultiPools/components/PoolsTable/Cells/DepositedCell.tsx","views/MultiPools/components/PoolsTable/ActionPanel/styles.ts","views/MultiPools/hooks/useHarvestPool.ts","views/MultiPools/components/PoolCard/Modals/CollectModal.tsx","views/MultiPools/components/PoolCard/Modals/LearnMoreModal.tsx","views/MultiPools/components/PoolsTable/ActionPanel/Harvest.tsx","views/MultiPools/components/PoolCard/Modals/PercentageButton.tsx","views/MultiPools/hooks/useStakePool.ts","views/MultiPools/hooks/useUnstakePool.ts","views/MultiPools/components/PoolCard/Modals/StakeModal.tsx","views/MultiPools/components/GridContainer.tsx","views/MultiPools/components/GridItem.tsx","views/MultiPools/components/NavPills.tsx","views/MultiPools/components/PoolsTable/ActionPanel/Stake.tsx","views/MultiPools/hooks/useApprove.ts","views/MultiPools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/MultiPools/components/PoolsTable/PoolRow.tsx","views/MultiPools/components/PoolsTable/PoolsTable.tsx","views/MultiPools/index.tsx","views/MultiPools/hooks/useCmsContent.ts","state/multiPool/hooks.ts","App.tsx","state/block/hooks.ts","Providers.tsx","components/Shared/GoTop.tsx","index.tsx","state/predictions/helpers.ts","state/predictions/queries.ts","utils/index.ts","config/constants/pools.ts","state/multicall/actions.ts","utils/apr.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","views/Pools/helpers.tsx","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/providers.ts","config/constants/index.ts","state/lists/actions.ts","config/constants/endpoints.ts"],"names":["setupNetwork","a","provider","window","ethereum","chainId","parseInt","process","request","method","params","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","nodes","blockExplorerUrls","BASE_BSC_SCAN_URL","console","error","setupNetworkV2","CHAIN_PARAMS","warn","setupEthNetwork","registerToken","tokenAddress","tokenSymbol","tokenDecimals","type","options","address","image","BASE_URL","tokenAdded","EN","locale","language","code","languages","languageList","Object","values","MConnectWalletButton","styled","Button","ConnectWalletButton","props","useTranslation","t","currentLanguage","setLanguage","useAuth","login","logout","onPresentConnectModalV2","useWalletModal","undefined","onPresentConnectModal","useWalletModalV2","onClick","maximizers","maximizerId","stakingToken","tokens","santosbnb","earningTokens","main","cake","extra","musashi","contractAddress","maximiserTImage","isFinished","qibnb","darbnb","bnbfroyo","fetchMaximizersTotalStaking","calls","maximizersConfig","map","m","getAddress","multicall","maximizerABI","maximizersTotalStaked","index","totalStaked","BigNumber","toJSON","fetchMaximizersAllowance","account","bep20ABI","allowances","reduce","acc","maximizer","fetchUserBalances","tokenBalancesRaw","tokenBalances","fetchUserStakeBalances","userInfo","stakedBalances","fetchUserPendingRewards","rewardInfo","pendingRewards","fetchUserPendingRewardsPlatform","pendingRewardsPlatform","initialState","data","maximizerConfig","userDataLoaded","fetchMaximizerPublicDataAsync","dispatch","totalStakings","liveData","totalStaking","find","entry","setMaximizerPublicData","fetchMaximizerUserDataAsync","stakingTokenBalances","userData","allowance","stakingTokenBalance","stakedBalance","pendingReward","pendingRewardPlatform","setMaximizerUserData","updateMaximizerUserAllowance","updateMaximizerUserData","field","value","updateMaximizerUserBalance","updateMaximizerUserStakedBalance","updateMaximizerUserPendingReward","updateMaximizerUserPendingRewardPlatform","MaximizersSlice","createSlice","reducers","state","action","liveMaximizersData","payload","liveMaximizerData","userMaximizerData","findIndex","extraReducers","builder","addCase","updateVersion","actions","vaults","vaultId","vaultTImage","fetchVaultPricePerFullShare","vaultConfig","v","vaultABI","pricePerFullShare","fetchVaultTotalShares","totalShares","fetchVaultTotalPendingCakeRewards","totalPendingCakeReward","totalPendingHarvest","fetchVaultPerformanceFee","performanceFee","fetchVaultTotalToken","totalToken","totalTokenInVault","fetchVaultPoolsAllowance","erc20ABI","vault","p","fetchUserShares","shares","fetchUserAmount","res","fetchVaultPublicDataAsync","pricePerFullShares","totalSharess","totalPendingCakeRewardss","performanceFees","totalTokens","totalPendingCakeRewards","fees","setVaultPublicData","fetchVaultUserDataAsync","sharess","userAmounts","userShares","userAmount","setVaultUserData","updateVaultUserAllowance","updateVaultUserData","updateVaultUserBalance","updateVaultUserShares","updateVaultUserAmount","updateVaultUserPendingReward","VaultsSlice","liveVaultsData","liveVaultData","userVaultData","multiPools","poolId","time","CHAIN_ID_ENUM","BSC","AVAX","stakingTImage","sortOrder","fetchPoolsTotalStaking","filteredMultiPools","multiPoolConfig","filter","mPool","poolAvaxAbi","fetchPoolsAPR","CHAIN_ID","wonderlandStakingContract","getWonderlandStakingContract","contracts","wonderlandStakingContr","epoch","stakingRewardBN","distribute","memoContract","getAvaxMemoTokenContract","memo","circulatingSupply","circulatingSupplyBN","stakingRebase","div","stakingAPY","plus","exponentiatedBy","minus","stakingAPYPercentage","times","toFixed","apy","fetchMultiPoolsAllowance","userDeposits","fetchMultiPoolPublicDataAsync","aprs","apr","setMultiPoolPublicData","fetchMultiPoolUserDataAsync","setMultiPoolUserData","updateMultiPoolUserAllowance","updateMultiPoolUserData","updateMultiPoolUserBalance","updateMultiPoolUserAmount","updateMultiPoolUserPendingReward","MultiPoolsSlice","userMultiPoolData","createAction","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","getContract","abi","signer","getProvider","signerOrProvider","ethers","Contract","getJackpotContract","jackpotAbiAvax","getErc20TokenContract","erc20Abi","wonderlandStakingAbi","avaxMemoTokenAbi","useTheme","useThemeManager","isDark","toggleTheme","theme","useContext","StyledThemeContext","sortByListPriority","urlA","urlB","first","DEFAULT_LIST_OF_LISTS","includes","indexOf","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","Token","EMPTY_LIST","ChainId","MAINNET","TESTNET","listCache","WeakMap","listToTokenMap","list","result","get","tokenMap","tagId","id","x","Boolean","token","Error","set","useAllLists","useSelector","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","useMemo","slice","sort","allTokens","currentUrl","current","assign","useActiveListUrls","activeListUrls","url","UNSUPPORTED_LIST_URLS","useCombinedActiveList","DEFAULT_TOKEN_LIST","useCombinedInactiveList","allActiveListUrls","keys","useInactiveListUrls","useDefaultTokenList","useUnsupportedTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","zapListCache","useZapTokenList","zapListToTokenMap","ZAP_TOKEN_LIST","farms","pid","lpSymbol","lpAddresses","syrup","quoteToken","wbnb","busd","revv","btt","skill","win","if","sps","c98","axs","pmon","trx","chess","usdc","titan","harmony","mask","dvi","gum","adx","usdt","suter","bscpad","rabbit","waultx","wex","form","orbs","$dg","woo","htb","jgn","dft","hai","o3","ampl","oddz","eth","btcb","bondly","marsh","boring","mbox","ata","mx","bcfx","qkc","ktn","mtrg","swg","tusd","vrt","ez","kalm","popen","lien","well","deri","chr","cyc","xend","hget","hotcross","rfox","wmass","ubxt","btr","τdoge","one","fine","doge","bmxx","oin","hyfi","kun","qsd","math","mcoin","ust","pnt","pbtc","xmark","lmt","dfd","alpaca","τbtc","swingby","xed","hakka","cgg","broobee","hzn","alpa","perl","tlm","eps","arpa","itam","tko","apys","hoo","easy","nrv","dego","swth","zil","pcws","bbadger","bdigg","lto","mir","trade","dusk","bifi","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","iotx","bor","bopen","sushi","dodo","bry","zee","swgb","comp","sfp","lina","lit","bdo","egld","mamzn","mgoogl","mnflx","mtsla","wsote","front","helmet","btcst","ltc","dai","bscx","ten","balbt","reef","ditto","vai","blink","unfi","hard","ctk","sxp","inj","fil","uni","yfi","atom","xrp","alpha","xvs","twt","link","eos","dot","band","ada","yfii","beth","og","asr","atm","juv","psg","xtz","bch","stax","isCommunity","nar","nya","bake","burger","IPFS_GATEWAY","nftSources","NftType","PANCAKE","identifierKey","MIXIE","Nfts","description","images","lg","md","sm","ipfs","identifier","variationId","video","webm","mp4","blur","getMulticallAddress","addresses","multiCall","multicallAddress","multi","multicallABI","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","aggregate","returnData","i","decodeFunctionResult","useIsExpertMode","user","userExpertMode","useExpertModeManager","useDispatch","expertMode","toggleSetExpertMode","useCallback","updateUserExpertMode","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","slippage","updateUserSlippageTolerance","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useActiveWeb3React","useAllTokens","pinnedPairs","PINNED_PAIRS","generatedPairs","flatMap","BASES_TO_TRACK_LIQUIDITY_FOR","base","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","sorted","sortsBefore","key","ethRpc","getEthRpc","sample","getMultichainNodeUrl","NETWORK_RPC","getNodeUrl","LS_KEY","fetchLocale","fetch","response","json","getLanguageCodeFromLS","localStorage","getItem","getProfileContract","isInitialized","isLoading","hasRegistered","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profile","profileFetchFailed","profileClear","addPoints","points","useBlockNumber","application","blockNumber","teamsList","accum","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","rpcUrl","chainIdEth","injected","InjectedConnector","supportedChainIds","injectedBridge","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","connectorsByNameBridge","getLibrary","library","providers","Web3Provider","fetchAndUpdateNetwork","web3ChainId","search","location","chainStr","URLSearchParams","removeChainParamUrl","href","split","history","pushState","document","title","localStorageChain","NETWORK_LABEL","chainIdFromUrl","MATIC","chainIdSafeCheck","networkSlice","networkFetchStart","networkFetchSucceeded","networkFetchFailed","setNetwork","setChainIdFromUrl","fetchUserNetwork","network","setItem","JSON","stringify","log","fetchChainIdFromUrl","updatedChainIdFromUrl","getAddressEth","getStakingAddress","stakingContr","getZapAddress","zapContr","getCakeAddress","getMasterChefAddress","masterChef","getWbnbAddress","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","getReferralAddress","referralContr","getTreasuryAddress","treasuryContr","UPDATE_POT_DETAILS","PotDetailContext","createContext","reducer","sessionId","totalDeposit","totalReward","end","Provider","children","useReducer","updatePotData","GetPotData","contract","session_id","total_deposit","session_endTimestamp","usePotData","tempAddress","fastRefresh","useRefresh","potData","useEffect","_address","potDataTemp","updPotData","DEFAULT_META","Container","px","StyledPage","mediaQueries","PageMeta","pageMeta","path","getCustomMeta","useLocation","pathname","property","content","Page","blockSlice","currentBlock","initialBlock","setBlock","useLastUpdated","useState","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","activeWeb3Instance","RPC_URL","JsonRpcProvider","Row","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","gap","RowFixed","useWeb3React","activate","deactivate","toastError","useToast","useNetworkChainId","connectorID","connector","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","message","close","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","Icon","height","viewBox","fill","cx","cy","r","d","CAKE","BUSD","MUS","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","projectLink","usdtbusd","xcoin","bnbmusashi","pcoin","bnb","mix","safemoon","wrappedCurrency","currency","ETHER","WETH","wrappedCurrencyAmount","currencyAmount","TokenAmount","raw","unwrappedToken","equals","PairState","PAIR_INTERFACE","IUniswapV2PairABI","usePairs","currencies","currencyA","currencyB","pairAddresses","results","useMultipleContractSingleData","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","color","isArchivedPid","priceHelperLps","fetchFarm","farm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","quoteTokenDecimals","lpTokenRatio","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","some","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsConfig","loadArchivedFarmsData","fetchFarmsPublicDataAsync","createAsyncThunk","pids","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","fulfilled","liveFarmData","farmData","forEach","userDataEl","isFetching","languageMap","Map","translations","LanguageContext","LanguageProvider","codeFromStorage","setState","enLocale","currentLocale","prevState","fetchInitialLocales","has","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","xmlns","stroke","fillRule","fillOpacity","profileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","staticTeam","merge","users","toNumber","getTeams","teamsById","numberTeams","nbTeams","push","multicallv2","profileABI","teamData","onChainTeamData","teams","alt","background","textColor","useTokensFromMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useAllZapTokens","useAllInactiveTokens","inactiveTokens","activeTokensAddresses","useUnsupportedTokens","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","isAddress","tokenContract","useTokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","useCurrency","currencyId","isBNB","toUpperCase","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","rawSlippage","setRawSlippage","setDeadline","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","parseFloat","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","isNaN","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","fontSize","ml","flexWrap","gridTemplateColumns","gridGap","mb","mr","variant","className","scale","placeholder","onBlur","onChange","e","target","isWarning","isSuccess","bold","style","paddingTop","pl","SettingsModal","onDismiss","setUserslippageTolerance","ttl","setTtl","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","colors","primary","IconWrapper","pending","success","failure","Transaction","tx","summary","receipt","status","getBscScanLink","hash","CircleLoader","newTransactionsFirst","b","addedTime","renderTransactions","transactions","flexDirection","TransactionsModal","allTransactions","useAllTransactions","sortedRecentTransactions","isTransactionRecent","confirmed","clearAllTransactionsCallback","minWidth","justifyContent","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","cardBorder","AppHeader","subtitle","helper","backTo","noConfig","alignItems","as","Link","to","BodyWrapper","Card","AppBody","AppBodyPot","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Field","typeInput","resetMintState","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","updateBlockNumber","transformUserData","transformPool","pool","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","getIdentifierKeyFromAddress","nftAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","startsWith","getTokenUriData","tokenId","getErc721Contract","tokenURI","uriDataResponse","ok","uriData","getNftByTokenId","nft","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","useSwitchNetwork","switchNetwork","userChainId","send","RefreshContext","React","slow","fast","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","useRef","onVisibilityChange","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","connectors","icon","MetamaskIcon","connectorId","priority","WalletConnectIcon","TrustWalletIcon","MathWalletIcon","TokenPocketIcon","BinanceChainIcon","SafePalIcon","Coin98Icon","walletLocalStorageKey","WalletWrapper","WalletButton","ConnectModal","sortedConfig","preferredWalletName","preferredWallet","sortedWalletConfig","getPreferredConfig","walletConfig","wallet","isIOS","navigator","userAgent","MSStream","onClickWallet","AccountText","Text","StyledI","AccountModal","textObj","isCopied","setIsCopied","headerBackground","small","explorerLinkText","linkText","onCopy","onPresentAccountModal","uriToHttp","uri","substr","useTransactionAdder","approval","claim","from","s","getTime","useHasPendingApproval","spender","useActiveWeb3ReactV2","web3React","appChainId","appProvider","refEth","setProvider","useEthActiveWeb3React","ethRpcProvider","simpleRpcProvider","setprovider","getDecimalAmount","amount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","displayDecimals","getFullDisplayBalanceFull","formatNumber","number","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","serializedTokensMap","MULTICALL_NETWORKS","useERC20","getBep20Contract","getSigner","useERC20Bridge","useERC20Unsigned","useStakingContract","getStakingContract","useTreasuryContract","withSigner","getTreasuryContract","noSigner","useJackpotContractSigned","useJackpotContract","useAutoVaultContract","getAutoVaultContract","useMaximizerContract","getMaximizerContract","useReferralContract","getReferralContract","useMasterchefSpecial","getMasterchefContract","useCake","getCakeContract","useCakeVaultContract","getCakeVaultContract","useContract","ABI","withSignerIfPossible","ERC20_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","ERC20_BYTES32_ABI","usePairContract","pairAddress","useMulticallContract","MULTICALL_ABI","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensName","ensPath","ERC20_INTERFACE","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","add","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","resolverAddress","ensRegistrarContract","namehash","resolver","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","requestId","nanoid","fetchTokenList","then","tokenList","catch","rejected","errorMessage","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","every","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","stakingAbi","getZapContract","zapAbi","bep20Abi","erc721Abi","jackpotAbi","vaultAbi","maximizerAbi","referralAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","treasuryAbi","utils","requireSuccess","tryAggregate","BSC_TESTNET","MATIC_TESTNET","AVAX_TESTNET","NETWORK_ICON","PolygonChainIcon","AvalancheChainIcon","BLOCK_EXPLORER","BLOCK_EXPLORER_NAME","networks","networkName","rotate","keyframes","StyledSVG","svg","size","strokeWidth","strokeLinecap","strokeLinejoin","pots","potAddress","potId","earningToken","potLabel","potBannerPath","isNew","prizeAmount","expiryDate","isClosed","potsMulti","slowRefresh","PoolIds","LotteryStatus","AuctionStatus","useUpdateNetwork","useAppDispatch","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","rewardRate","lastOraclePrice","rounds","ledgers","claimableStatuses","initializePredictions","getPredictionData","marketData","epochs","range","getRoundsData","roundsResponse","initialRoundData","roundResponse","reduxNodeRound","serializePredictionsRoundsResponse","initializedData","getLedgerData","ledgerResponses","getClaimStatuses","makeLedgerData","fetchRound","predictionContract","fetchRounds","round","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","claimed","getBetHistory","bets","transformBetResponse","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","bet","newestRound","maxBy","futureRound","makeFutureRoundResponse","startBlock","futureRounds","makeRoundData","campaigns","badge","campaignMap","campaign","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","getProposals","skip","ProposalState","ACTIVE","SNAPSHOT_API","gql","proposals","getProposal","proposal","getVotes","where","votes","getVoteVerificationStatuses","block","getBlockNumber","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","SNAPSHOT_VOTING_API","headers","body","statusText","isValid","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","VotingStateLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","getState","proposalVotes","voting","votingSlice","_inValid","IDLE","TICKET_LIMIT_PER_REQUEST","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","roundId","hasRoundBeenClaimed","tickets","ticket","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","GRAPH_API_LOTTERY","lotteries","getLotteriesData","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","cursor","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","ticketsForRound","userTickets","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","getGraphLotteryUser","blankUser","totalCake","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","createReducer","Math","max","currentTimestamp","pairKey","token0Address","token1Address","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","timestamp","audioPlay","lastUpdateVersionTimestamp","removeSerializedPair","tokenAAddress","tokenBAddress","muteAudio","unmuteAudio","txs","lastCheckedBlockNumber","confirmedTime","independentField","INPUT","typedValue","OUTPUT","replaceSwapState","recipient","inputCurrencyId","outputCurrencyId","selectCurrency","otherField","switchCurrencies","setRecipient","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_ACTIVE_LIST_URLS","getVersionUpgrade","VersionUpgrade","NONE","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","replaceZapState","PERSISTED_KEYS","store","configureStore","devTools","achievements","achievementsReducer","blockReducer","farmsReducer","pools","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectibles","collectiblesReducer","votingReducer","lotteryReducer","vaultsReducer","maximizerReducer","networkReducer","multiPoolsReducer","swap","mint","burn","zap","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_BSC_SCAN_URLS","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","useJackpotWithCheck","jackpotAvaxAbi","useStakingContractWithCheck","useErc20TokenContract","Column","ColumnCenter","AutoColumn","BetPosition","SnapshotCommand","ProposalType","toastContext","isMethodArg","isValidMethodArgs","Array","isArray","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","c","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","callData","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","fetchList","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","multicallContract","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","external","_binanceChainListener","defineProperty","bsc","useEagerConnect","isConnectorBinanceChain","isBinanceChainDefined","Reflect","StyledDatePickerPortal","card","input","primaryBright","secondary","DatePickerPortal","onPresentAccountModalV2","copyText","logoutText","copiedText","explorerName","substring","backgroundColor","NetworkButton","ConnectNetworkModal","disabled","networkChainId","alignmentBaseline","fontWeight","textAlign","useNetworkModal","onPresentNetworkModal","StyledConnectNetworkButton","BinanceChain","AvalancheChain","ConnectNetworkButton","useMatchBreakpoints","isXl","isMd","ArrowDropDownSmall","LangSelector","currentLang","langs","setLang","styleProps","startIcon","lang","next","StyledImg","img","Menu","showMenu","setshowMenu","useSelectNetwork","role","src","AccountWalletButton","marginLeft","whiteSpace","FooterPanel","CopyrightLabel","LeftArea","RightArea","SocialPanel","MenuPanel","DescriptionPanel","Background","Footer","currentYear","getFullYear","rel","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","Wrapper","PageLoader","createBrowserHistory","PromotedGradient","StyledRightCard","isPromoted","css","isDesktop","StyledRightCardInner","radii","MobileWrapper","CountdownTimer","days","hours","minutes","seconds","zeroPad","CardHeader","backgroundDisabled","gradients","StyledRightCardHeader","onLockButtonChange","isEnded","onIsEndedChange","restartCounter","isDefault","detailCountdownRef","isStarted","isCompleted","start","onComplete","date","renderer","DepositBannerStyledCard","DepositBannerStyledCardInner","useUserDepositedBalance","jackpotContract","onUserDepositedBalance","player","deposit","depositPot","wait","depositPotUpline","depositAndSetUpline","withdrawPot","withdraw","claimPot","useDepositPots","onDeposit","txHash","useWithdrawPots","onWithdraw","useClaimPots","onClaim","useUplineDepositPots","onUplineDeposit","PotDepositHeading","singleCard","Heading","attrs","PotPrizeHeading","PotPrizeHeadingText","CardAutoColumn","DepositButton","TotalDepositText","UserBalanceText","DepositAmountInput","Input","placeholderTextColor","DepositWithdrawInputGroup","DepositWithdrawalBtnGroup","DepositWithdrawalBtn","BackBtn","ClaimBox","VerticalDivider","PrizeTotalDepositFlex","PrizeTotalDepositItemFlex","PrizeTotalDepositImg","MaxButton","PotDepositBanner","pot","potPrizeTotalDepositData","sessionIdStr","tokenInit","stakingTokenSymbolDecimal","earningTokenSymbolDecimal","userInfoData","cakeInfo","cakeInfoData","potTotalDeposit","potTotalDepositData","potTotalReward","potTotalRewardData","totalDepositFormatted","userBalanceFormatted","userDepositedBalanceFormatted","endDateStr","isMetaMaskInScope","isMetaMask","stakingTokenAddress","earningTokenAddress","handleUserBalance","onUserBalance","useUserBalance","handleUserDepositedBalance","handleApprove","onApprove","approve","constants","MaxUint256","useApprovePot","handleCheckApprove","onCheckApprove","useCheckApprovePot","handleDeposit","handleWithdraw","handleUserReferral","onUserReferral","baseUrl","axios","handleUserClaimable","onUserClaimable","getClaimable","useUserClaimable","handleClaim","handleUserContractReferral","referralContract","onUserContractReferral","getUplineOf","useUserContractReferral","handleUplineDeposit","handleUserWithdrawPenalty","onUserWithdrawPenalty","getPlayerWithdrawPenalty","useUserWithdrawPenalty","accountRef","userBalance","setUserBalance","UserDepositedBalance","setUserDepositedBalance","setAmount","setAllowance","allowanceRef","depositOrWithdraw","setDepositOrWithdraw","lockButton","setLockButton","inAction","setInAction","setIsEnded","isApproved","setIsApproved","isApprovedRef","claimable","setClaimable","refAddress","setRefAddress","isSetUpline","setIsSetUpline","penaltyInfo","setPenaltyInfo","refAdd","ref_address","uplineAdd","getReferral","milliTime","penaltyUntil","getPenalty","scrollTo","checkApprove","isGreaterThan","pancakeChef","getBalance","resultBN","getUserDepositedBalance","getUserClaimable","getData","isPositive","isLessThanOrEqualTo","isLessThan","renderApprovalOrStakeButton","mt","onClickDeposit","maxWidth","onClickWithdraw","onClickClaim","onClickApprove","setToast","withdrawPenaltyCountdownRef","handleWithdrawPenaltyCountdownStart","marginBottom","margin","lock","ended","event","penaltyRate","gt","daysInHours","formatted","asset","DOTS","_","idx","Pagination","onPageChange","totalCount","siblingCount","currentPage","pageSize","useWhite","paginationRange","returnArr","totalPageCount","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","onNext","onPrevious","lastPage","marginTop","paddingLeft","classnames","tabIndex","onKeyPress","pageNumber","selected","BUSD_MAINNET","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","price","priceOf","Price","denominator","numerator","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","JSBI","BigInt","greaterThan","ethBusdPrice","currencyEthPrice","multiply","invert","StyledCard","StyledCardInner","PotWinnerHeading","MText","AddressRowFixed","DateRowFixed","WinnerList","txId","dateMs","dateStr","month","day","year","hour","minute","MModal","CmsModal","LearnMoreModal","TooltipComponent","fee","tooltipPadding","right","dangerouslySetInnerHTML","__html","PotInfoText","PotRewardInfoText","PotDetailCardBody","CardBody","DepositListCardBody","MRowFixed","LearnMoreButton","PotDetailWinnerCard","_page","_locale","_sessionId","totalSponsorshipFormatted","winnerFormatted","musPoolFormatted","referralFormatted","devPoolFormatted","participantFormatted","winnerFiatFormatted","musPoolFiatFormatted","referralFiatFormatted","devPoolFiatFormatted","participantFiatFormatted","cakePriceBusd","currentChaindId","useCakeBusdPrice","cakePriceBusdNum","musPriceBusd","useMusBusdPrice","musPriceBusdNum","userProbability","setUserProbability","potTotalSponsorship","setPotTotalSponsorship","depositListCurrentPage","setDepositListCurrentPage","depositListMax","setDepositListMax","depositListA","setDepositListA","handleCmsContent","onCmsContent","page","jackpot","cmsContent","setCmsContent","onLearnMore","handlePotDepositList","onPotDepositList","usePotDepositList","handlePotSponsorship","onPotSponsorship","getCms","calculateWinRate","totalDepositBN","userDepositedBalanceBN","winRate","isFinite","getDepositList","depositListResult","getSponsorship","sponsorshipResult","sponsorshipResultAmountBN","winner","musPool","referral","devPool","participant","winnerFiat","musPoolFiat","referralFiat","devPoolFiat","participantFiat","musPoolToMus","referralToMus","participantToMus","calculateRewardsContribution","amountFormat","amountArr","join","textDecoration","overflow","shortenAddress","created_at","tx_id","TrophyImg","LastWinnerList","FetchStatus","TabText","TabBox","WinnerListCardBody","PotDetailLastWinnerList","setUserInfo","setCakeInfo","lastSessionId","winnerListA","setWinnerListA","winnerListPage","setWinnerListPage","winnerListMax","setWinnerListMax","handlePotWinnerList","onPotWinnerList","_userInfo","pendingCake","_pendingCake","intervalId","winnerListResult","getWinnerList","totalDepositedStake","StyledCardHeader","session","winnings","Pot","_pot","useERC20Multi","handlePotTotalDeposit","onPotTotalDeposit","usePotTotalDeposit","handleStakingTokenBalance","onStakingTokenBalance","useStakingTokenBalance","handlePotPancakeChefInfo","onPotPancakeChefInfo","MasterChefCalls","potRawStakedBalances","potRawEarnings","usePotPancakeChefInfo","setPotTotalDeposit","setPotTotalReward","isClosedRef","potPancakeChefInfo","potStakingTokenBalanceResult","potStakingTokenBalanceBN","potTotalDepositResult","potTotalDepositBN","usePotTotalRewardTotalDeposit","onPotTotalRewardTotalDeposit","timeContract","timeContractBalance","timeContractBalanceBn","memoContractBalance","memoContractBalanceBN","prizeBN","marginMd","minWidthMd","maxWidthMd","marginSm","minWidthSm","maxWidthSm","TimerCard","PenaltyCountdownTimer","PotHeading","asType","PotAction","finalPotAddress","handleAccountTokenBalance","setBalance","balanceRef","onAccountTokenBalance","fetchBalance","useAccountTokenBalanceCallback","DepositListRow","paginationOnPageNumber","array","calculatePagesCount","DepositListCardHeader","PotDetailDepositList","firstWinnerFormatted","secondWinnerFormatted","thirdWinnerFormatted","platformFormatted","depositList","setDepositList","deposit_id","totalCountBN","depositIdArr","currentPageIdsArr","depositIdInfo","processedDepositIdInfo","block_no","revProcessedDepositIdInfo","reverse","firstWinner","secondWinner","thirdWinner","platform","StyledAutoRow","WinnerCardHeader","PotWinnerList","winnerList","setWinnerList","sessionIdBN","isEqualTo","prevSessionIdArr","prevSessionIdInfo","processedWinnerList","mapIndex","revProcessedWinnerList","usePotWinnerList","PotDetailMulti","useHistory","handlePotTotalRewardTotalDeposit","checkValid","potTotalRewardResult","getTotalRewardTotalDeposit","transformAutoVault","transformMaximizer","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","getImageUrlFromToken","TokenImage","BaseCell","CellContent","StyledCell","ArrowIcon","ChevronDownIcon","toggled","TotalStakedCell","expanded","isZeroPtPb","isFullLayout","StyledText","StyledButton","StyledContent","TokenPairExtraWrapper","TokenPairExtraPrimaryImages","TokenPairExtraSecondaryImages","TokenPairExtraThirdImages","MaximizerTokenWrapper","NameCell","isXs","isSm","isAutoVault","isMaximizer","stakingTokenSymbol","tokenImg","poolLabel","ExpandActionCell","Balance","isDisabled","unit","prefix","previousValue","suffix","duration","separator","Apr","setApr","vaultUrl","maximizerUrl","apiBase","respData","APYCake","APRToken","APRCake","APR","getApr","AprCell","tvlLabel","StyledUsdValue","StyledBalance","usd","setUsd","totalStakedBalance","totalBal","totalUsd","getUsdValue","fontFamily","DepositedCell","vaultStakedBalance","vaultBalance","poolBalance","stakedTokenBalance","ActionContainer","ActionTitles","ActionContent","gasLimit","harvestPool","harvestContract","contractCall","useHarvestPool","stakingContract","vaultContract","maximizerContract","handleHarvest","updateUserPendingReward","updateUserBalance","onReward","CollectModal","formattedBalance","formattedBalanceExtra","earningTokenExtra","isBnbPool","poolID","pendingTx","setPendingTx","handleHarvestConfirm","cardHeader","endIcon","spin","pb","StyledActionText","StyledHeading","FlexBreakLine","TempButton","LearnMoreText","HarvestAction","extraRewardToken","earningTokenPrice","rewardToken","earningsExtra","earningTokenBalance","earningExtraTokenBalance","hasEarnings","onPresentCollect","actionTitle","lineHeight","PercentageButton","onStake","depositContract","stake","useStakePool","handleStake","updateUserStakedBalance","onUnstake","withdrawContract","maxAmount","unstakeAmt","useUnstakePool","handleUnstake","StartText","EndText","BalanceInput","StyledFlex","StyledInputFlex","InfoFlex","StakeModal","isRemovingStake","enableEmergencyWithdraw","stakeAmount","setStakeAmount","hasReachedStakeLimit","getCalculatedStakingLimit","handleConfirmClick","onUserInput","sliderPercent","percentageOfStakingMax","multipliedBy","amountToStake","handleChangePercent","useStyles","makeStyles","grid","GridContainer","classes","classN","Grid","container","defaultProps","position","minHeight","paddingRight","flexBasis","GridItem","item","flexContainer","breakpoints","down","display","horizontalDisplay","root","fixed","displayNone","tabIcon","letterSpacing","pills","transition","fontStyle","textTransform","horizontalPills","float","tabWrapper","contentWrapper","tabContent","tabContentNoPadding","red","boxShadow","NavPills","tabs","horizontal","alignCenter","active1","tabNoPadding","active","setActive","flexContainerClasses","classNames","tabButtons","Tabs","indicator","centered","prop","newKey","white","pillsClasses","Tab","label","tabButton","wrapper","tabKey","tabContentStyle","tabsGrid","contentGrid","Staked","stakingTokenContract","spenderAddress","lpContract","earningTokenSymbol","requestedApproval","setRequestedApproval","updateUserAllowance","useApprovePool","handlePoolApprove","requestedPoolApproval","needsApproval","tabOpt","stakingTokenPrice","xs","expandAnimation","collapseAnimation","StyledActionPanel","VerticalLine","ActionPanel","Stake","Harvest","StyledRow","StyledRowMobile","PoolRow","isLg","setExpanded","shouldRenderActionPanel","toggleExpanded","StyledTable","StyledTableBorder","PoolsTable","tableWrapperEl","poolKey","PoolWrapper","Banner","Pools","fetchPoolsUserDataAsync","usePools","poolsWithoutAutoVault","useVaults","vaultUserDataLoaded","useMaximizers","maximizerUserDataLoaded","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","chosenPoolsLength","banner","staking","vaultPool","maximizerPool","partition","openPools","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","useFetchPublicPoolsData","fetchVaultPublicData","useFetchPublicVaultData","fetchMaximizerPublicData","useFetchPublicMaximizerData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","tableLayout","transformMultiPool","apyFloat","checkAPYValid","finalContractAddress","useMultiPool","multiPoolUserDataLoaded","fetchMultiPoolPublicData","useFetchPublicMultiPoolData","NotFound","lazy","PotMulti","App","usePollBlockNumber","MultiPools","exact","strict","component","PotDetail","ThemeProviderWrapper","dark","light","Providers","GoTop","isVisible","setisVisible","toggleVisibility","pageYOffset","top","behavior","Updaters","Blocklist","BLOCKED_ADDRESSES","ReactDOM","render","StrictMode","getElementById","Result","numberOrNull","valueNum","betResponse","BULL","BEAR","claimedHash","totalBets","totalBNB","transformRoundResponse","positionResponse","failed","startAt","lockAt","lockBlock","lockPrice","endBlock","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","GRAPH_API_PREDICTION","ledgerCalls","claimableCalls","claimableResponses","claimableResponse","staticCalls","paused","PAUSED","LIVE","rewardBaseCalAmount","rewardAmount","oracleCalled","ledgerResponse","eq","serializePredictionsLedgerResponse","parseBigNumberObj","chars","parsed","calculateGasMargin","mul","basisPointsToPercent","num","Percent","calculateSlippageAmount","divide","AddressZero","connectUnchecked","getProviderOrSigner","getRouterContract","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","CORE","harvest","tokenPerBlock","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","getPoolApr","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","fetchPoolsAllowance","bnbBalance","bnbBalances","stakingABI","convertSharesToCake","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","blockLimits","blockLimit","isPoolEndBlockExceeded","isPoolFinished","setPoolsPublicData","stakingLimitData","setPoolsUserData","updatePoolsUserData","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","getRpcUrl","ETH_RPC_URL","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","GRAPH_API_PROFILE","SNAPSHOT_BASE_URL"],"mappings":"wTAUaA,EAAY,uCAAG,8BAAAC,EAAA,2DACpBC,EAAWC,OAAOC,UADE,wBAGlBC,EAAUC,SAASC,KAAgC,IAHjC,kBAKhBL,EAASM,QAAQ,CACrBC,OAAQ,0BACRC,OAAQ,CACN,CACEL,QAAQ,KAAD,OAAOA,EAAQM,SAAS,KAC/BC,UAAW,8BACXC,eAAgB,CACdC,KAAM,MACNC,OAAQ,MACRC,SAAU,IAEZC,QAASC,IACTC,kBAAmB,CAAC,GAAD,OAAIC,IAAJ,UAjBH,iCAqBf,GArBe,uCAuBtBC,QAAQC,MAAM,2CAAd,MAvBsB,mBAwBf,GAxBe,uCA2BxBD,QAAQC,MAAM,gFA3BU,mBA4BjB,GA5BiB,yDAAH,qDAiCZC,EAAc,uCAAG,WAAOlB,GAAP,eAAAJ,EAAA,2DACtBC,EAAWC,OAAOC,UADI,0CAIlBF,EAASM,QAAQ,CACrBC,OAAQ,0BACRC,OAAQ,CAACc,IAAanB,MANA,iCAQjB,GARiB,uCAUxBgB,QAAQI,KAAR,MAVwB,mBAWjB,GAXiB,uCAc1BJ,QAAQI,KAAK,gFAda,mBAenB,GAfmB,yDAAH,sDAuBdC,EAAe,uCAAG,8BAAAzB,EAAA,2DACvBC,EAAWC,OAAOC,UADK,wBAGrBC,EAAUC,SAASC,IAAoC,IAHlC,kBAKnBL,EAASM,QAAQ,CACrBC,OAAQ,6BACRC,OAAQ,CACN,CACEL,QAAQ,KAAD,OAAOA,EAAQM,SAAS,SATZ,iCAqBlB,GArBkB,uCAuBzBU,QAAQC,MAAM,2CAAd,MAvByB,mBAwBlB,GAxBkB,uCA2B3BD,QAAQC,MAAM,gFA3Ba,mBA4BpB,GA5BoB,yDAAH,qDAuCfK,EAAa,uCAAG,WAAOC,EAAsBC,EAAqBC,GAAlD,eAAA7B,EAAA,sEACFE,OAAOC,SAASI,QAAQ,CAC/CC,OAAQ,oBACRC,OAAQ,CACNqB,KAAM,QACNC,QAAS,CACPC,QAASL,EACTb,OAAQc,EACRb,SAAUc,EACVI,MAAM,GAAD,OAAKC,IAAL,0BAA+BP,EAA/B,YATgB,cACrBQ,EADqB,yBAcpBA,GAdoB,2CAAH,2D,iCCvG1B,sGAAO,IAEMC,EAAe,CAAEC,OAAQ,QAASC,SAAU,UAAWC,KAAM,MA2B7DC,EAAY,CAGvB,QAASJ,EAWT,QA9B0B,CAAEC,OAAQ,QAASC,SAAU,qBAAOC,KAAM,MA+BpE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,qBAAOC,KAAM,MA0CpE,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,2BAAQC,KAAM,UAkC5DE,EAAeC,OAAOC,OAAOH,I,2GCtDpCI,EAAuBC,YAAOC,IAAPD,CAAH,oFAkBXE,IAba,SAACC,GAC3B,MAA4CC,cAApCC,EAAR,EAAQA,EACR,GADA,EAAWC,gBAAX,EAA4BC,YACFC,eAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEgBC,GADGC,aAAeH,EAAOC,OAAQG,EAAW,IAAnEC,sBACmDC,YAAiBN,EAAOC,OAAQG,EAAW,IAA9FC,uBAER,OACE,cAACf,EAAD,yBAAsBiB,QAASL,GAA6BR,GAA5D,aACGE,EAAE,uB,gVCyCMY,EA3DuB,CACpC,CACEC,YAAa,EACbC,aAAcC,IAAOC,UACrBC,cAAe,CACbC,KAAMH,IAAOI,KACbC,MAAOL,IAAOM,SAEhBC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENC,gBAAiB,yBACjBC,YAAY,GAEd,CACEX,YAAa,EACbC,aAAcC,IAAOU,MACrBR,cAAe,CACbC,KAAMH,IAAOI,KACbC,MAAOL,IAAOM,SAEhBC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENC,gBAAiB,qBACjBC,YAAY,GAEd,CACEX,YAAa,EACbC,aAAcC,IAAOW,OACrBT,cAAe,CACbC,KAAMH,IAAOI,KACbC,MAAOL,IAAOM,SAEhBC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENC,gBAAiB,sBACjBC,YAAY,GAEd,CACEX,YAAa,EACbC,aAAcC,IAAOY,SACrBV,cAAe,CACbC,KAAMH,IAAOI,KACbC,MAAOL,IAAOM,SAEhBC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENC,gBAAiB,wBACjBC,YAAY,I,0CCnDHI,EAA2B,uCAAG,8BAAA9E,EAAA,6DACnC+E,EAAQC,EAAiBC,KAAI,SAACC,GAAD,MAAQ,CACzClD,QAASmD,YAAWD,EAAEV,iBACtB3D,KAAM,iBACNJ,OAAQ,CAACyE,EAAEnB,iBAJ4B,SAOLqB,YAAUC,EAAcN,GAPnB,cAOnCO,EAPmC,qCAUpCN,EAAiBC,KAAI,SAACC,EAAGK,GAAJ,MAAe,CACrCxB,YAAamB,EAAEnB,YACfyB,YAAa,IAAIC,IAAUH,EAAsBC,GAAO,GAAG7E,YAAYgF,eAZlC,2CAAH,qD,QCC3BC,EAAwB,uCAAG,WAAOC,GAAP,iBAAA5F,EAAA,6DAChC+E,EAAQC,EAAiBC,KAAI,SAACC,GAAD,MAAQ,CACzClD,QAASmD,YAAWD,EAAElB,aAAahC,SACnCnB,KAAM,YACNJ,OAAQ,CAACmF,EAAST,YAAWD,EAAEV,sBAJK,SAObY,YAAUS,EAAUd,GAPP,cAOhCe,EAPgC,yBAQ/Bd,EAAiBe,QACtB,SAACC,EAAKC,EAAWV,GAAjB,mBAAC,eAAgCS,GAAjC,kBAAuCC,EAAUlC,YAAc,IAAI0B,IAAUK,EAAWP,IAAQG,aAChG,KAVoC,2CAAH,sDAcxBQ,EAAiB,uCAAG,WAAON,GAAP,mBAAA5F,EAAA,6DACzB+E,EAAQC,EAAiBC,KAAI,SAACC,GAAD,MAAQ,CACzClD,QAASmD,YAAWD,EAAElB,aAAahC,SACnCnB,KAAM,YACNJ,OAAQ,CAACmF,OAJoB,SAMAR,YAAUS,EAAUd,GANpB,cAMzBoB,EANyB,OAOzBC,EAAgBpB,EAAiBe,QACrC,SAACC,EAAKC,EAAWV,GAAjB,mBAAC,eAAgCS,GAAjC,kBAAuCC,EAAUlC,YAAc,IAAI0B,IAAUU,EAAiBZ,IAAQG,aACtG,IAT6B,kBAYxBU,GAZwB,2CAAH,sDAejBC,EAAsB,uCAAG,WAAOT,GAAP,mBAAA5F,EAAA,6DAC9B+E,EAAQC,EAAiBC,KAAI,SAACC,GAAD,MAAQ,CACzClD,QAASmD,YAAWD,EAAEV,iBACtB3D,KAAM,WACNJ,OAAQ,CAACmF,EAASV,EAAEnB,iBAJc,SAMbqB,YAAUC,EAAcN,GANX,cAM9BuB,EAN8B,OAO9BC,EAAiBvB,EAAiBe,QACtC,SAACC,EAAKC,EAAWV,GAAjB,mBAAC,eACIS,GADL,kBAEGC,EAAUlC,YAAc,IAAI0B,IAAUa,EAASf,GAAO,GAAG7E,YAAYgF,aAExE,IAZkC,iCAexBa,IAfwB,2CAAH,sDAkBtBC,EAAuB,uCAAG,WAAOZ,GAAP,mBAAA5F,EAAA,6DAC/B+E,EAAQC,EAAiBC,KAAI,SAACC,GAAD,MAAQ,CACzClD,QAASmD,YAAWD,EAAEV,iBACtB3D,KAAM,eACNJ,OAAQ,CAACyE,EAAEnB,YAAa6B,OAJW,SAMZR,YAAUC,EAAcN,GANZ,cAM/B0B,EAN+B,OAO/BC,EAAiB1B,EAAiBe,QACtC,SAACC,EAAKC,EAAWV,GAAjB,mBAAC,eACIS,GADL,kBAEGC,EAAUlC,YAAc,IAAI0B,IAAUgB,EAAWlB,IAAQG,aAE5D,IAZmC,iCAezBgB,IAfyB,2CAAH,sDAkBvBC,EAA+B,uCAAG,WAAOf,GAAP,mBAAA5F,EAAA,6DACvC+E,EAAQC,EAAiBC,KAAI,SAACC,GAAD,MAAQ,CACzClD,QAASmD,YAAWD,EAAEV,iBACtB3D,KAAM,mBACNJ,OAAQ,CAACyE,EAAEnB,YAAa6B,OAJmB,SAMpBR,YAAUC,EAAcN,GANJ,cAMvC0B,EANuC,OAOvCG,EAAyB5B,EAAiBe,QAC9C,SAACC,EAAKC,EAAWV,GAAjB,mBAAC,eACIS,GADL,kBAEGC,EAAUlC,YAAc,IAAI0B,IAAUgB,EAAWlB,IAAQG,aAE5D,IAZ2C,iCAejCkB,IAfiC,2CAAH,sD,SC5DtCC,EAAgC,CACpCC,KAAK,YAAKC,GACVC,gBAAgB,GAGLC,EAAgC,yDAAM,WAAOC,GAAP,iBAAAlH,EAAA,sEACrB8E,IADqB,OAC3CqC,EAD2C,OAG3CC,EAAWL,EAAgB9B,KAAI,SAACgB,GACpC,IAAMoB,EAAeF,EAAcG,MAAK,SAACC,GAAD,OAAWA,EAAMxD,cAAgBkC,EAAUlC,eAEnF,OAAO,eACFsD,MAIPH,EAASM,EAAuBJ,IAXiB,2CAAN,uDAchCK,EAA8B,SAAC7B,GAAD,8CAA+B,WAAOsB,GAAP,yBAAAlH,EAAA,sEAC/C2F,EAAyBC,GADsB,cAClEE,EADkE,gBAErCI,EAAkBN,GAFmB,cAElE8B,EAFkE,gBAG3CrB,EAAuBT,GAHoB,cAGlEW,EAHkE,iBAI3CC,EAAwBZ,GAJmB,eAIlEc,EAJkE,iBAKnCC,EAAgCf,GALG,QAKlEgB,EALkE,OAOlEe,EAAWZ,EAAgB9B,KAAI,SAACgB,GAAD,MAAgB,CACnDlC,YAAakC,EAAUlC,YACvB6D,UAAW9B,EAAWG,EAAUlC,aAChC8D,oBAAqBH,EAAqBzB,EAAUlC,aACpD+D,cAAevB,EAAeN,EAAUlC,aACxCgE,cAAerB,EAAeT,EAAUlC,aACxCiE,sBAAuBpB,EAAuBX,EAAUlC,iBAG1DmD,EAASe,EAAqBN,IAhB0C,4CAA/B,uDAmB9BO,EAA+B,SAACnE,EAAqB6B,GAAtB,8CAAoD,WAAOsB,GAAP,eAAAlH,EAAA,sEACrE2F,EAAyBC,GAD4C,OACxFE,EADwF,OAE9FoB,EAASiB,EAAwB,CAAEpE,cAAaqE,MAAO,YAAaC,MAAOvC,EAAW/B,MAFQ,2CAApD,uDAK/BuE,EAA6B,SAACvE,EAAqB6B,GAAtB,8CAAoD,WAAOsB,GAAP,eAAAlH,EAAA,sEAChEkG,EAAkBN,GAD8C,OACtFQ,EADsF,OAE5Fc,EAASiB,EAAwB,CAAEpE,cAAaqE,MAAO,sBAAuBC,MAAOjC,EAAcrC,MAFP,2CAApD,uDAK7BwE,EAAmC,SAACxE,EAAqB6B,GAAtB,8CAAoD,WAAOsB,GAAP,eAAAlH,EAAA,sEACrEqG,EAAuBT,GAD8C,OAC5FW,EAD4F,OAElGW,EAASiB,EAAwB,CAAEpE,cAAaqE,MAAO,gBAAiBC,MAAO9B,EAAexC,MAFI,2CAApD,uDAKnCyE,EAAmC,SAACzE,EAAqB6B,GAAtB,8CAAoD,WAAOsB,GAAP,eAAAlH,EAAA,sEACrEwG,EAAwBZ,GAD6C,OAC5Fc,EAD4F,OAElGQ,EAASiB,EAAwB,CAAEpE,cAAaqE,MAAO,gBAAiBC,MAAO3B,EAAe3C,MAFI,2CAApD,uDAKnC0E,EAA2C,SAAC1E,EAAqB6B,GAAtB,8CAAoD,WAAOsB,GAAP,eAAAlH,EAAA,sEACrE2G,EAAgCf,GADqC,OACpGgB,EADoG,OAE1GM,EAASiB,EAAwB,CAAEpE,cAAaqE,MAAO,wBAAyBC,MAAOzB,EAAuB7C,MAFJ,2CAApD,uDAK3C2E,EAAkBC,YAAY,CACzC9H,KAAM,aACNgG,eACA+B,SAAU,CACRpB,uBAAwB,SAACqB,EAAOC,GAC9B,IAAMC,EAAkCD,EAAOE,QAC/CH,EAAM/B,KAAO+B,EAAM/B,KAAK7B,KAAI,SAACgB,GAC3B,IAAMgD,EAAoBF,EAAmBzB,MAAK,SAACC,GAAD,OAAWA,EAAMxD,cAAgBkC,EAAUlC,eAC7F,OAAO,2BAAKkC,GAAcgD,OAG9BhB,qBAAsB,SAACY,EAAOC,GAC5B,IAAMnB,EAAWmB,EAAOE,QACxBH,EAAM/B,KAAO+B,EAAM/B,KAAK7B,KAAI,SAACgB,GAC3B,IAAMiD,EAAoBvB,EAASL,MAAK,SAACC,GAAD,OAAWA,EAAMxD,cAAgBkC,EAAUlC,eACnF,OAAO,2BAAKkC,GAAZ,IAAuB0B,SAAUuB,OAEnCL,EAAM7B,gBAAiB,GAEzBmB,wBAAyB,SAACU,EAAOC,GAC/B,MAAsCA,EAAOE,QAArCZ,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOtE,EAAtB,EAAsBA,YAChBwB,EAAQsD,EAAM/B,KAAKqC,WAAU,SAACjE,GAAD,OAAOA,EAAEnB,cAAgBA,KAExDwB,GAAS,IACXsD,EAAM/B,KAAKvB,GAAX,2BAAyBsD,EAAM/B,KAAKvB,IAApC,IAA4CoC,SAAS,2BAAMkB,EAAM/B,KAAKvB,GAAOoC,UAAzB,kBAAoCS,EAAQC,SAItGe,cAAe,SAACC,GACdA,EAAQC,QAAQC,KAAe,SAACV,GAE9BA,EAAM/B,KAAOD,EAAaC,KAC1B+B,EAAM7B,eAAiBH,EAAaG,qBAMnC,EAAkF0B,EAAgBc,QAA1FhC,EAAR,EAAQA,uBAAwBS,EAAhC,EAAgCA,qBAAsBE,EAAtD,EAAsDA,wBAE9CO,MAAf,S,gVCnFee,EA9Be,CAC5B,CACEC,QAAS,EACT1F,aAAcC,IAAOI,KACrBF,cAAe,CACbC,KAAMH,IAAOI,KACbC,MAAOL,IAAOM,SAEhBC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENmF,YAAa,mBACbjF,YAAY,GAEd,CACEgF,QAAS,EACT1F,aAAcC,IAAOI,KACrBF,cAAe,CACbC,KAAMH,IAAOM,SAEfC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENmF,YAAa,mBACbjF,YAAY,I,0CCvBHkF,EAA2B,uCAAG,8BAAA5J,EAAA,6DACnC+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,uBACNJ,OAAQ,OAJ+B,SAOT2E,YAAU2E,EAAUhF,GAPX,cAOnCiF,EAPmC,qCAUpCH,EAAY5E,KAAI,SAAC6E,EAAGvE,GAAJ,MAAe,CAChCmE,QAASI,EAAEJ,QACXM,kBAAmB,IAAIvE,IAAUuE,EAAkBzE,IAAQG,eAZtB,2CAAH,qDAiB3BuE,EAAqB,uCAAG,8BAAAjK,EAAA,6DAC7B+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,cACNJ,OAAQ,OAJyB,SAOT2E,YAAU2E,EAAUhF,GAPX,cAO7BmF,EAP6B,qCAU9BL,EAAY5E,KAAI,SAAC6E,EAAGvE,GAAJ,MAAe,CAChCmE,QAASI,EAAEJ,QACXQ,YAAa,IAAIzE,IAAUyE,EAAY3E,IAAQG,eAZhB,2CAAH,qDAiBrByE,EAAiC,uCAAG,8BAAAnK,EAAA,6DACzC+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,mCACNJ,OAAQ,OAJqC,SAOV2E,YAAU2E,EAAUhF,GAPV,cAOzCqF,EAPyC,qCAU1CP,EAAY5E,KAAI,SAAC6E,EAAGvE,GAAJ,MAAe,CAChCmE,QAASI,EAAEJ,QACXW,oBAAqB,IAAI5E,IAAU2E,EAAuB7E,IAAQG,eAZvB,2CAAH,qDAiBjC4E,EAAwB,uCAAG,8BAAAtK,EAAA,6DAChC+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,iBACNJ,OAAQ,OAJ4B,SAOT2E,YAAU2E,EAAUhF,GAPX,cAOhCwF,EAPgC,qCAUjCV,EAAY5E,KAAI,SAAC6E,EAAGvE,GAAJ,MAAe,CAChCmE,QAASI,EAAEJ,QACXa,eAAgB,IAAI9E,IAAU8E,EAAehF,IAAQG,eAZnB,2CAAH,qDAiBxB8E,EAAoB,uCAAG,8BAAAxK,EAAA,6DAC5B+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,YACNJ,OAAQ,OAJwB,SAOT2E,YAAU2E,EAAUhF,GAPX,cAO5B0F,EAP4B,qCAU7BZ,EAAY5E,KAAI,SAAC6E,EAAGvE,GAAJ,MAAe,CAChCmE,QAASI,EAAEJ,QACXgB,kBAAmB,IAAIjF,IAAUgF,EAAWlF,IAAQG,eAZtB,2CAAH,qD,QClEpBiF,EAAwB,uCAAG,WAAO/E,GAAP,iBAAA5F,EAAA,6DAChC+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAE9F,aAAahC,SACnCnB,KAAM,YACNJ,OAAQ,CAACmF,EAAST,YAAW2E,EAAEtF,sBAJK,SAObY,YAAUwF,EAAU7F,GAPP,cAOhCe,EAPgC,yBAQ/B+D,EAAY9D,QACjB,SAACC,EAAK6E,EAAOtF,GAAb,mBAAC,eAA4BS,GAA7B,kBAAmC6E,EAAMnB,QAAU,IAAIjE,IAAUK,EAAWP,IAAQG,aACpF,KAVoC,2CAAH,sDAcxBQ,EAAiB,uCAAG,WAAON,GAAP,mBAAA5F,EAAA,6DACzB+E,EAAQ8E,EAAY5E,KAAI,SAAC6F,GAAD,MAAQ,CACpC9I,QAASmD,YAAW2F,EAAE9G,aAAahC,SACnCnB,KAAM,YACNJ,OAAQ,CAACmF,OAJoB,SAMAR,YAAUwF,EAAU7F,GANpB,cAMzBoB,EANyB,OAOzBC,EAAgByD,EAAY9D,QAChC,SAACC,EAAK6E,EAAOtF,GAAb,mBAAC,eAA4BS,GAA7B,kBAAmC6E,EAAMnB,QAAU,IAAIjE,IAAUU,EAAiBZ,IAAQG,aAC1F,IAT6B,kBAYxBU,GAZwB,2CAAH,sDAejB2E,EAAe,uCAAG,WAAOnF,GAAP,mBAAA5F,EAAA,6DACvB+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,WACNJ,OAAQ,CAACmF,OAJkB,SAONR,YAAU2E,EAAUhF,GAPd,cAOvBuB,EAPuB,OAQvB0E,EAASnB,EAAY9D,QACzB,SAACC,EAAK6E,EAAOtF,GAAb,mBAAC,eACIS,GADL,kBAEG6E,EAAMnB,QAAU,IAAIjE,IAAUa,EAASf,GAAO,GAAG7E,YAAYgF,aAEhE,IAb2B,iCAgBjBsF,IAhBiB,2CAAH,sDAmBfC,EAAe,uCAAG,WAAOrF,GAAP,mBAAA5F,EAAA,6DACvB+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,gBACNJ,OAAQ,CAACmF,OAJkB,SAONR,YAAU2E,EAAUhF,GAPd,cAOvBuB,EAPuB,OAQvB0E,EAASnB,EAAY9D,QACzB,SAACC,EAAK6E,EAAOtF,GAAb,mBAAC,eACIS,GADL,kBAEG6E,EAAMnB,QAAU,IAAIjE,IAAUa,EAASf,GAAO7E,YAAYgF,aAE7D,IAb2B,iCAgBjBsF,IAhBiB,2CAAH,sDAmBfxE,EAAuB,uCAAG,WAAOZ,GAAP,mBAAA5F,EAAA,6DAC/B+E,EAAQ8E,EAAY5E,KAAI,SAAC6E,GAAD,MAAQ,CACpC9H,QAASmD,YAAW2E,EAAEtF,iBACtB3D,KAAM,eACNJ,OAAQ,CAACmF,OAJ0B,SAOnBR,YAAU2E,EAAUhF,GAPD,cAO/BmG,EAP+B,OAQ/BxE,EAAiBmD,EAAY9D,QACjC,SAACC,EAAK6E,EAAOtF,GAAb,mBAAC,eACIS,GADL,kBAEG6E,EAAMnB,QAAU,IAAIjE,IAAUyF,EAAI3F,GAAO7E,YAAYgF,aAExD,IAbmC,iCAgBzBgB,IAhByB,2CAAH,sD,SCxD9BG,EAA+B,CACnCC,KAAK,YAAK+C,GACV7C,gBAAgB,GAGLmE,EAA4B,yDAAM,WAAOjE,GAAP,yBAAAlH,EAAA,sEACZ4J,IADY,cACvCwB,EADuC,gBAElBnB,IAFkB,cAEvCoB,EAFuC,gBAGNlB,IAHM,cAGvCmB,EAHuC,iBAIfhB,IAJe,eAIvCiB,EAJuC,iBAKnBf,IALmB,QAKvCgB,EALuC,OAOvCpE,EAAWyC,EAAY5E,KAAI,SAAC4F,GAChC,IAAMb,EAAoBoB,EAAmB9D,MAAK,SAACC,GAAD,OAAWA,EAAMmC,UAAYmB,EAAMnB,WAC/EQ,EAAcmB,EAAa/D,MAAK,SAACC,GAAD,OAAWA,EAAMmC,UAAYmB,EAAMnB,WACnE+B,EAA0BH,EAAyBhE,MAAK,SAACC,GAAD,OAAWA,EAAMmC,UAAYmB,EAAMnB,WAC3Fa,EAAiBgB,EAAgBjE,MAAK,SAACC,GAAD,OAAWA,EAAMmC,UAAYmB,EAAMnB,WACzEe,EAAae,EAAYlE,MAAK,SAACC,GAAD,OAAWA,EAAMmC,UAAYmB,EAAMnB,WAEvE,OAAO,+DACFQ,GACAF,GACAS,GACAgB,GAJL,IAKEC,KAAK,eACAnB,QAKTrD,EAASyE,EAAmBvE,IAzBiB,4CAAN,uDA4B5BwE,EAA0B,SAAChG,GAAD,8CAA+B,WAAOsB,GAAP,yBAAAlH,EAAA,sEAC3C2K,EAAyB/E,GADkB,cAC9DE,EAD8D,gBAEjCI,EAAkBN,GAFe,cAE9D8B,EAF8D,gBAG9CqD,EAAgBnF,GAH8B,cAG9DiG,EAH8D,iBAIvCrF,EAAwBZ,GAJe,eAI9Dc,EAJ8D,iBAK1CuE,EAAgBrF,GAL0B,QAK9DkG,EAL8D,OAO9DnE,EAAWkC,EAAY5E,KAAI,SAAC4F,GAAD,MAAY,CAC3CnB,QAASmB,EAAMnB,QACf9B,UAAW9B,EAAW+E,EAAMnB,SAC5B7B,oBAAqBH,EAAqBmD,EAAMnB,SAChDqC,WAAYF,EAAQhB,EAAMnB,SAC1BsC,WAAYF,EAAYjB,EAAMnB,SAC9B3B,cAAerB,EAAemE,EAAMnB,aAGtCxC,EAAS+E,EAAiBtE,IAhB0C,4CAA/B,uDAmB1BuE,EAA2B,SAACxC,EAAiB9D,GAAlB,8CAAgD,WAAOsB,GAAP,eAAAlH,EAAA,sEAC7D2K,EAAyB/E,GADoC,OAChFE,EADgF,OAEtFoB,EAASiF,EAAoB,CAAEzC,UAAStB,MAAO,YAAaC,MAAOvC,EAAW4D,MAFQ,2CAAhD,uDAK3B0C,EAAyB,SAAC1C,EAAiB9D,GAAlB,8CAAgD,WAAOsB,GAAP,eAAAlH,EAAA,sEACxDkG,EAAkBN,GADsC,OAC9EQ,EAD8E,OAEpFc,EAASiF,EAAoB,CAAEzC,UAAStB,MAAO,sBAAuBC,MAAOjC,EAAcsD,MAFP,2CAAhD,uDAKzB2C,EAAwB,SAAC3C,EAAiB9D,GAAlB,8CAAgD,WAAOsB,GAAP,eAAAlH,EAAA,sEAC7D+K,EAAgBnF,GAD6C,OAC7EiG,EAD6E,OAEnF3E,EAASiF,EAAoB,CAAEzC,UAAStB,MAAO,aAAcC,MAAOwD,EAAQnC,MAFO,2CAAhD,uDAKxB4C,EAAwB,SAAC5C,EAAiB9D,GAAlB,8CAAgD,WAAOsB,GAAP,eAAAlH,EAAA,sEACzDiL,EAAgBrF,GADyC,OAC7EkG,EAD6E,OAEnF5E,EAASiF,EAAoB,CAAEzC,UAAStB,MAAO,aAAcC,MAAOyD,EAAYpC,MAFG,2CAAhD,uDAKxB6C,EAA+B,SAAC7C,EAAiB9D,GAAlB,8CAAgD,WAAOsB,GAAP,eAAAlH,EAAA,sEAC7DwG,EAAwBZ,GADqC,OACpFc,EADoF,OAE1FQ,EAASiF,EAAoB,CAAEzC,UAAStB,MAAO,gBAAiBC,MAAO3B,EAAegD,MAFI,2CAAhD,uDAK/B8C,EAAc7D,YAAY,CACrC9H,KAAM,SACNgG,eACA+B,SAAU,CACR+C,mBAAoB,SAAC9C,EAAOC,GAC1B,IAAM2D,EAA8B3D,EAAOE,QAC3CH,EAAM/B,KAAO+B,EAAM/B,KAAK7B,KAAI,SAAC4F,GAC3B,IAAM6B,EAAgBD,EAAenF,MAAK,SAACC,GAAD,OAAWA,EAAMmC,UAAYmB,EAAMnB,WAC7E,OAAO,2BAAKmB,GAAU6B,OAG1BT,iBAAkB,SAACpD,EAAOC,GACxB,IAAMnB,EAAWmB,EAAOE,QACxBH,EAAM/B,KAAO+B,EAAM/B,KAAK7B,KAAI,SAAC4F,GAC3B,IAAM8B,EAAgBhF,EAASL,MAAK,SAACC,GAAD,OAAWA,EAAMmC,UAAYmB,EAAMnB,WACvE,OAAO,2BAAKmB,GAAZ,IAAmBlD,SAAUgF,OAE/B9D,EAAM7B,gBAAiB,GAEzBmF,oBAAqB,SAACtD,EAAOC,GAC3B,MAAkCA,EAAOE,QAAjCZ,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOqB,EAAtB,EAAsBA,QAChBnE,EAAQsD,EAAM/B,KAAKqC,WAAU,SAACW,GAAD,OAAOA,EAAEJ,UAAYA,KAEpDnE,GAAS,IACXsD,EAAM/B,KAAKvB,GAAX,2BAAyBsD,EAAM/B,KAAKvB,IAApC,IAA4CoC,SAAS,2BAAMkB,EAAM/B,KAAKvB,GAAOoC,UAAzB,kBAAoCS,EAAQC,SAItGe,cAAe,SAACC,GACdA,EAAQC,QAAQC,KAAe,SAACV,GAE9BA,EAAM/B,KAAOD,EAAaC,KAC1B+B,EAAM7B,eAAiBH,EAAaG,qBAMnC,EAAsEwF,EAAYhD,QAA1EmC,EAAR,EAAQA,mBAAoBM,EAA5B,EAA4BA,iBAAkBE,EAA9C,EAA8CA,oBAEtCK,MAAf,S,wTCnHeI,EAjBuB,CACpC,CACEC,OAAQ,EACR7I,aAAcC,IAAO6I,KACrB3I,cAAe,CACbC,KAAMH,IAAO6I,MAEftI,iBAAe,mBACZuI,IAAcC,IAAM,IADR,cAEZD,IAAcE,KAAO,8CAFT,GAIfC,cAAe,4BACfC,UAAW,EACXzI,YAAY,I,oDCPH0I,EAAsB,uCAAG,WAAOhN,GAAP,mBAAAJ,EAAA,6DAC9BqN,EAAqBC,EAAgBC,QAAO,SAACC,GAAD,OAAWA,EAAMhJ,gBAAgBpE,IAA+C,KAAnCoN,EAAMhJ,gBAAgBpE,MAE/G2E,EAAQsI,EAAmBpI,KAAI,SAACuI,GAAD,MAAY,CAC/CxL,QAASwL,EAAMhJ,gBAAgBpE,GAC/BS,KAAM,gBACNJ,OAAQ,OAN0B,SASV2E,YAAUhF,EAASqN,EAAa1I,GATtB,cAS9BS,EAT8B,qCAY/B6H,EAAmBpI,KAAI,SAACuI,EAAOjI,GAAR,MAAmB,CAC3CsH,OAAQW,EAAMX,OACdrH,YAAa,IAAIC,IAAUD,EAAYD,IAAQG,eAdf,2CAAH,sDAoBtBgI,EAAa,uCAAG,WAAOtN,GAAP,iCAAAJ,EAAA,yDACrBqN,EAAqBC,EAAgBC,QAAO,SAACC,GAAD,OAAWA,EAAMhJ,gBAAgBpE,IAA+C,KAAnCoN,EAAMhJ,gBAAgBpE,MAEjHA,IAAYuN,IAASV,KAHE,wBAKnBW,EAA4BC,YAA6BC,IAAUC,uBAAuB3N,GAAUA,GALjF,SAMLwN,EAA0BI,QANrB,cAMnBA,EANmB,OAOnBC,EAAkB,IAAIxI,IAAUuI,EAAME,WAAWxN,YAGjDyN,EAAeC,YAAyBnK,IAAOoK,KAAKrM,QAAQ5B,GAAUA,GAVnD,UAWO+N,EAAaG,oBAXpB,eAWnBA,EAXmB,OAYnBC,EAAsB,IAAI9I,IAAU6I,EAAkB5N,YAEtD8N,EAAgBP,EAAgBQ,IAAIF,GAEpCG,EAAeF,EAAcG,KAAK,GAAIC,gBAAgB,MAAUC,MAAM,GAEtEC,EAAuBJ,EAAWK,MAAM,KAAKC,QAAQ,GAlBlC,8BAqBpB3B,EAAmBpI,KAAI,SAACuI,EAAOjI,GAAR,MAAmB,CAC3CsH,OAAQW,EAAMX,OACdoC,IAAKH,QAvBgB,6CA4BtBzB,EAAmBpI,KAAI,SAACuI,EAAOjI,GAAR,MAAmB,CAC3CsH,OAAQW,EAAMX,OACdoC,IAAK,UA9BkB,4CAAH,sD,QCvBbC,EAAwB,uCAAG,WAAO9O,EAAiBwF,GAAxB,mBAAA5F,EAAA,6DAChCqN,EAAqBC,EAAgBC,QAAO,SAACC,GAAD,OAAWA,EAAMhJ,gBAAgBpE,IAA+C,KAAnCoN,EAAMhJ,gBAAgBpE,MAE/G2E,EAAQsI,EAAmBpI,KAAI,SAACuI,GAAD,MAAY,CAC/CxL,QAAUwL,EAAMxJ,aAAahC,QAAQ5B,GACrCS,KAAM,YACNJ,OAAQ,CAACmF,EAAU4H,EAAMhJ,gBAAgBpE,QANL,SASbgF,YAAUhF,EAASwK,EAAU7F,GAThB,cAShCe,EATgC,yBAW/BuH,EAAmBtH,QACxB,SAACC,EAAKwH,EAAOjI,GAAb,mBAAC,eAA4BS,GAA7B,kBAAmCwH,EAAMX,OAAS,IAAIpH,IAAUK,EAAWP,IAAQG,aACnF,KAboC,2CAAH,wDAkBxBQ,EAAiB,uCAAG,WAAO9F,EAAiBwF,GAAxB,qBAAA5F,EAAA,6DACzBqN,EAAqBC,EAAgBC,QAAO,SAACC,GAAD,OAAWA,EAAMhJ,gBAAgBpE,IAA+C,KAAnCoN,EAAMhJ,gBAAgBpE,MAE/G2E,EAAQsI,EAAmBpI,KAAI,SAACuI,GAAD,MAAY,CAC/CxL,QAAUwL,EAAMxJ,aAAahC,QAAQ5B,GACrCS,KAAM,YACNJ,OAAQ,CAACmF,OANoB,SAQAR,YAAUhF,EAASwK,EAAU7F,GAR7B,cAQzBoB,EARyB,OASzBC,EAAgBiH,EAAmBtH,QACvC,SAACC,EAAKwH,EAAOjI,GAAb,mBAAC,eAA4BS,GAA7B,kBAAmCwH,EAAMX,OAAS,IAAIpH,IAAUU,EAAiBZ,IAAQG,aACzF,IAX6B,kBAcxBU,GAdwB,2CAAH,wDAkBjB6E,EAAe,uCAAG,WAAO7K,EAAiBwF,GAAxB,qBAAA5F,EAAA,6DACvBqN,EAAqBC,EAAgBC,QAAO,SAACC,GAAD,OAAWA,EAAMhJ,gBAAgBpE,IAA+C,KAAnCoN,EAAMhJ,gBAAgBpE,MAE/G2E,EAAQsI,EAAmBpI,KAAI,SAACuI,GAAD,MAAY,CAC/CxL,QAAUwL,EAAMhJ,gBAAgBpE,GAChCS,KAAM,SACNJ,OAAQ,CAACmF,OANkB,SASNR,YAAUhF,EAASqN,EAAa1I,GAT1B,cASvBuB,EATuB,OAUvB6I,EAAe9B,EAAmBtH,QACtC,SAACC,EAAKwH,EAAOjI,GAAb,mBAAC,eACES,GADH,kBAECwH,EAAMX,OAAS,IAAIpH,IAAUa,EAASf,GAAO,GAAG7E,YAAYgF,aAE7D,IAf2B,iCAkBjByJ,IAlBiB,2CAAH,wDAsBf3I,EAAuB,uCAAG,WAAOpG,EAAiBwF,GAAxB,qBAAA5F,EAAA,6DAC7BqN,EAAqBC,EAAgBC,QAAO,SAACC,GAAD,OAAWA,EAAMhJ,gBAAgBpE,IAA+C,KAAnCoN,EAAMhJ,gBAAgBpE,MAE/G2E,EAAQsI,EAAmBpI,KAAI,SAACuI,GAAD,MAAY,CAC/CxL,QAAUwL,EAAMhJ,gBAAgBpE,GAChCS,KAAM,kBACNJ,OAAQ,CAACmF,OANwB,SASjBR,YAAUhF,EAASqN,EAAa1I,GATf,cAS7BmG,EAT6B,OAU7BxE,EAAiB2G,EAAmBtH,QACxC,SAACC,EAAKwH,EAAOjI,GAAb,mBAAC,eACIS,GADL,kBAEGwH,EAAMX,OAAS,IAAIpH,IAAUyF,EAAI3F,GAAO7E,YAAYgF,aAEvD,IAfiC,iCAkBvBgB,IAlBuB,2CAAH,wD,SClD9BG,EAAgC,CACpCC,KAAK,YAAKwG,GACVtG,gBAAgB,GAGLoI,EAAgC,SAAChP,GAAD,8CAAqB,WAAO8G,GAAP,qBAAAlH,EAAA,sEACtCoN,EAAuBhN,GADe,cAC1DoL,EAD0D,gBAE7CkC,EAActN,GAF+B,OAE1DiP,EAF0D,OAI1DhC,EAAqBC,EAAgBC,QAAO,SAACC,GAAD,OAAWA,EAAMhJ,gBAAgBpE,IAA+C,KAAnCoN,EAAMhJ,gBAAgBpE,MAE/GgH,EAAWiG,EAAmBpI,KAAI,SAACuI,GACvC,IAAM/C,EAAae,EAAYlE,MAAK,SAACC,GAAD,OAAWA,EAAMsF,SAAWW,EAAMX,UAChEyC,EAAMD,EAAK/H,MAAK,SAACC,GAAD,OAAWA,EAAMsF,SAAWW,EAAMX,UAExD,OAAO,2BACFpC,GACA6E,MAIPpI,EAASqI,EAAuBnI,IAhBgC,2CAArB,uDAmBhCoI,EAA8B,SAACpP,EAAiBwF,GAAlB,8CAAgD,WAAOsB,GAAP,uBAAAlH,EAAA,sEAChEkP,EAAyB9O,EAASwF,GAD8B,cACnFE,EADmF,gBAEtDI,EAAkB9F,EAASwF,GAF2B,cAEnF8B,EAFmF,gBAG5DlB,EAAwBpG,EAASwF,GAH2B,cAGnFc,EAHmF,iBAI/DuE,EAAgB7K,EAASwF,GAJsC,QAInFkG,EAJmF,OAMnFnE,EAAW2F,EAAgBrI,KAAI,SAACuI,GAAD,MAAY,CAC/CX,OAAQW,EAAMX,OACdjF,UAAW9B,EAAW0H,EAAMX,QAC5BhF,oBAAqBH,EAAqB8F,EAAMX,QAChDb,WAAYF,EAAY0B,EAAMX,QAC9B9E,cAAerB,EAAe8G,EAAMX,YAGtC3F,EAASuI,EAAqB9H,IAd2D,4CAAhD,uDAiB9B+H,EAA+B,SAACtP,EAAiByM,EAAgBjH,GAAlC,8CAAgE,WAAOsB,GAAP,eAAAlH,EAAA,sEACjFkP,EAAyB9O,EAASwF,GAD+C,OACpGE,EADoG,OAE1GoB,EAASyI,EAAwB,CAAE9C,SAAQzE,MAAO,YAAaC,MAAOvC,EAAW+G,MAFyB,2CAAhE,uDAK/B+C,EAA6B,SAACxP,EAAiByM,EAAgBjH,GAAlC,8CAAgE,WAAOsB,GAAP,eAAAlH,EAAA,sEAC5EkG,EAAkB9F,EAASwF,GADiD,OAClGQ,EADkG,OAExGc,EAASyI,EAAwB,CAAE9C,SAAQzE,MAAO,sBAAuBC,MAAOjC,EAAcyG,MAFU,2CAAhE,uDAK7BgD,EAA4B,SAACzP,EAAiByM,EAAgBjH,GAAlC,8CAAgE,WAAOsB,GAAP,eAAAlH,EAAA,sEAC7EiL,EAAgB7K,EAASwF,GADoD,OACjGkG,EADiG,OAEvG5E,EAASyI,EAAwB,CAAE9C,SAAQzE,MAAO,aAAcC,MAAOyD,EAAYe,MAFoB,2CAAhE,uDAK5BiD,EAAmC,SAAC1P,EAAiByM,EAAgBjH,GAAlC,8CAAgE,WAAOsB,GAAP,eAAAlH,EAAA,sEACjFwG,EAAwBpG,EAASwF,GADgD,OACxGc,EADwG,OAE9GQ,EAASyI,EAAwB,CAAE9C,SAAQzE,MAAO,gBAAiBC,MAAO3B,EAAemG,MAFqB,2CAAhE,uDAKnCkD,EAAkBpH,YAAY,CACzC9H,KAAM,aACNgG,eACA+B,SAAU,CACR2G,uBAAwB,SAAC1G,EAAOC,GAC9B,IAAM2D,EAA8B3D,EAAOE,QAC3CH,EAAM/B,KAAO+B,EAAM/B,KAAK7B,KAAI,SAACuI,GAC3B,IAAMd,EAAgBD,EAAenF,MAAK,SAACC,GAAD,OAAWA,EAAMsF,SAAWW,EAAMX,UAC5E,OAAO,2BAAKW,GAAUd,OAG1B+C,qBAAsB,SAAC5G,EAAOC,GAC5B,IAAMnB,EAAWmB,EAAOE,QACxBH,EAAM/B,KAAO+B,EAAM/B,KAAK7B,KAAI,SAACuI,GAC3B,IAAMwC,EAAoBrI,EAASL,MAAK,SAACC,GAAD,OAAWA,EAAMsF,SAAWW,EAAMX,UAC1E,OAAO,2BAAKW,GAAZ,IAAmB7F,SAAUqI,OAE/BnH,EAAM7B,gBAAiB,GAEzB2I,wBAAyB,SAAC9G,EAAOC,GAC/B,MAAiCA,EAAOE,QAAhCZ,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOwE,EAAtB,EAAsBA,OAChBtH,EAAQsD,EAAM/B,KAAKqC,WAAU,SAACqE,GAAD,OAAWA,EAAMX,SAAWA,KAE3DtH,GAAS,IACXsD,EAAM/B,KAAKvB,GAAX,2BAAyBsD,EAAM/B,KAAKvB,IAApC,IAA4CoC,SAAS,2BAAMkB,EAAM/B,KAAKvB,GAAOoC,UAAzB,kBAAoCS,EAAQC,SAItGe,cAAe,SAACC,GACdA,EAAQC,QAAQC,KAAe,SAACV,GAE9BA,EAAM/B,KAAOD,EAAaC,KAC1B+B,EAAM7B,eAAiBH,EAAaG,qBAMnC,EAAkF+I,EAAgBvG,QAA1F+F,EAAR,EAAQA,uBAAwBE,EAAhC,EAAgCA,qBAAsBE,EAAtD,EAAsDA,wBAE9CI,MAAf,S,iCCpHA,8CAIaxG,EAAgB0G,YAAmB,yB,iCCJhD,oJAcaC,EAAiBD,YAO3B,+BACUE,EAAuBF,YAAmC,qCAC1DG,EAAsBH,YAIhC,oCACUI,EAAqBJ,YAI/B,oC,gzYChCH,gMAOaK,EAAc,SAACC,EAAUvO,EAAiB5B,EAAiBoQ,GACtE,IAAMvQ,EAAWwQ,YAAYrQ,GACvBsQ,EAAgB,OAAGF,QAAH,IAAGA,IAAUvQ,EAEnC,OAAO,IAAI0Q,IAAOC,SAAS5O,EAASuO,EAAKG,IAG9BG,EAAqB,SAAC7O,EAAiB5B,EAAiBoQ,GACnE,OAAOF,EAAYQ,EAAgB9O,EAAS5B,EAASoQ,IAG1CO,EAAwB,SAAC/O,EAAiB5B,EAAiBoQ,GACtE,OAAOF,EAAYU,EAAUhP,EAAS5B,EAASoQ,IAGpC3C,EAA+B,SAAC7L,EAAiB5B,EAAiBoQ,GAC7E,OAAOF,EAAYW,EAAsBjP,EAAS5B,EAASoQ,IAGhDpC,EAA2B,SAACpM,EAAiB5B,EAAiBoQ,GACzE,OAAOF,EAAYY,EAAkBlP,EAAS5B,EAASoQ,K,oECjB1CW,IANE,WACf,MAA8BC,cAA9B,mBAAOC,EAAP,KAAeC,EAAf,KAEA,MAAO,CAAED,SAAQE,MADHC,qBAAWC,KACDH,iB,kcCY1B,SAASI,EAAmBC,EAAcC,GACxC,IAAMC,EAAQC,IAAsBC,SAASJ,GAAQG,IAAsBE,QAAQL,GAAQM,OAAOC,iBAC5FC,EAASL,IAAsBC,SAASH,GAAQE,IAAsBE,QAAQJ,GAAQK,OAAOC,iBAGnG,OAAIL,EAAQM,EAAe,EACvBN,EAAQM,GAAgB,EACrB,EAMF,IAAMC,EAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAUjS,QAASiS,EAAUrQ,QAASqQ,EAAUtR,SAAUsR,EAAUvR,OAAQuR,EAAUxR,OAL9EwR,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOC,KAAKF,UAAUG,YAZ1B,GAAsCC,KAuBhCC,GAA2B,mBAC9BC,IAAQC,QAAU,IADY,cAE9BD,IAAQE,QAAU,IAFY,GAK3BC,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KAExE,SAASC,EAAeC,GAC7B,IAAMC,EAAM,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWK,IAAIF,GAC9B,GAAIC,EAAQ,OAAOA,EAEnB,IAAMjO,EAAMgO,EAAKhP,OAAO8B,QACtB,SAACqN,EAAUf,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIrN,KAAI,SAACoO,GAAW,IAAD,EACf,GAAI,UAACJ,EAAKX,YAAN,aAAC,EAAYe,GACjB,OAAO,2BAAKJ,EAAKX,KAAKe,IAAtB,IAA8BC,GAAID,cAJnB,aACnB,EAKI9F,QAAO,SAACgG,GAAD,OAAqBC,QAAQD,aANrB,QAM4B,GAC3CE,EAAQ,IAAIrB,EAAiBC,EAAWC,GAC9C,QAA+C5O,IAA3C0P,EAASK,EAAMrT,SAASqT,EAAMzR,SAAwB,MAAM0R,MAAM,qBACtE,OAAO,2BACFN,GADL,kBAEGK,EAAMrT,QAFT,2BAGOgT,EAASK,EAAMrT,UAHtB,kBAIKqT,EAAMzR,QAAU,CACfyR,QACAR,cAjBE,eAsBLP,IAGP,OADS,OAATI,QAAS,IAATA,KAAWa,IAAIV,EAAMhO,GACdA,EAGF,SAAS2O,IAQd,OAAOC,aAAkD,SAAChL,GAAD,OAAWA,EAAMiL,MAAMC,SAGlF,SAASC,EAAYC,EAAuBC,GAAyC,IAAD,EAClF,OAAO,EAAP,iBACGvB,IAAQC,QADX,2BAC0BqB,EAAKtB,IAAQC,UAAasB,EAAKvB,IAAQC,WADjE,cAEGD,IAAQE,QAFX,2BAE0BoB,EAAKtB,IAAQE,UAAaqB,EAAKvB,IAAQE,WAFjE,EAOF,SAASsB,EAA4BC,GACnC,IAAMN,EAAQF,IAEd,OAAOS,mBAAQ,WACb,OAAKD,EAGHA,EACGE,QAEAC,KAAK7C,GACL3L,QAAO,SAACyO,EAAWC,GAAgB,IAAD,EAC3BC,EAAO,UAAGZ,EAAMW,UAAT,aAAG,EAAmBC,QACnC,IAAKA,EAAS,OAAOF,EACrB,IAEE,OAAOR,EAAYQ,EADD9R,OAAOiS,OAAO3B,EAAe0B,KAE/C,MAAOrT,GAEP,OADAD,QAAQC,MAAM,yCAA0CA,GACjDmT,KAER9B,GAjBWA,IAmBjB,CAACoB,EAAOM,IAIN,SAASQ,IAA2C,IAAD,EACxD,iBAAOf,aAA2D,SAAChL,GAAD,OAAWA,EAAMiL,MAAMe,yBAAzF,aAAO,EAAmGtH,QACxG,SAACuH,GAAD,OAAUC,IAAsBhD,SAAS+C,MAWtC,SAASE,IAId,OAAOhB,EAFcG,EADES,KAEC5B,EAAeiC,IAKlC,SAASC,IAEd,OAAOf,EAjBF,WACL,IAAML,EAAQF,IACRuB,EAAoBP,IAC1B,OAAOlS,OAAO0S,KAAKtB,GAAOvG,QAAO,SAACuH,GAAD,QAAS,OAACK,QAAD,IAACA,OAAD,EAACA,EAAmBpD,SAAS+C,MAASC,IAAsBhD,SAAS+C,MAazEO,IAKjC,SAASC,IACd,OAAOtC,EAAeiC,GAIjB,SAASM,IAQd,OAAOvB,EANyBhB,EAAewC,GAGdrB,EAA4BY,MAMxD,SAASU,EAAgBX,GAC9B,IAAMD,EAAiBD,IACvB,OAAOpB,QAAO,OAACqB,QAAD,IAACA,OAAD,EAACA,EAAgB9C,SAAS+C,IAK1C,IAAMY,EACe,qBAAZ3C,QAA0B,IAAIA,QAAwC,KAmCxE,SAAS4C,IAEd,OAlCK,SAA2B1C,GAChC,IAAMC,EAAM,OAAGwC,QAAH,IAAGA,OAAH,EAAGA,EAAcvC,IAAIF,GACjC,GAAIC,EAAQ,OAAOA,EAEnB,IAAMjO,EAAMgO,EAAKhP,OAAO8B,QACtB,SAACqN,EAAUf,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIrN,KAAI,SAACoO,GAAW,IAAD,EACf,GAAI,UAACJ,EAAKX,YAAN,aAAC,EAAYe,GACjB,OAAO,2BAAKJ,EAAKX,KAAKe,IAAtB,IAA8BC,GAAID,cAJnB,aACnB,EAKI9F,QAAO,SAACgG,GAAD,OAAqBC,QAAQD,aANrB,QAM4B,GAC3CE,EAAQ,IAAIrB,EAAiBC,EAAWC,GAC9C,QAA+C5O,IAA3C0P,EAASK,EAAMrT,SAASqT,EAAMzR,SAAwB,MAAM0R,MAAM,qBACtE,OAAO,2BACFN,GADL,kBAEGK,EAAMrT,QAFT,2BAGOgT,EAASK,EAAMrT,UAHtB,kBAIKqT,EAAMzR,QAAU,CACfyR,QACAR,cAjBE,eAsBLP,IAGP,OADY,OAAZgD,QAAY,IAAZA,KAAc/B,IAAIV,EAAMhO,GACjBA,EAIiB2Q,CAAkBC,K,iCCpO5C,WAGMC,EAAsB,CAI1B,CACEC,IAAK,EACLC,SAAU,OACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOiS,MACdC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOI,KACd8R,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoS,KACdF,WAAYlS,IAAOmS,MAKrB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqS,KACdH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsS,IACdJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuS,MACdL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwS,IACdN,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyS,GACdP,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0S,IACdR,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2S,IACdT,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4S,IACdV,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6S,KACdX,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8S,IACdZ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+S,MACdb,WAAYlS,IAAOgT,MAErB,CACElB,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiT,MACdf,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkT,QACdhB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmT,KACdjB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoT,IACdlB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqT,IACdnB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsT,IACdpB,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgT,KACdd,WAAYlS,IAAOuT,MAErB,CACEzB,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOI,KACd8R,WAAYlS,IAAOuT,MAErB,CACEzB,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwT,MACdtB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyT,OACdvB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0T,OACdxB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2T,OACdzB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4T,IACd1B,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6T,KACd3B,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8T,KACd5B,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,YACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+T,IACd7B,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgU,IACd9B,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiU,IACd/B,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkU,IACdhC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmU,IACdjC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoU,IACdlC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqU,GACdnC,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsU,KACdpC,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuU,KACdrC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwU,IACdtC,WAAYlS,IAAOgT,MAErB,CACElB,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyU,KACdvC,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0U,OACdxC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2U,MACdzC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4U,OACd1C,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6U,KACd3C,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8U,IACd5C,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+U,GACd7C,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgV,KACd9C,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiV,IACd/C,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkV,IACdhD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmV,KACdjD,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoV,IACdlD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqV,KACdnD,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsV,IACdpD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,YACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuV,GACdrD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwV,KACdtD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyV,MACdvD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0V,KACdxD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2V,KACdzD,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4V,KACd1D,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6V,IACd3D,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOI,KACd8R,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8V,IACd5D,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+V,KACd7D,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgW,KACd9D,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,kBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiW,SACd/D,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkW,KACdhE,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmW,MACdjE,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoW,KACdlE,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqW,IACdnE,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,oBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsW,WACdpE,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuW,IACdrE,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwW,KACdtE,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyW,KACdvE,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0W,KACdxE,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2W,IACdzE,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4W,KACd1E,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6W,IACd3E,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6W,IACd3E,WAAYlS,IAAO8W,KAErB,CACEhF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+W,KACd7E,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgX,MACd9E,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkX,IACdhF,WAAYlS,IAAOmX,MAErB,CACErF,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoX,MACdlF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyU,KACdvC,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqX,IACdnF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsX,IACdpF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,iBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuX,OACdrF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,oBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwX,UACdtF,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,iBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyX,QACdvF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0X,IACdxF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2X,MACdzF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4X,IACd1F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,iBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6X,QACd3F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8X,IACd5F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+X,KACd7F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgY,KACd9F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiY,IACd/F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkY,IACdhG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmY,KACdjG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoY,KACdlG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqY,IACdnG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsY,KACdpG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuY,IACdrG,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwY,KACdtG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyY,IACdvG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0Y,KACdxG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmX,KACdjF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2Y,KACdzG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4Y,IACd1G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6Y,KACd3G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,kBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8Y,QACd5G,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+Y,MACd7G,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgZ,IACd9G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiZ,IACd/G,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkZ,MACdhH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmZ,KACdjH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoZ,KACdlH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqZ,IACdnH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsZ,IACdpH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuZ,MACdrH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwZ,MACdtH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyZ,IACdvH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0Z,IACdxH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2Z,KACdzH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4Z,KACd1H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6Z,KACd3H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8Z,IACd5H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+Z,KACd7H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOga,IACd9H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOia,IACd/H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOka,MACdhI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOma,KACdjI,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoa,IACdlI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqa,MACdnI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsa,MACdpI,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOua,KACdrI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwa,IACdtI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOya,IACdvI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0a,KACdxI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2a,KACdzI,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4a,IACd1I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6a,KACd3I,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8a,IACd5I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+a,IACd7I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgb,KACd9I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiX,IACd/E,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOib,MACd/I,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkb,OACdhJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmb,MACdjJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOob,MACdlJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqb,MACdnJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsb,MACdpJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOub,OACdrJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwb,MACdtJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyb,IACdvJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgT,KACdd,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0b,IACdxJ,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2b,KACdzJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4b,IACd1J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6b,MACd3J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8b,KACd5J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+b,MACd7J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgc,IACd9J,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOic,MACd/J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkc,KACdhK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmc,KACdjK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoc,IACdlK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqc,IACdnK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsc,IACdpK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuc,IACdrK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwc,IACdtK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyc,IACdvK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0c,KACdxK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2c,IACdzK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuT,KACdrB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4c,MACd1K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyU,KACdvC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwU,IACdtC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6c,IACd3K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8c,IACd5K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuT,KACdrB,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+c,KACd7K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgd,IACd9K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOid,IACd/K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkd,KACdhL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmd,IACdjL,WAAYlS,IAAOmS,MAKrB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOI,KACd8R,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,oBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwX,UACdtF,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,iBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyX,QACdvF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0X,IACdxF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2X,MACdzF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4X,IACd1F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwT,MACdtB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,iBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6X,QACd3F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8X,IACd5F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+X,KACd7F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgY,KACd9F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiY,IACd/F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkU,IACdhC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkY,IACdhG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmY,KACdjG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoY,KACdlG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0U,OACdxC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqY,IACdnG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsY,KACdpG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuY,IACdrG,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuU,KACdrC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwY,KACdtG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyY,IACdvG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0Y,KACdxG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqT,IACdnB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmX,KACdjF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmU,IACdjC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2Y,KACdzG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0V,KACdxD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4Y,IACd1G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6Y,KACd3G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,kBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8Y,QACd5G,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+Y,MACd7G,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgZ,IACd9G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiZ,IACd/G,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkZ,MACdhH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmZ,KACdjH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoZ,KACdlH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqZ,IACdnH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsZ,IACdpH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuZ,MACdrH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwZ,MACdtH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyZ,IACdvH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0Z,IACdxH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2Z,KACdzH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4Z,KACd1H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6Z,KACd3H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8Z,IACd5H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+Z,KACd7H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOga,IACd9H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOia,IACd/H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOka,MACdhI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoX,MACdlF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0W,KACdxE,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOma,KACdjI,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoa,IACdlI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqa,MACdnI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsa,MACdpI,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOua,KACdrI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwa,IACdtI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOya,IACdvI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0a,KACdxI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2a,KACdzI,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4a,IACd1I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6a,KACd3I,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8a,IACd5I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgW,KACd9D,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+a,IACd7I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgb,KACd9I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiX,IACd/E,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOib,MACd/I,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkb,OACdhJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmb,MACdjJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOob,MACdlJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqb,MACdnJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsb,MACdpJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOub,OACdrJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwb,MACdtJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyb,IACdvJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgT,KACdd,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0b,IACdxJ,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2b,KACdzJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4b,IACd1J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6b,MACd3J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8b,KACd5J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+b,MACd7J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgc,IACd9J,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOic,MACd/J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkc,KACdhK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmc,KACdjK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoc,IACdlK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqc,IACdnK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsc,IACdpK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuc,IACdrK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwc,IACdtK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyc,IACdvK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOod,KACdlL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0c,KACdxK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2c,IACdzK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuT,KACdrB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4c,MACd1K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyU,KACdvC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwU,IACdtC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6c,IACd3K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8c,IACd5K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuT,KACdrB,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+c,KACd7K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgd,IACd9K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOid,IACd/K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkd,KACdhL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmd,IACdjL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoS,KACdF,WAAYlS,IAAOmS,MAKrB,CACEL,IAAK,EACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOI,KACd8R,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,oBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwX,UACdtF,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,GACLC,SAAU,iBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyX,QACdvF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0X,IACdxF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2X,MACdzF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4X,IACd1F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwT,MACdtB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,iBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6X,QACd3F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8X,IACd5F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+X,KACd7F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgY,KACd9F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiY,IACd/F,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkU,IACdhC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkY,IACdhG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmY,KACdjG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoY,KACdlG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0U,OACdxC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqY,IACdnG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsY,KACdpG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuY,IACdrG,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuU,KACdrC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwY,KACdtG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyY,IACdvG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0Y,KACdxG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqT,IACdnB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmX,KACdjF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmU,IACdjC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2Y,KACdzG,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0V,KACdxD,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4Y,IACd1G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6Y,KACd3G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,kBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8Y,QACd5G,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+Y,MACd7G,WAAYlS,IAAOyU,MAErB,CACE3C,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgZ,IACd9G,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiZ,IACd/G,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,IACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkZ,MACdhH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,IACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmZ,KACdjH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoZ,KACdlH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqZ,IACdnH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsZ,IACdpH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOuZ,MACdrH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwZ,MACdtH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyZ,IACdvH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0Z,IACdxH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2Z,KACdzH,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2Z,KACdzH,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4Z,KACd1H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6Z,KACd3H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8Z,IACd5H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+Z,KACd7H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOga,IACd9H,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOia,IACd/H,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOka,MACdhI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoX,MACdlF,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0W,KACdxE,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOma,KACdjI,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOoa,IACdlI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqa,MACdnI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsa,MACdpI,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOua,KACdrI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwa,IACdtI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOya,IACdvI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0a,KACdxI,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2a,KACdzI,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4a,IACd1I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqd,KACdnL,WAAYlS,IAAOwU,KAErB,CACE1C,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6a,KACd3I,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8a,IACd5I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgW,KACd9D,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+a,IACd7I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgb,KACd9I,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOiX,IACd/E,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOib,MACd/I,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,GACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkb,OACdhJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOmb,MACdjJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOob,MACdlJ,WAAYlS,IAAOiX,KAErB,CACEnF,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOqb,MACdnJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsb,MACdpJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,gBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOub,OACdrJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwb,MACdtJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyb,IACdvJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgT,KACdd,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0b,IACdxJ,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO2b,KACdzJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO4b,IACd1J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6b,MACd3J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,YACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOsd,GACdpL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOud,IACdrL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOwd,IACdtL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8b,KACd5J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO+b,MACd7J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOyd,IACdvL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO0d,IACdxL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOkc,KACdhK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOgc,IACd9J,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAOic,MACd/J,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOmc,KACdjK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,EACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOoS,KACdF,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,EACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOmd,IACdjL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,EACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOkd,KACdhL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,EACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOid,IACd/K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,EACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOgd,IACd9K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,EACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO+c,KACd7K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOuT,KACdrB,WAAYlS,IAAOoS,MAErB,CACEN,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO8c,IACd5K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO6c,IACd3K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOwU,IACdtC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOyU,KACdvC,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO4c,MACd1K,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOuT,KACdrB,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO2c,IACdzK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO0c,KACdxK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOod,KACdlL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO0b,IACdxJ,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO2d,IACdzL,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO4d,IACd1L,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOyc,IACdvK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOwc,IACdtK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOuc,IACdrK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOsc,IACdpK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOgT,KACdd,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOqc,IACdnK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,aACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOoc,IACdlK,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,eACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO6d,KACd3L,WAAYlS,IAAOI,KACnB0d,aAAa,GAEf,CACEhM,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAO+d,IACd7L,WAAYlS,IAAOI,KACnB0d,aAAa,GAEf,CACEhM,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOge,IACd9L,WAAYlS,IAAOI,KACnB0d,aAAa,GAEf,CACEhM,IAAK,GACLC,SAAU,kBACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO6X,QACd3F,WAAYlS,IAAOI,KACnB0d,aAAa,GAEf,CACEhM,IAAK,EACLC,SAAU,qBACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOie,KACd/L,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,EACLC,SAAU,gBACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOke,OACdhM,WAAYlS,IAAOmS,MAErB,CACEL,IAAK,GACLC,SAAU,cACVC,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENxC,MAAOxP,IAAOie,KACd/L,WAAYlS,IAAOmS,OAIRN,O,2HClsIFsM,EAAe,8BAEfC,GAAqB,mBAC/BC,IAAQC,QAAU,CACjBvgB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENwgB,cAAe,UANe,cAQ/BF,IAAQG,MAAQ,CACfzgB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENwgB,cAAe,UAbe,GAsB5BE,EAAc,CAClB,CACE7hB,KAAM,SACN8hB,YAAa,mEACbC,OAAQ,CACNC,GAAI,gBACJC,GAAI,gBACJC,GAAI,gBACJC,KAAM,8FAER7V,UAAW,IACX8V,WAAY,SACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,aACN8hB,YAAa,mDACbC,OAAQ,CACNC,GAAI,cACJC,GAAI,cACJC,GAAI,cACJC,KAAM,kGAERG,MAAO,CACLC,KAAM,mGACNC,IAAK,mGAEPlW,UAAW,IACX8V,WAAY,aACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,WACN8hB,YAAa,kGACbC,OAAQ,CACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,KAAM,sGAER7V,UAAW,IACX8V,WAAY,iBACZnhB,KAAMwgB,IAAQG,MACdS,YAAa,GAEf,CACEriB,KAAM,WACN8hB,YAAa,kGACbC,OAAQ,CACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,KAAM,sGAER7V,UAAW,IACX8V,WAAY,iBACZnhB,KAAMwgB,IAAQG,MACdS,YAAa,GAEf,CACEriB,KAAM,WACN8hB,YAAa,kGACbC,OAAQ,CACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,KAAM,sGAER7V,UAAW,IACX8V,WAAY,iBACZnhB,KAAMwgB,IAAQG,MACdS,YAAa,GAEf,CACEriB,KAAM,4BACN8hB,YAAa,kEACbC,OAAQ,CACNC,GAAI,+BACJC,GAAI,+BACJC,GAAI,+BACJC,KAAM,6GAERG,MAAO,CACLC,KAAM,8GACNC,IAAK,8GAEPlW,UAAW,IACX8V,WAAY,wBACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,sBACN8hB,YAAa,0CACbC,OAAQ,CACNC,GAAI,4BACJC,GAAI,4BACJC,GAAI,4BACJC,KAAM,oGAER7V,UAAW,IACX8V,WAAY,eACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,qBACN8hB,YAAa,8CACbC,OAAQ,CACNC,GAAI,2BACJC,GAAI,2BACJC,GAAI,2BACJC,KAAM,sGAER7V,UAAW,IACX8V,WAAY,iBACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,oBACN8hB,YAAa,kDACbC,OAAQ,CACNC,GAAI,0BACJC,GAAI,0BACJC,GAAI,0BACJC,KAAM,oGAER7V,UAAW,IACX8V,WAAY,eACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,UACN8hB,YAAa,+EACbC,OAAQ,CACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,KAAM,+FAERG,MAAO,CACLC,KAAM,+FACNC,IAAK,+FAEPlW,UAAW,IACX8V,WAAY,UACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,SACN8hB,YAAa,sEACbC,OAAQ,CACNC,GAAI,gBACJC,GAAI,gBACJC,GAAI,gBACJC,KAAM,8FAER7V,UAAW,IACX8V,WAAY,SACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAEf,CACEriB,KAAM,SACN8hB,YAAa,uEACbC,OAAQ,CACNC,GAAI,gBACJC,GAAI,gBACJC,GAAI,gBACJC,KAAM,6FACNM,KAAM,mBAERnW,UAAW,IACX8V,WAAY,SACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,QACN8hB,YAAa,kEACbC,OAAQ,CACNC,GAAI,eACJC,GAAI,eACJC,GAAI,eACJC,KAAM,4FACNM,KAAM,kBAERnW,UAAW,IACX8V,WAAY,QACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,SACN8hB,YAAa,yEACbC,OAAQ,CACNC,GAAI,gBACJC,GAAI,gBACJC,GAAI,gBACJC,KAAM,6FACNM,KAAM,mBAERnW,UAAW,IACX8V,WAAY,SACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,SACN8hB,YAAa,8DACbC,OAAQ,CACNC,GAAI,gBACJC,GAAI,gBACJC,GAAI,gBACJC,KAAM,6FACNM,KAAM,mBAERnW,UAAW,IACX8V,WAAY,SACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,UACN8hB,YAAa,yEACbC,OAAQ,CACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,KAAM,8FACNM,KAAM,oBAERnW,UAAW,IACX8V,WAAY,UACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,WACN8hB,YAAa,6EACbC,OAAQ,CACNC,GAAI,kBACJC,GAAI,kBACJC,GAAI,kBACJC,KAAM,+FACNM,KAAM,qBAERnW,UAAW,IACX8V,WAAY,WACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,UACN8hB,YAAa,oFACbC,OAAQ,CACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,KAAM,8FACNM,KAAM,oBAERnW,UAAW,IACX8V,WAAY,UACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,cACN8hB,YAAa,oFACbC,OAAQ,CACNC,GAAI,qBACJC,GAAI,qBACJC,GAAI,qBACJC,KAAM,kGACNM,KAAM,wBAERnW,UAAW,IACX8V,WAAY,cACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,WACN8hB,YAAa,mFACbC,OAAQ,CACNC,GAAI,kBACJC,GAAI,kBACJC,GAAI,kBACJC,KAAM,+FACNM,KAAM,qBAERnW,UAAW,IACX8V,WAAY,WACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,GAEf,CACEriB,KAAM,UACN8hB,YAAa,6FACbC,OAAQ,CACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,iBACJC,KAAM,8FACNM,KAAM,oBAERnW,UAAW,IACX8V,WAAY,UACZnhB,KAAMwgB,IAAQC,QACdW,YAAa,IAIFR,O,8FCvVFa,EAAsB,SAACnjB,GAClC,OAAOojB,IAAUC,UAAUrjB,I,SCSvBgF,EAAS,uCAAG,WAAOhF,EAAiBmQ,EAAYxL,GAApC,6BAAA/E,EAAA,6DACV0jB,EAAmBH,EAAoBnjB,GACvCH,EAAWwQ,YAAYrQ,GACvBujB,EAAQ,IAAIhT,IAAOC,SAAS8S,EAAkBE,EAAc3jB,GAC5D4jB,EAAM,IAAIC,IAAUvT,GACpBwT,EAAWhf,EAAME,KAAI,SAAC+e,GAAD,MAAU,CAACA,EAAKhiB,QAAQiiB,cAAeJ,EAAIK,mBAAmBF,EAAKnjB,KAAMmjB,EAAKvjB,YALzF,SAMakjB,EAAMQ,UAAUJ,GAN7B,uBAMRK,EANQ,EAMRA,WACFlZ,EAAMkZ,EAAWnf,KAAI,SAAC+e,EAAMK,GAAP,OAAaR,EAAIS,qBAAqBvf,EAAMsf,GAAGxjB,KAAMmjB,MAPhE,kBAQT9Y,GARS,4CAAH,0DAWA9F,O,sfCeR,SAASmf,IACd,OAAO1Q,aAA0D,SAAChL,GAAD,OAAWA,EAAM2b,KAAKC,kBAGlF,SAASC,IACd,IAAMxd,EAAWyd,cACXC,EAAaL,IAEbM,EAAsBC,uBAAY,WACtC5d,EAAS6d,YAAqB,CAAEN,gBAAiBG,OAChD,CAACA,EAAY1d,IAEhB,MAAO,CAAC0d,EAAYC,GAGf,SAASzT,IACd,IAAMlK,EAAWyd,cAOjB,MAAO,CANQ9Q,aAAkD,SAAChL,GAAD,OAAWA,EAAM2b,KAAKnT,UAEnEyT,uBAAY,WAC9B5d,EAAS8d,iBACR,CAAC9d,KAKC,SAAS+d,IACd,IAAM/d,EAAWyd,cAajB,MAAO,CAXe9Q,aACpB,SAAChL,GAAD,OAAWA,EAAM2b,KAAKU,qBAGCJ,uBACvB,SAACK,GACCje,EAASke,YAAwB,CAAEF,kBAAmBC,OAExD,CAACje,KAME,SAASme,IACd,IAAMne,EAAWyd,cAYjB,MAAO,CAXuB9Q,aAAiE,SAAChL,GAC9F,OAAOA,EAAM2b,KAAKc,yBAGaR,uBAC/B,SAACS,GACCre,EAASse,YAA4B,CAAEF,sBAAuBC,OAEhE,CAACre,KAME,SAASue,IACd,IAAMve,EAAWyd,cAYjB,MAAO,CAXc9Q,aAAwD,SAAChL,GAC5E,OAAOA,EAAM2b,KAAKkB,gBAGIZ,uBACtB,SAACa,GACCze,EAAS0e,YAAmB,CAAEF,aAAcC,OAE9C,CAACze,KAME,SAAS2e,IACd,IAAM3e,EAAWyd,cACjB,OAAOG,uBACL,SAACrR,GACCvM,EAAS4e,YAAmB,CAAEC,gBAAiBC,YAAevS,QAEhE,CAACvM,IAIE,SAAS+e,IACd,IAAM/e,EAAWyd,cACjB,OAAOG,uBACL,SAAC1kB,EAAiB4B,GAChBkF,EAASgf,YAAsB,CAAE9lB,UAAS4B,eAE5C,CAACkF,IAIL,SAASif,EAAcC,GACrB,MAAO,CACLC,OAAQL,YAAeI,EAAKC,QAC5BC,OAAQN,YAAeI,EAAKE,SAIzB,SAASC,IACd,IAAMrf,EAAWyd,cAEjB,OAAOG,uBACL,SAACsB,GACClf,EAASsf,YAAkB,CAAEC,eAAgBN,EAAcC,QAE7D,CAAClf,IASE,SAASwf,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAInU,IAAMkU,EAAOvmB,QAASymB,IAAK1hB,WAAWwhB,EAAQC,GAAS,GAAI,UAAW,eAM5E,SAASE,IACd,IAAQ1mB,EAAY2mB,cAAZ3mB,QACF6D,EAAS+iB,cAGTC,EAAc5S,mBAAQ,wBAAOjU,GAAO,UAAG8mB,IAAa9mB,UAAhB,QAAiC,KAAK,CAACA,IAG3E+mB,EAAmC9S,mBACvC,kBACEjU,EACIgnB,IAAQ1kB,OAAO0S,KAAKnR,IAAS,SAACtC,GAAkB,IAAD,EACvC8R,EAAQxP,EAAOtC,GAErB,OAEE,UAAC0lB,IAA6BjnB,UAA9B,QAA0C,IAEvC6E,KAAI,SAACqiB,GACJ,OAAIA,EAAKtlB,UAAYyR,EAAMzR,QAClB,KAEF,CAACslB,EAAM7T,MAEflG,QAAO,SAACzC,GAAD,OAAkC,OAANA,QAG1C,KACN,CAAC7G,EAAQ7D,IAILmnB,EAAuB1T,aAAiD,qBAAG2Q,KAAQgD,SAEnFC,EAA8BpT,mBAAQ,WAC1C,IAAKjU,IAAYmnB,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqBnnB,GACtC,OAAKsnB,EAEEhlB,OAAO0S,KAAKsS,GAAUziB,KAAI,SAAC0iB,GAChC,MAAO,CAACC,YAAiBF,EAASC,GAAQtB,QAASuB,YAAiBF,EAASC,GAAQrB,YAHjE,KAKrB,CAACiB,EAAsBnnB,IAEpBynB,EAAexT,mBACnB,kBAAMoT,EAAUK,OAAOX,GAAgBW,OAAOb,KAC9C,CAACE,EAAgBF,EAAaQ,IAGhC,OAAOpT,mBAAQ,WAEb,IAAM0T,EAAQF,EAAa9hB,QAA0C,SAACsI,EAAD,GAA6B,IAAD,mBAApBsY,EAAoB,KAAZC,EAAY,KACzFoB,EAASrB,EAAOsB,YAAYrB,GAC5BsB,EAAMF,EAAM,UAAMrB,EAAO3kB,QAAb,YAAwB4kB,EAAO5kB,SAA/B,UAA8C4kB,EAAO5kB,QAArD,YAAgE2kB,EAAO3kB,SACzF,OAAIqM,EAAK6Z,KACT7Z,EAAK6Z,GAAOF,EAAS,CAACrB,EAAQC,GAAU,CAACA,EAAQD,IAD3BtY,IAGrB,IAEH,OAAO3L,OAAO0S,KAAK2S,GAAO9iB,KAAI,SAACijB,GAAD,OAASH,EAAMG,QAC5C,CAACL,M,iCC/NN,oIAIa5mB,EAAQ,CAACX,oCAA8BA,mCAA8BA,oCAMrE6nB,EAAS,CAAC7nB,iEACV8nB,EAAY,WACvB,OAAOC,IAAOF,IAGHG,EAAuB,SAACloB,GACnC,OAAOioB,IAAOE,IAAYnoB,KAGbooB,IAbI,WACjB,OAAOH,IAAOpnB,K,43NCHHwnB,EAAS,uBAETC,EAAW,uCAAG,WAAOrmB,GAAP,iBAAArC,EAAA,sEACF2oB,MAAM,GAAD,OALZroB,GAKY,oBAAyB+B,EAAzB,UADH,cACnBumB,EADmB,gBAENA,EAASC,OAFH,cAEnB/hB,EAFmB,yBAGlBA,GAHkB,2CAAH,sDAMXgiB,EAAwB,WACnC,IAGE,OAFwBC,aAAaC,QAAQP,IAEnBrmB,IAAGC,OAC7B,SACA,OAAOD,IAAGC,U,iHCbRwE,G,cCGkBoiB,cDHW,CACjCC,eAAe,EACfC,WAAW,EACXC,eAAe,EACftiB,KAAM,OAGKuiB,EAAe1gB,YAAY,CACtC9H,KAAM,UACNgG,eACA+B,SAAU,CACR0gB,kBAAmB,SAACzgB,GAClBA,EAAMsgB,WAAY,GAEpBI,sBAAuB,SAACC,EAAQ1gB,GAC9B,MAAmCA,EAAOE,QAAlCygB,EAAR,EAAQA,QAER,MAAO,CACLP,eAAe,EACfC,WAAW,EACXC,cALF,EAAiBA,cAMftiB,KAAM2iB,IAGVC,mBAAoB,SAAC7gB,GACnBA,EAAMsgB,WAAY,EAClBtgB,EAAMqgB,eAAgB,GAExBS,aAAc,8BAAC,eACV9iB,GADS,IAEZsiB,WAAW,KAEbS,UAAW,SAAC/gB,EAAOC,GACjBD,EAAM/B,KAAK+iB,QAAU/gB,EAAOE,YAM3B,EACLqgB,EAAa7f,QAD8DmgB,GAAtE,EAAQL,kBAAR,EAA2BC,sBAA3B,EAAkDG,mBAAlD,EAAsEC,cAAtE,EAAoFC,UAe5EP,MAAf,S,iCE3DA,sDAIO,SAASS,IACd,IAAQ1pB,EAAY2mB,cAAZ3mB,QAER,OAAOyT,aAAY,SAAChL,GAAD,OAAqBA,EAAMkhB,YAAYC,YAAlB,OAA8B5pB,QAA9B,IAA8BA,KAAY,Q,w7eCPpF,gFAGO,SAAS4lB,EAAevS,GAC7B,MAAO,CACLrT,QAASqT,EAAMrT,QACf4B,QAASyR,EAAMzR,QACfjB,SAAU0S,EAAM1S,SAChBD,OAAQ2S,EAAM3S,OACdD,KAAM4S,EAAM5S,MAIT,SAAS+mB,EAAiB7B,GAC/B,OAAO,IAAItT,IACTsT,EAAgB3lB,QAChB2lB,EAAgB/jB,QAChB+jB,EAAgBhlB,SAChBglB,EAAgBjlB,OAChBilB,EAAgBllB,Q,+ECNdgG,G,OAA2B,CAC/BqiB,eAAe,EACfC,WAAW,EACXriB,KAV2BmjB,IAAUlkB,QAAO,SAACmkB,EAAOC,GACpD,OAAO,2BACFD,GADL,kBAEGC,EAAK7W,GAAK6W,MAEZ,MAQUC,EAAazhB,YAAY,CACpC9H,KAAM,QACNgG,eACA+B,SAAU,CACRyhB,WAAY,SAACxhB,GACXA,EAAMsgB,WAAY,GAEpBmB,YAAa,SAACzhB,GACZA,EAAMsgB,WAAY,EAClBtgB,EAAMqgB,eAAgB,GAExBqB,mBAAoB,SAAC1hB,EAAOC,GAC1BD,EAAMqgB,eAAgB,EACtBrgB,EAAMsgB,WAAY,EAClBtgB,EAAM/B,KAAKgC,EAAOE,QAAQsK,IAAMxK,EAAOE,SAEzCwhB,oBAAqB,SAAC3hB,EAAOC,GAC3BD,EAAMqgB,eAAgB,EACtBrgB,EAAMsgB,WAAY,EAClBtgB,EAAM/B,KAAOgC,EAAOE,YAMnB,EAA6EohB,EAAW5gB,QAAxF,EAAQ6gB,WAAR,EAAoBE,mBAApB,EAAwCD,YAAxC,EAAqDE,oBAuB7CJ,MAAf,S,4NC1DMK,EAASjC,cACTpoB,EAAUC,SAASC,KAAgC,IACnDoqB,EAAarqB,SAASC,IAAoC,IAE1DqqB,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAACld,IAASV,QAChE6d,EAAiB,IAAIF,IAAkB,CAAEC,kBAAmB,CAACzqB,EAASsqB,KAEtEK,EAAgB,IAAIC,IAAuB,CAC/CC,IAAI,eAAI7qB,EAAUqqB,GAClBS,OAAQ,gDACRC,QAAQ,EACRC,gBAZuB,OAenBC,EAAe,IAAIC,eAAa,CAAET,kBAAmB,CAACzqB,KAE/CmrB,GAA4D,mBACtEC,IAAeC,SAAWd,GAD4C,cAEtEa,IAAeE,cAAgBX,GAFuC,cAGtES,IAAexe,IAAMqe,GAHiD,GAK5DM,GAAkE,mBAC5EH,IAAeC,SAAWX,GADkD,cAE5EU,IAAeE,cAAgBX,GAF6C,cAG5ES,IAAexe,IAAMqe,GAHuD,GAMlEO,EAAa,SAAC3rB,GACzB,IAAM4rB,EAAU,IAAIlb,IAAOmb,UAAUC,aAAa9rB,GAElD,OADA4rB,EAAQT,gBA9Be,KA+BhBS,I,0kqBC7BMG,EAVe,SAACC,EAAqBrmB,EAAiBxF,GACnE,OAAIwF,EACEqmB,IAAgB7rB,EACX,CAAEA,WAEJ,CAAEA,QAAS6rB,GAEb,CAAE7rB,YCkBX,EAnByB,WACvB,IAAQ8rB,EAAWhsB,OAAOisB,SAAlBD,OAEFE,EADS,IAAIC,gBAAgBH,GACX/Y,IAAI,SACtBmZ,EAAsBpsB,OAAOisB,SAASI,KAAKC,MAAM,UAAU,GACjEtsB,OAAOusB,QAAQC,UAAU,GAAIC,SAASC,MAAON,GAC7C,IAAMO,EAAoBxsB,SAASH,OAAO6oB,aAAaC,QAAQ,kBAC/D,OAAIoD,EACEA,EAASnI,gBAAkB6I,IAAcnf,IAASX,KAAKiX,cAClD,CAAE7jB,QAASuN,IAASX,IAAK+f,gBAAgB,GAE9CX,EAASnI,gBAAkB6I,IAAcnf,IAASqf,OAAO/I,cACpD,CAAE7jB,QAASuN,IAASqf,MAAOD,gBAAgB,GAE7C,CAAE3sB,QAASysB,GAAqBlf,IAASV,KAAM8f,gBAAgB,GAEjE,CAAE3sB,QAASysB,GAAqBlf,IAASV,KAAM8f,gBAAgB,GAGvBE,GAE3CpmB,EAA6B,CACjCqiB,eAAe,EACfC,WAAW,EACXriB,KAAM,CAAE1G,QALV,EAAQA,QAKwB2sB,eALhC,EAA8BA,iBAQjBG,EAAevkB,YAAY,CACtC9H,KAAM,UACNgG,eACA+B,SAAU,CACRukB,kBAAmB,SAACtkB,GAClBA,EAAMsgB,WAAY,GAEpBiE,sBAAuB,SAACvkB,EAAOC,GAC7BD,EAAMqgB,eAAgB,EACtBrgB,EAAMsgB,WAAY,EAClBtgB,EAAM/B,KAAOgC,EAAOE,SAEtBqkB,mBAAoB,SAACxkB,GACnBA,EAAMsgB,WAAY,EAClBtgB,EAAMqgB,eAAgB,GAExBoE,WAAY,SAACzkB,EAAOC,GAClBD,EAAMqgB,eAAgB,EACtBrgB,EAAMsgB,WAAY,EAClBtgB,EAAM/B,KAAK1G,QAAU0I,EAAOE,QAAQ5I,SAEtCmtB,kBAAmB,SAAC1kB,EAAOC,GACzBD,EAAMqgB,eAAgB,EACtBrgB,EAAMsgB,WAAY,EAClBtgB,EAAM/B,KAAKimB,eAAiBjkB,EAAOE,QAAQ+jB,mBAM1C,EACLG,EAAa1jB,QADA2jB,EAAR,EAAQA,kBAA0CE,GAAlD,EAA2BD,sBAA3B,EAAkDC,oBAAoBC,EAAtE,EAAsEA,WAAYC,EAAlF,EAAkFA,kBAI5EC,EAAmB,SAACvB,EAAqBrmB,EAAiBxF,GAAvC,OAA2D,SAAC8G,GAC1F,IACEA,EAASimB,KACT,IAAMM,EAAUzB,EAAsBC,EAAarmB,EAASxF,GAC5D8G,EAASomB,EAAWG,IACpB1E,aAAa2E,QAAb,gBAAsCC,KAAKC,UAAUH,EAAQrtB,UAC7D,MAAOiB,GACPD,QAAQysB,IAAIxsB,GACZ6F,EAASmmB,QAIAS,EAAsB,SAACC,GAAD,OAAoC,SAAC7mB,GACtEA,EAASqmB,EAAkBQ,MAGdb,MAAf,S,y2WCnFA,62BAKa/nB,EAAa,SAACnD,GAEzB,OAAOA,EADS1B,IACU0B,EADV1B,IAC6B0B,EAAQ2Q,IAAQC,UAGlDob,EAAgB,SAAChsB,GAE5B,OAAOA,EADS1B,GACU0B,EADV1B,IAIL2tB,EAAoB,WAC/B,OAAO9oB,EAAWqe,IAAU0K,eAGjBC,EAAgB,WAC3B,OAAOhpB,EAAWqe,IAAU4K,WAGjBC,EAAiB,WAC5B,OAAOlpB,EAAWlB,IAAOI,KAAKrC,UAEnBssB,EAAuB,WAClC,OAAOnpB,EAAWqe,IAAU+K,aAEjBhL,EAAsB,WACjC,OAAOpe,EAAWqe,IAAUC,YAEjB+K,EAAiB,WAC5B,OAAOrpB,EAAWlB,IAAOmS,KAAKpU,UAEnBysB,EAAsB,WACjC,OAAOtpB,EAAWqe,IAAUkL,YAEjBC,EAA2B,WACtC,OAAOxpB,EAAWqe,IAAUoL,iBAEjBC,EAA2B,WACtC,OAAO1pB,EAAWqe,IAAUsL,iBAEjBC,EAAyB,WACpC,OAAO5pB,EAAWqe,IAAUwL,eAEjBC,EAAwB,WACnC,OAAO9pB,EAAWqe,IAAU0L,cAEjBC,EAA2B,WACtC,OAAOhqB,EAAWqe,IAAU4L,iBAEjBC,EAAyB,WACpC,OAAOlqB,EAAWqe,IAAU8L,eAEjBC,EAA+B,WAC1C,OAAOpqB,EAAWqe,IAAUgM,qBAEjBC,EAAsB,WACjC,OAAOtqB,EAAWqe,IAAUkM,YAEjBC,EAAsB,WACjC,OAAOxqB,EAAWqe,IAAUoM,YAEjBC,EAAwB,WACnC,OAAO1qB,EAAWqe,IAAUsM,cAEjBC,EAA4B,WACvC,OAAO5qB,EAAWqe,IAAUwM,kBAEjBC,EAAkC,WAC7C,OAAO9qB,EAAWqe,IAAU0M,wBAEjBC,EAAmC,WAC9C,OAAOhrB,EAAWqe,IAAU4M,yBAEjBC,EAAwB,WACnC,OAAOlrB,EAAWqe,IAAU8M,cAEjBC,EAAqB,WAChC,OAAOprB,EAAWqe,IAAUgN,gBAEjBC,EAAqB,WAChC,OAAOtrB,EAAWqe,IAAUkN,iB,6KCjFxBC,EAAqB,qBAErBC,EAAmBC,6BAAcntB,GAQvC,SAASotB,EAAQjoB,EAAjB,GAA4C,IAAlB/G,EAAiB,EAAjBA,KAAMkH,EAAW,EAAXA,QAC5B,OAAQlH,GACJ,KAAK6uB,EAED,IAAQ3uB,EAAuDgH,EAAvDhH,QAAS+uB,EAA8C/nB,EAA9C+nB,UAAWC,EAAmChoB,EAAnCgoB,aAAcC,EAAqBjoB,EAArBioB,YAAaC,EAAQloB,EAARkoB,IACvD,OAAO,2BACAroB,GADP,kBAEK7G,EAFL,kCAGW6G,QAHX,IAGWA,OAHX,EAGWA,EAAQ7G,IAHnB,IAIQ+uB,YACAC,eACAC,cAGAC,UAKZ,QACI,MAAMxd,MAAM,mDAAD,OAAoD5R,EAApD,QAKR,SAASqvB,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAC/B,EAA0BC,qBAAWP,EAAS,IAA9C,mBAAOjoB,EAAP,KAAc3B,EAAd,KAGMoqB,EAAgBxM,uBAAY,SAAC9iB,EAAS+uB,EAAWC,EAAcC,EAAaC,GAC9EhqB,EAAS,CACLpF,KAAM6uB,EACN3nB,QAAS,CAAChH,UAAS+uB,YAAWC,eAAcC,cAAaC,WAG9D,IAGH,OACI,cAACN,EAAiBO,SAAlB,CACI9oB,MAAOgM,mBACH,iBAAM,CACFxL,EACA,CACIyoB,oBAGR,CACIzoB,EACAyoB,IAVZ,SAcKF,IAKb,IAAMG,EAAU,uCAAG,WAAOC,EAAUxvB,GAAjB,eAAAhC,EAAA,sEAWSwxB,EAASC,aAXlB,cAWTV,EAXS,YAoBA/uB,EApBA,KAqBX+uB,EArBW,SAsBWS,EAASE,gBAtBpB,oCA0BGF,EAASG,uBA1BZ,8CAoBX,QApBW,KAqBXZ,UArBW,KAsBX,aAtBW,KAuBX,YAAe,GAGf,IA1BW,mDAAH,wDA8BT,SAASa,EAAWJ,EAASK,GAChC,IAAQC,EAAgBC,cAAhBD,YACR,EA7FOtgB,qBAAWof,GA6FlB,mBAAO/nB,EAAP,KAAgByoB,EAAhB,KAAgBA,cACVU,EAAO,OAAGnpB,QAAH,IAAGA,OAAH,EAAGA,EAAQgpB,GAoBxB,OAnBAI,qBAAU,WAAM,4CAMZ,WAA0BC,GAA1B,yBAAAlyB,EAAA,sEAC8BuxB,EAAWC,EAAUU,GADnD,OACUC,EADV,OAIWnwB,EAAsDmwB,EAAtDnwB,QAAS+uB,EAA6CoB,EAA7CpB,UAAWC,EAAkCmB,EAAlCnB,aAAcC,EAAoBkB,EAApBlB,YAAaC,EAAOiB,EAAPjB,IACtDI,EAActvB,EAAS+uB,EAAWC,EAAcC,EAAaC,GALjE,4CANY,2DAaZkB,CAAWP,KAGZ,CAACG,EAASV,EAAeO,EAAaL,EAAUM,IAG5CE,GAAW,K,oGCzHTK,EAAyB,CACpCzF,MAAO,UACPjK,YACE,+BACF1gB,MAAO,+C,6BCEMqwB,EANuB,SAAC,GAAD,IAAGlB,EAAH,EAAGA,SAAapuB,EAAhB,wBACpC,cAAC,IAAD,yBAAKuvB,GAAI,CAAC,OAAQ,QAASvZ,GAAG,QAAWhW,GAAzC,aACGouB,M,eCGCoB,EAAa3vB,YAAOyvB,EAAPzvB,CAAH,oPAKZ,qBAAG0O,MAAkBkhB,aAAa1P,MAKlC,qBAAGxR,MAAkBkhB,aAAa5P,MAMhC6P,EAAW,WACf,IAAQxvB,EAAMD,cAANC,EAEFyvB,EFjBqB,SAACC,EAAc1vB,GAC1C,OAAQ0vB,GACN,IAAK,IACH,MAAO,CACLhG,MAAM,GAAD,OAAK1pB,EAAE,WAAP,cAAuBA,EAAE,UAElC,IAAK,SACH,MAAO,CACL0pB,MAAM,GAAD,OAAK1pB,EAAE,WAAP,cAAuBA,EAAE,WAElC,IAAK,OACH,MAAO,CACL0pB,MAAM,GAAD,OAAK1pB,EAAE,WAAP,cAAuBA,EAAE,SAElC,IAAK,UACH,MAAO,CACL0pB,MAAM,GAAD,OAAK1pB,EAAE,WAAP,cAAuBA,EAAE,YAElC,IAAK,OACH,MAAO,CACL0pB,MAAM,GAAD,OAAK1pB,EAAE,WAAP,cAAuBA,EAAE,SAElC,IAAK,YACH,MAAO,CACL0pB,MAAM,GAAD,OAAK1pB,EAAE,WAAP,cAAuBA,EAAE,cAElC,QACE,OAAO,MEVM2vB,CADIC,cAAbC,SACiC7vB,IAAM,GAC/C,6BAAoCmvB,GAAiBM,GAA7C/F,EAAR,EAAQA,MAAOjK,EAAf,EAAeA,YAEf,OACE,eAAC,IAAD,WACE,gCAAQiK,IACR,sBAAMoG,SAAS,WAAWC,QAASrG,IACnC,sBAAMoG,SAAS,iBAAiBC,QAAStQ,QAchCuQ,IAT8C,SAAC,GAA4B,IAA1B9B,EAAyB,EAAzBA,SAAapuB,EAAY,iBACvF,OACE,qCACE,cAAC,EAAD,IACA,cAACwvB,EAAD,2BAAgBxvB,GAAhB,aAAwBouB,U,iCC3C9B,8CAKa+B,EAAaxqB,YAAY,CACpC9H,KAAM,QACNgG,aAJ+B,CAAEusB,aAAc,EAAGC,aAAc,GAKhEzqB,SAAU,CACR0qB,SAAU,SAACzqB,EAAOC,GACW,IAAvBD,EAAMwqB,eACRxqB,EAAMwqB,aAAevqB,EAAOE,SAG9BH,EAAMuqB,aAAetqB,EAAOE,YAMnBsqB,EAAaH,EAAW3pB,QAAxB8pB,SAEAH,MAAf,S,6DCJeI,IAXQ,WACrB,MAA2CC,mBAASC,KAAKC,OAAzD,mBAAOC,EAAP,KAAoBC,EAApB,KAOA,MAAO,CAAED,cAAaE,oBANMC,YAAiBH,GAMFI,eAJpBjP,uBAAY,WACjC8O,EAAoBH,KAAKC,SACxB,CAACE,O,iCCbN,qBAOMI,EAAqB,GAUZvjB,IARK,SAACrQ,GACnB,IAAK4zB,EAAmB5zB,GAAU,CAChC,IAAM6zB,EAAU3L,YAAqBloB,GACrC4zB,EAAmB5zB,GAAW,IAAIuQ,IAAOmb,UAAUoI,gBAAgBD,EAAS7zB,GAE9E,OAAO4zB,EAAmB5zB,K,yKCXtB+zB,EAAMtxB,YAAOuxB,IAAPvxB,CAAH,kLAQE,gBAAGwxB,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGlB,gBAAGC,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAGC,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAGC,WACJ,qBAAGC,UACI,qBAAGC,gBAGTC,EAAa9xB,YAAOsxB,EAAPtxB,CAAH,+DASV+xB,GALU/xB,IAAO4L,IAAV,wEAKG5L,YAAOsxB,EAAPtxB,CAAH,wIAER,gBAAGgyB,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGN,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGM,QAIJC,EAAWjyB,YAAOsxB,EAAPtxB,CAAH,mEAET,gBAAGgyB,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrBV,O,wKCgCA9wB,IAxDC,SAACuvB,GACf,IAAQ1vB,EAAMD,cAANC,EACR,EAAiC6xB,cAAzBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACVC,EAAeC,cAAfD,WAEFhuB,EAAWyd,cACXvkB,EAAUg1B,cA+ChB,MAAO,CAAE9xB,MA7CKwhB,uBACZ,SAACuQ,GACC,IAAMC,EAAqB,WAAT1C,EAAmBjH,IAAuB0J,GAAe9J,IAAiB8J,GACxFC,EACFN,EAASM,EAAD,uCAAY,WAAOj0B,GAAP,SAAArB,EAAA,2DACdqB,aAAiBk0B,KADH,gCAEOj0B,YAAelB,GAFtB,eAId40B,EAASM,GAJK,sBAOhBp1B,OAAO6oB,aAAayM,WAAWC,MAC3Bp0B,aAAiBq0B,KAA2Br0B,aAAiBs0B,qBAC/DT,EAAWhyB,EAAE,kBAAmBA,EAAE,0BAElC7B,aAAiBu0B,KACjBv0B,aAAiBw0B,KAEbP,aAAqBtK,MACCsK,EACRQ,sBAAwB,MAE1CZ,EAAWhyB,EAAE,uBAAwBA,EAAE,6CAEvCgyB,EAAW7zB,EAAMR,KAAMQ,EAAM00B,SApBf,2CAAZ,uDAyBRb,EAAWhyB,EAAE,4BAA6BA,EAAE,oCAGhD,CAAC0vB,EAAMoC,EAAUE,EAAYhyB,EAAG9C,IAalBmD,OAVDuhB,uBAAY,WACzB5d,EAASyiB,eACTsL,IAEI/0B,OAAO6oB,aAAaC,QAAQ,mBAC9BuC,IAAiBR,cAAciL,QAC/BzK,IAAiBR,cAAc+K,sBAAwB,QAExD,CAACb,EAAY/tB,O,yLCnEL+uB,EAAgBpF,6BAA+BntB,GAE/CwyB,EAA2B,SAAC,GAAkB,IAAhB9E,EAAe,EAAfA,SACzC,EAA4BoC,mBAAoC,IAAhE,mBAAO2C,EAAP,KAAeC,EAAf,KAEMC,EAAQvR,uBACZ,YAAsD,IAAnD8H,EAAkD,EAAlDA,MAAOjK,EAA2C,EAA3CA,YAAa7gB,EAA8B,EAA9BA,KACrBs0B,GAAU,SAACE,GACT,IAAMhjB,EAAKijB,oBAAU3J,GAGf4J,EAAgBF,EAAW/oB,QAAO,SAACkpB,GAAD,OAAeA,EAAUnjB,KAAOA,KAExE,MAAM,CACJ,CACEA,KACAsZ,QACAjK,cACA7gB,SALJ,mBAOK00B,SAIT,CAACJ,IAoBH,OACE,cAACH,EAAc9E,SAAf,CAAwB9oB,MAAO,CAAE8tB,SAAQO,MAN7B,kBAAMN,EAAU,KAMoBO,OALnC,SAACrjB,GACd8iB,GAAU,SAACE,GAAD,OAAgBA,EAAW/oB,QAAO,SAACkpB,GAAD,OAAeA,EAAUnjB,KAAOA,SAIpB4hB,WAlBvC,SAACtI,EAAejK,GACjC,OAAO0T,EAAM,CAAEzJ,QAAOjK,cAAa7gB,KAAM80B,KAAWC,UAiBgBC,UAfpD,SAAClK,EAAejK,GAChC,OAAO0T,EAAM,CAAEzJ,QAAOjK,cAAa7gB,KAAM80B,KAAWG,QAc2BC,aAZ5D,SAACpK,EAAejK,GACnC,OAAO0T,EAAM,CAAEzJ,QAAOjK,cAAa7gB,KAAM80B,KAAWK,WAWyCC,aAT1E,SAACtK,EAAejK,GACnC,OAAO0T,EAAM,CAAEzJ,QAAOjK,cAAa7gB,KAAM80B,KAAWO,YAQpD,SACG/F,K,QCvCQgG,EARO,WACpB,MAA2BjC,cAAnBgB,EAAR,EAAQA,OAAQQ,EAAhB,EAAgBA,OAIhB,OAAO,cAAC,KAAD,CAAgBR,OAAQA,EAAQkB,SAFlB,SAAC/jB,GAAD,OAAgBqjB,EAAOrjB,Q,iECQ/BgkB,IAZkB,SAACt0B,GAChC,OACE,eAAC,KAAD,yBAAKqxB,MAAM,KAAKkD,OAAO,KAAKC,QAAQ,YAAYC,KAAK,QAAWz0B,GAAhE,cACE,wBAAQ00B,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKH,KAAK,YACpC,sBACEI,EAAE,47BACFJ,KAAK,gB,2YCPAK,GAAkC,mBAC5CnlB,IAAQC,QAAU,IAAIH,IACrBE,IAAQC,QACR,6CACA,GACA,OACA,sBAN2C,cAQ5CD,IAAQE,QAAU,IAAIJ,IACrBE,IAAQE,QACR,6CACA,GACA,OACA,sBAb2C,GAgBlCklB,GAAkC,mBAC5CplB,IAAQC,QAAU,IAAIH,IACrBE,IAAQC,QACR,6CACA,GACA,OACA,gBAN2C,cAQ5CD,IAAQE,QAAU,IAAIJ,IACrBE,IAAQE,QACR,6CACA,GACA,OACA,gBAb2C,GAgBlCmlB,EAAiC,eAC3CrlB,IAAQC,QAAU,IAAIH,IACrBE,IAAQC,QACR,6CACA,GACA,MACA,kBAISqlB,EAAO,IAAIxlB,IAAME,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5FslB,EAAM,IAAIzlB,IAAME,IAAQC,QAAS,6CAA8C,GAAI,MAAO,kBAC1FulB,EAAO,IAAI1lB,IAAME,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,cAC5FwlB,EAAO,IAAI3lB,IAAME,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5FylB,EAAM,IAAI5lB,IACrBE,IAAQC,QACR,6CACA,GACA,MACA,qBAEW0lB,EAAM,IAAI7lB,IACrBE,IAAQC,QACR,6CACA,GACA,MACA,8BAEW2lB,EAAO,IAAI9lB,IACtBE,IAAQC,QACR,6CACA,GACA,OACA,wBAw0Da3O,IAr0DA,CACb6I,KAAM,CACJhM,OAAQ,OACRkB,QAAS,CACP,GAAI,GACJ,MAAO,8CAETjB,SAAU,EACVy3B,YAAa,iCAEfnqB,KAAM,CACJvN,OAAQ,OACRkB,QAAS,CACP,GAAI,GACJ,MAAO,8CAETjB,SAAU,EACVy3B,YAAa,iCAEfC,SAAU,CACR33B,OAAQ,eACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfE,MAAO,CACL53B,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,YAEfG,WAAY,CACV73B,OAAQ,aACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEft0B,UAAW,CACTpD,OAAQ,gBACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf7zB,MAAO,CACL7D,OAAQ,YACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf5zB,OAAQ,CACN9D,OAAQ,aACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf3zB,SAAU,CACR/D,OAAQ,eACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfI,MAAO,CACL93B,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfj0B,QAAS,CACPzD,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfK,IAAK,CACH/3B,OAAQ,MACR03B,YAAa,4BAEfn0B,KAAM,CACJvD,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,gCAEfliB,KAAM,CACJxV,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEfhiB,MAAO,CACL1V,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,gCAEf9hB,GAAI,CACF5V,OAAQ,KACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEf7hB,IAAK,CACH7V,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfxhB,MAAO,CACLlW,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEfthB,MAAO,CACLpW,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfrhB,QAAS,CACPrW,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfphB,KAAM,CACJtW,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,oBAEfnhB,IAAK,CACHvW,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfjhB,IAAK,CACHzW,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf9gB,OAAQ,CACN5W,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEf7gB,OAAQ,CACN7W,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,iCAEf1gB,KAAM,CACJhX,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEflb,IAAK,CACHxc,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEfzgB,KAAM,CACJjX,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfjb,IAAK,CACHzc,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfhb,MAAO,CACL1c,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,iCAEf/a,MAAO,CACL3c,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,oCAEf9a,IAAK,CACH5c,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEf7a,IAAK,CACH7c,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,kCAEf5a,KAAM,CACJ9c,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,wBAEf3a,KAAM,CACJ/c,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEf1a,KAAM,CACJhd,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfza,IAAK,CACHjd,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEfxa,KAAM,CACJld,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfva,IAAK,CACHnd,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEfta,IAAK,CACHpd,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,gCAEfra,MAAO,CACLrd,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfnd,MAAO,CACLva,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,sCAEf7d,KAAM,CACJ7Z,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEfpa,KAAM,CACJtd,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEfna,IAAK,CACHvd,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEfla,MAAO,CACLxd,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEfha,KAAM,CACJ1d,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,sBAEf9c,QAAS,CACP5a,OAAQ,UACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf/Z,IAAK,CACH3d,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEf9Z,IAAK,CACH5d,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,wBAEf7Z,KAAM,CACJ7d,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEfnf,IAAK,CACHvY,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEf3Z,IAAK,CACH/d,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEf1Z,KAAM,CACJhe,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfzZ,IAAK,CACHje,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfve,KAAM,CACJnZ,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,2BAEfxZ,IAAK,CACHle,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEfvZ,KAAM,CACJne,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEftd,IAAK,CACHpa,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEflZ,MAAO,CACLxe,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEfjZ,MAAO,CACLze,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfhZ,OAAQ,CACN1e,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEf/Y,MAAO,CACL3e,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEf5Y,KAAM,CACJ9e,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,sBAEf3Y,IAAK,CACH/e,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEf1Y,MAAO,CACLhf,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfhX,IAAK,CACH1gB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,0BAEf/W,IAAK,CACH3gB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,0BAEfjX,GAAI,CACFzgB,OAAQ,KACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,0BAEfzY,KAAM,CACJjf,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfxY,MAAO,CACLlf,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,wBAEf9W,IAAK,CACH5gB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,0BAEf7W,IAAK,CACH7gB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,0BAEfvY,IAAK,CACHnf,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEfpiB,KAAM,CACJtV,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,gCAEftY,MAAO,CACLpf,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,0BAEfrY,KAAM,CACJrf,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfzX,IAAK,CACHjgB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfpY,KAAM,CACJtf,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,wBAEf1c,QAAS,CACPhb,OAAQ,UACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,sBAEf1W,KAAM,CACJhhB,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfxW,IAAK,CACHlhB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfvW,IAAK,CACHnhB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfnY,IAAK,CACHvf,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,kCAEfjY,IAAK,CACHzf,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,kCAEflY,IAAK,CACHxf,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEf3X,MAAO,CACL/f,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf1X,IAAK,CACHhgB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEfja,MAAO,CACLzd,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,sBAEf5Z,KAAM,CACJ9d,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEftiB,MAAO,CACLpV,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,gCAEfnb,KAAM,CACJvc,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEfpb,KAAM,CACJtc,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfniB,KAAM,CACJvV,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEf/f,IAAK,CACH3X,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEflX,KAAM,CACJxgB,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8CAEftZ,MAAO,CACLpe,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfrZ,OAAQ,CACNre,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfpZ,MAAO,CACLte,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfnZ,MAAO,CACLve,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEf9Y,IAAK,CACH5e,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfvhB,KAAM,CACJnW,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEf7Y,IAAK,CACH7e,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfpX,IAAK,CACHtgB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,4BAEfrX,KAAM,CACJrgB,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,6BAEftX,IAAK,CACHpgB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,6BAEfvX,IAAK,CACHngB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,mBAEfxX,KAAM,CACJlgB,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,uBAEfhhB,KAAM,CACJ1W,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,sBAEf9f,KAAM,CACJ5X,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,wBAEf5X,IAAK,CACH9f,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,2BAEf7X,KAAM,CACJ7f,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,2BAEfnX,KAAM,CACJvgB,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,wBAEf5W,IAAK,CACH9gB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,0BAEf3W,IAAK,CACH/gB,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,qBAEf9X,IAAK,CACH5f,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,0BAEf/X,IAAK,CACH3f,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,wBAEfhY,IAAK,CACH1f,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,wBAEftW,KAAM,CACJphB,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEfrW,OAAQ,CACNrhB,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENjB,SAAU,GACVy3B,YAAa,2BAEfxb,MAAO,CACLlc,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfzb,QAAS,CACPjc,OAAQ,UACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfrb,MAAO,CACLrc,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfrd,IAAK,CACHra,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEftb,IAAK,CACHpc,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfpd,KAAM,CACJta,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEfvb,IAAK,CACHnc,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEf1b,KAAM,CACJhc,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,kCAEf3b,IAAK,CACH/b,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf7e,KAAM,CACJ7Y,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,yBAEf5b,KAAM,CACJ9b,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,6BAEfpgB,IAAK,CACHtX,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,gCAEflhB,IAAK,CACHxW,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEf7b,KAAM,CACJ7b,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,iCAEf9b,IAAK,CACH5b,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEf/b,KAAM,CACJ3b,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfhgB,KAAM,CACJ1X,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,oBAEfhc,IAAK,CACH1b,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,oBAEfjc,KAAM,CACJzb,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,wBAEf7f,OAAQ,CACN7X,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEflc,IAAK,CACHxb,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEfnc,KAAM,CACJvb,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfpc,KAAM,CACJtb,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfrc,IAAK,CACHrb,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfrgB,IAAK,CACHrX,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,wBAEftc,IAAK,CACHpb,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,2BAEfvc,KAAM,CACJnb,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfxc,KAAM,CACJlb,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfzc,IAAK,CACHjb,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,gCAEf/gB,MAAO,CACL3W,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEf3c,IAAK,CACH/a,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEfM,IAAK,CACHh4B,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,oCAEf5c,MAAO,CACL9a,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEf7c,IAAK,CACH7a,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf/c,YAAM,CACJ3a,OAAQ,YACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,8BAEfhd,OAAQ,CACN1a,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,kCAEfjd,IAAK,CACHza,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfld,IAAK,CACHxa,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfjiB,IAAK,CACHzV,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,+BAEfzhB,IAAK,CACHjW,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEf/hB,IAAK,CACH3V,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfvd,MAAO,CACLna,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfxd,KAAM,CACJla,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEf1d,IAAK,CACHha,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEfzd,IAAK,CACHja,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEf3d,KAAM,CACJ/Z,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEf5d,IAAK,CACH9Z,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,wBAEf9d,KAAM,CACJ5Z,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,yBAEf/d,KAAM,CACJ3Z,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEfhe,IAAK,CACH1Z,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEf1hB,KAAM,CACJhW,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfte,SAAU,CACRpZ,OAAQ,WACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEfje,aAAO,CACLzZ,OAAQ,aACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,8BAEfle,IAAK,CACHxZ,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfne,KAAM,CACJvZ,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEfpe,MAAO,CACLtZ,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,2BAEfre,KAAM,CACJrZ,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEfxe,KAAM,CACJlZ,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfze,IAAK,CACHjZ,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,wBAEf1e,IAAK,CACHhZ,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,wBAEf/e,KAAM,CACJ3Y,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,sBAEf3e,KAAM,CACJ/Y,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,gCAEf5e,KAAM,CACJ9Y,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEf3gB,IAAK,CACH/W,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEf5gB,OAAQ,CACN9W,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEf9e,MAAO,CACL5Y,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEfhf,GAAI,CACF1Y,OAAQ,KACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEfjf,IAAK,CACHzY,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,qBAEflf,KAAM,CACJxY,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfpf,KAAM,CACJtY,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfrf,IAAK,CACHrY,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEftf,IAAK,CACHpY,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEfvf,KAAM,CACJnY,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,mCAEfxf,GAAI,CACFlY,OAAQ,KACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,wBAEfzf,IAAK,CACHjY,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEf1f,KAAM,CACJhY,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,2BAEf3f,OAAQ,CACN/X,OAAQ,SACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,8BAEf5f,MAAO,CACL9X,OAAQ,QACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yBAEfjgB,KAAM,CACJzX,OAAQ,OACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,+BAEflgB,GAAI,CACFxX,OAAQ,KACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,uBAEfngB,IAAK,CACHvX,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,sBAEftgB,IAAK,CACHpX,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,0BAEfvgB,IAAK,CACHnX,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,wBAEfxgB,IAAK,CACHlX,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,4BAEfO,SAAU,CACRj4B,OAAQ,WACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,EACVy3B,YAAa,yBAEf3hB,IAAK,CACH/V,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,6BAEf5hB,IAAK,CACH9V,OAAQ,MACRkB,QAAS,CACP,GAAI,6CACJ,GAAI,IAENjB,SAAU,GACVy3B,YAAa,yB,iCCv4DjB,kHAEO,SAASQ,EAAgBC,EAAgC74B,GAC9D,OAAOA,GAAW64B,IAAaC,IAAQC,IAAK/4B,GAAW64B,aAAoBxmB,IAAQwmB,OAAWv1B,EAGzF,SAAS01B,EACdC,EACAj5B,GAEA,IAAMqT,EAAQ4lB,GAAkBj5B,EAAU44B,EAAgBK,EAAeJ,SAAU74B,QAAWsD,EAC9F,OAAO+P,GAAS4lB,EAAiB,IAAIC,IAAY7lB,EAAO4lB,EAAeE,UAAO71B,EAGzE,SAAS81B,EAAe/lB,GAC7B,OAAIA,EAAMgmB,OAAON,IAAK1lB,EAAMrT,UAAkB84B,IACvCzlB,I,2ICLGimB,E,kEAFNC,EAAiB,IAAI7V,IAAU8V,KAS9B,SAASC,EAASC,GACvB,IAAQ15B,EAAY2mB,cAAZ3mB,QAEF6D,EAASoQ,mBACb,kBACEylB,EAAW70B,KAAI,mCAAE80B,EAAF,KAAaC,EAAb,WAA4B,CACzChB,YAAgBe,EAAW35B,GAC3B44B,YAAgBgB,EAAW55B,SAE/B,CAACA,EAAS05B,IAGNG,EAAgB5lB,mBACpB,kBACEpQ,EAAOgB,KAAI,YAAuB,IAAD,mBAApB0hB,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAO8S,OAAO7S,GAAUC,IAAK1hB,WAAWwhB,EAAQC,QAAUljB,OAE1F,CAACO,IAGGi2B,EAAUC,YAA8BF,EAAeN,EAAgB,eAE7E,OAAOtlB,mBAAQ,WACb,OAAO6lB,EAAQj1B,KAAI,SAACiO,EAAQmR,GAC1B,IAAgB+V,EAAsBlnB,EAA9BA,OAAkBmnB,EAAYnnB,EAAZmnB,QACpB1T,EAAS1iB,EAAOogB,GAAG,GACnBuC,EAAS3iB,EAAOogB,GAAG,GAEzB,GAAIgW,EAAS,MAAO,CAACX,EAAUY,QAAS,MACxC,IAAK3T,IAAWC,GAAUD,EAAO8S,OAAO7S,GAAS,MAAO,CAAC8S,EAAUa,QAAS,MAC5E,IAAKH,EAAU,MAAO,CAACV,EAAUc,WAAY,MAC7C,IAAQC,EAAuBL,EAAvBK,SAAUC,EAAaN,EAAbM,SAClB,EAAyB/T,EAAOsB,YAAYrB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAON,EAAP,KAAeC,EAAf,KACA,MAAO,CACLoT,EAAUiB,OACV,IAAI9T,IAAK,IAAIyS,IAAYjT,EAAQoU,EAAS/5B,YAAa,IAAI44B,IAAYhT,EAAQoU,EAASh6B,mBAG3F,CAACw5B,EAASj2B,IAGR,SAAS22B,EAAQjU,EAAmBC,GACzC,OAAOiT,EAAS,CAAC,CAAClT,EAAQC,KAAU,I,SAjD1B8S,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,0GCHNmB,EAAkBh4B,IAAO4L,IAAV,2EAoBNqsB,IAbyB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAS/3B,EAAY,iBAC9D,EAA+Cg4B,aAAWD,EAAM,CAAEE,UAAW,YAAaC,QAAS,UAA3FC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,OACE,eAAC,IAAD,2BAASr4B,GAAT,cACGq4B,GAAkBD,EACnB,cAACP,EAAD,CAAiBS,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUI,MAAM,aAAalH,MAAM,iB,oFCjB5BmH,EAFO,SAACzlB,GAAD,OAAiBA,GAHN,KAGyCA,GAF3C,K,OCsBhB0lB,EApBsB,CAQnC,CACE1lB,IAAK,KACLC,SAAU,aACVC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENxC,MAAOxP,IAAO8W,IACd5E,WAAYlS,IAAOmS,O,kECyFRslB,EAxFA,uCAAG,WAAOC,GAAP,mEAAA37B,EAAA,6DACR+V,EAAwC4lB,EAAxC5lB,IAAKE,EAAmC0lB,EAAnC1lB,YAAaxC,EAAsBkoB,EAAtBloB,MAAO0C,EAAewlB,EAAfxlB,WAC3BylB,EAAYz2B,YAAW8Q,GACvBlR,EAAQ,CAEZ,CACE/C,QAASmD,YAAWsO,EAAMzR,SAC1BnB,KAAM,YACNJ,OAAQ,CAACm7B,IAGX,CACE55B,QAASmD,YAAWgR,EAAWnU,SAC/BnB,KAAM,YACNJ,OAAQ,CAACm7B,IAGX,CACE55B,QAAS45B,EACT/6B,KAAM,YACNJ,OAAQ,CAAC6tB,gBAGX,CACEtsB,QAAS45B,EACT/6B,KAAM,eAGR,CACEmB,QAASmD,YAAWsO,EAAMzR,SAC1BnB,KAAM,YAGR,CACEmB,QAASmD,YAAWgR,EAAWnU,SAC/BnB,KAAM,aAnCM,SAwCRuE,YAAUy2B,EAAO92B,GAxCT,sCAuCT+2B,EAvCS,KAuCOC,EAvCP,KAuC4BC,EAvC5B,KAuC8CC,EAvC9C,KAuC6Dp6B,EAvC7D,KAuC4Eq6B,EAvC5E,KA2CVC,EAAe,IAAI12B,IAAUu2B,GAAkBvtB,IAAI,IAAIhJ,IAAUw2B,IAGjEG,EAAmB,IAAI32B,IAAUq2B,GAAgBrtB,IAAI4tB,IAAQC,IAAIz6B,IACjE06B,EAAwB,IAAI92B,IAAUs2B,GAAqBttB,IAAI4tB,IAAQC,IAAIJ,IAG3EM,EAAgBJ,EAAiBrtB,MAAMotB,GACvCM,EAAqBF,EAAsBxtB,MAAMotB,GAGjDO,EAAsBD,EAAmB1tB,MAAM,IAAItJ,IAAU,KAIjEsQ,GAAe,IAARA,EA1DO,kCA2DJ3Q,YAAUu3B,EAAe,CAC7B,CACE36B,QAASssB,cACTztB,KAAM,WACNJ,OAAQ,CAACsV,IAEX,CACE/T,QAASssB,cACTztB,KAAM,qBAnEA,iDAsEV,CAAC,KAAM,MAtEG,yCAyDT+7B,EAzDS,KAyDHC,EAzDG,KAwEVC,EAAaF,EAAO,IAAIn3B,IAAJ,UAAcm3B,EAAKE,kBAAnB,aAAc,EAAiBC,MAAQC,IAC3DC,EAAaJ,EAAkBC,EAAWruB,IAAI,IAAIhJ,IAAUo3B,IAAoBG,IAzEtE,kBA2ET,CACLR,cAAeA,EAAc92B,SAC7B+2B,mBAAoBA,EAAmB/2B,SACvC02B,iBAAkBA,EAAiB12B,SACnC62B,sBAAuBA,EAAsB72B,SAC7Cu2B,cAAe,IAAIx2B,IAAUw2B,GAAev2B,SAC5Cg3B,oBAAqBA,EAAoBh3B,SACzCw3B,kBAAmBX,EAAsB9tB,IAAI2tB,GAAkB12B,SAC/Du3B,WAAYA,EAAWv3B,SACvBy3B,WAAW,GAAD,OAAKL,EAAWruB,IAAI,KAAK/N,WAAzB,OApFI,4CAAH,sDCXAg7B,EANA,uCAAG,WAAOC,GAAP,eAAA37B,EAAA,sEACao9B,EAAoBzB,GADjC,cACV0B,EADU,oDAGJ1B,GAAS0B,IAHL,2CAAH,sDCUAC,EAVC,uCAAG,WAAOC,GAAP,eAAAv9B,EAAA,sEACEw9B,QAAQC,IACzBF,EAAat4B,IAAb,uCAAiB,WAAOy4B,GAAP,eAAA19B,EAAA,sEACI07B,EAAUgC,GADd,cACT/B,EADS,yBAERA,GAFQ,2CAAjB,wDAFe,cACX70B,EADW,yBAOVA,GAPU,2CAAH,sDCKH62B,EAA0B,SAAC7nB,GAA4E,IAA7D8nB,EAA4D,uDAA3B,CAAC,OAAQ,QACzFC,EAAgB/nB,EAAMxO,MAAK,SAACq0B,GAChC,OAAOiC,EAAqBE,MAAK,SAAC3nB,GAChC,OAAOwlB,EAAKxlB,WAAWrV,SAAWqV,QAGtC,OAAO0nB,GAAiB/nB,EAAM,ICT1BioB,EAAyB,SAACjoB,EAAelU,EAAqBg8B,GAClE,IAAMI,EAAuBloB,EAAMvI,QAAO,SAACouB,GAAD,OAAUA,EAAKloB,MAAM3S,SAAWc,KAE1E,OADqB+7B,EAAwBK,EAAsBJ,IAI/DK,EAAwB,SAACtC,EAAYuC,EAAsBC,GAC/D,IAAMC,EAAuB5qB,QAAQmoB,EAAKuB,mBAE1C,GAA+B,SAA3BvB,EAAKxlB,WAAWrV,OAClB,OAAOs9B,EAAuB,IAAI34B,IAAUk2B,EAAKuB,mBAAqBF,IAGxE,GAA+B,SAA3BrB,EAAKxlB,WAAWrV,OAClB,OAAOs9B,EAAuBD,EAAapvB,MAAM4sB,EAAKuB,mBAAqBF,IAI7E,IAAKkB,EACH,OAAOlB,IAQT,GAAyC,SAArCkB,EAAe/nB,WAAWrV,OAAmB,CAC/C,IAAMu9B,EAAmBF,EAAapvB,MAAMmvB,EAAehB,mBAC3D,OAAOkB,GAAwBC,EAC3B,IAAI54B,IAAUk2B,EAAKuB,mBAAmBnuB,MAAMsvB,GAC5CrB,IAGN,GAAyC,SAArCkB,EAAe/nB,WAAWrV,OAAmB,CAC/C,IAAMu9B,EAAmBH,EAAehB,kBACxC,OAAOkB,GAAwBC,EAC3B,IAAI54B,IAAUk2B,EAAKuB,mBAAmBnuB,MAAMsvB,GAC5CrB,IAIN,OAAOA,KAGHsB,EAAyB,SAAC3C,EAAYuC,EAAsBC,GAChE,MAA+B,SAA3BxC,EAAKxlB,WAAWrV,OACXy9B,IAGsB,SAA3B5C,EAAKxlB,WAAWrV,OACXq9B,EAGJD,EAIoC,SAArCA,EAAe/nB,WAAWrV,OACrBo9B,EAAehB,kBAAoBiB,EAAapvB,MAAMmvB,EAAehB,mBAAqBF,IAG1D,SAArCkB,EAAe/nB,WAAWrV,QACrBo9B,EAAehB,kBAAoB,IAAIz3B,IAAUy4B,EAAehB,mBAGlEF,IAXEA,KA8BIwB,EAhBO,uCAAG,WAAO1oB,GAAP,mBAAA9V,EAAA,6DACjBy+B,EAAc3oB,EAAMxO,MAAK,SAACq0B,GAAD,OAA6B,MAAbA,EAAK5lB,OAC9CooB,EAAeM,EAAYvB,kBAAoBqB,IAAQ9vB,IAAIgwB,EAAYvB,mBAAqBF,IAE5F0B,EAAkB5oB,EAAM7Q,KAAI,SAAC02B,GACjC,IAAMuC,EAAiBH,EAAuBjoB,EAAO6lB,EAAKxlB,WAAWrV,QAC/D69B,EAAiBV,EAAsBtC,EAAMuC,EAAgBC,GAC7DS,EAAkBN,EAAuB3C,EAAMuC,EAAgBC,GAC/D1qB,EAAK,2BAAQkoB,EAAKloB,OAAb,IAAoBorB,UAAWF,EAAej5B,WACnDyQ,EAAU,2BAAQwlB,EAAKxlB,YAAb,IAAyB0oB,UAAWD,EAAgBl5B,WACpE,OAAO,2BAAKi2B,GAAZ,IAAkBloB,QAAO0C,kBAVJ,kBAahBuoB,GAbgB,2CAAH,sDCnETI,EAAuB,uCAAG,WAAOl5B,EAAiB23B,GAAxB,qBAAAv9B,EAAA,6DAC/B++B,EAAoBzQ,cAEpBvpB,EAAQw4B,EAAat4B,KAAI,SAAC02B,GAE9B,MAAO,CAAE35B,QADiBmD,YAAWw2B,EAAK1lB,aACLpV,KAAM,YAAaJ,OAAQ,CAACmF,EAASm5B,OALvC,SAQP35B,YAAUwF,EAAU7F,GARb,cAQ/Bi6B,EAR+B,OAS/BC,EAAqBD,EAAgB/5B,KAAI,SAACi6B,GAC9C,OAAO,IAAIz5B,IAAUy5B,GAAWx5B,YAVG,kBAY9Bu5B,GAZ8B,2CAAH,wDAevBE,EAA0B,uCAAG,WAAOv5B,EAAiB23B,GAAxB,mBAAAv9B,EAAA,6DAClC+E,EAAQw4B,EAAat4B,KAAI,SAAC02B,GAE9B,MAAO,CACL35B,QAFwBmD,YAAWw2B,EAAK1lB,aAGxCpV,KAAM,YACNJ,OAAQ,CAACmF,OAN2B,SAUTR,YAAUwF,EAAU7F,GAVX,cAUlCq6B,EAVkC,OAWlCC,EAAsBD,EAAiBn6B,KAAI,SAACq6B,GAChD,OAAO,IAAI75B,IAAU65B,GAAc55B,YAZG,kBAcjC25B,GAdiC,2CAAH,wDAiB1BE,EAA2B,uCAAG,WAAO35B,EAAiB23B,GAAxB,qBAAAv9B,EAAA,6DACnC++B,EAAoBzQ,cAEpBvpB,EAAQw4B,EAAat4B,KAAI,SAAC02B,GAC9B,MAAO,CACL35B,QAAS+8B,EACTl+B,KAAM,WACNJ,OAAQ,CAACk7B,EAAK5lB,IAAKnQ,OAPkB,SAWTR,YAAUu3B,EAAe53B,GAXhB,cAWnCy6B,EAXmC,OAYnCC,EAAuBD,EAAkBv6B,KAAI,SAAC6C,GAClD,OAAO,IAAIrC,IAAUqC,EAAc,GAAGi1B,MAAMr3B,YAbL,kBAelC+5B,GAfkC,2CAAH,wDAkB3BC,EAAqB,uCAAG,WAAO95B,EAAiB23B,GAAxB,qBAAAv9B,EAAA,6DAC7B++B,EAAoBzQ,cAEpBvpB,EAAQw4B,EAAat4B,KAAI,SAAC02B,GAC9B,MAAO,CACL35B,QAAS+8B,EACTl+B,KAAM,cACNJ,OAAQ,CAACk7B,EAAK5lB,IAAKnQ,OAPY,SAWTR,YAAUu3B,EAAe53B,GAXhB,cAW7B46B,EAX6B,OAY7BC,EAAiBD,EAAY16B,KAAI,SAAC46B,GACtC,OAAO,IAAIp6B,IAAUo6B,GAAUn6B,YAbE,kBAe5Bk6B,GAf4B,2CAAH,wDCjC5B/4B,EAA2B,CAAEC,KAVPg5B,IAAY76B,KAAI,SAAC02B,GAAD,mBAAC,eACxCA,GADuC,IAE1Ch0B,SAAU,CACRC,UAAW,IACX03B,aAAc,IACdx3B,cAAe,IACf+3B,SAAU,UAIgDE,uBAAuB,EAAO/4B,gBAAgB,GAK/Fg5B,GAHmBF,IAAYvyB,QAAO,gBAAGwI,EAAH,EAAGA,IAAH,OAAcylB,EAAczlB,MAGtCkqB,YACvC,kCADuD,uCAEvD,WAAOC,GAAP,uBAAAlgC,EAAA,6DACQu9B,EAAeuC,IAAYvyB,QAAO,SAACmwB,GAAD,OAAgBwC,EAAKnuB,SAAS2rB,EAAW3nB,QAG3EoqB,EAAwB5C,EAAazV,OAAOsY,GAJpD,SAMsB9C,EAAW6C,GANjC,cAMQrqB,EANR,gBAOgC0oB,EAAiB1oB,GAPjD,cAOQ4oB,EAPR,OAUQ2B,EAAwB3B,EAAgBnxB,QAAO,SAACouB,GACpD,OAAOA,EAAK5lB,KAAoB,IAAb4lB,EAAK5lB,OAX5B,kBAcSsqB,GAdT,4CAFuD,wDA4B5CC,EAAyBL,YACpC,+BADoD,uCAEpD,yCAAAjgC,EAAA,6DAAS4F,EAAT,EAASA,QAASs6B,EAAlB,EAAkBA,KACV3C,EAAeuC,IAAYvyB,QAAO,SAACmwB,GAAD,OAAgBwC,EAAKnuB,SAAS2rB,EAAW3nB,QADnF,SAEmC+oB,EAAwBl5B,EAAS23B,GAFpE,cAEQgD,EAFR,gBAGsCpB,EAA2Bv5B,EAAS23B,GAH1E,cAGQiD,EAHR,iBAImCjB,EAA4B35B,EAAS23B,GAJxE,eAIQkD,EAJR,iBAKiCf,EAAsB95B,EAAS23B,GALhE,eAKQmD,EALR,yBAOSH,EAAmBt7B,KAAI,SAAC07B,EAAep7B,GAC5C,MAAO,CACLwQ,IAAKwnB,EAAah4B,GAAOwQ,IACzBnO,UAAW24B,EAAmBh7B,GAC9B+5B,aAAckB,EAAsBj7B,GACpCuC,cAAe24B,EAAmBl7B,GAClCs6B,SAAUa,EAAiBn7B,QAbjC,4CAFoD,uDAqBzCq7B,EAAaj4B,YAAY,CACpC9H,KAAM,QACNgG,eACA+B,SAAU,CACRi4B,yBAA0B,SAACh4B,EAAOC,GAChC,IAAMi3B,EAAwBj3B,EAAOE,QACrCH,EAAMk3B,sBAAwBA,IAGlC32B,cAAe,SAACC,GAEdA,EAAQC,QAAQ02B,EAA0Bc,WAAW,SAACj4B,EAAOC,GAC3DD,EAAM/B,KAAO+B,EAAM/B,KAAK7B,KAAI,SAAC02B,GAC3B,IAAMoF,EAAej4B,EAAOE,QAAQ1B,MAAK,SAAC05B,GAAD,OAAcA,EAASjrB,MAAQ4lB,EAAK5lB,OAC7E,OAAO,2BAAK4lB,GAASoF,SAKzB13B,EAAQC,QAAQg3B,EAAuBQ,WAAW,SAACj4B,EAAOC,GACxDA,EAAOE,QAAQi4B,SAAQ,SAACC,GACtB,IAAQnrB,EAAQmrB,EAARnrB,IACFxQ,EAAQsD,EAAM/B,KAAKqC,WAAU,SAACwyB,GAAD,OAAUA,EAAK5lB,MAAQA,KAC1DlN,EAAM/B,KAAKvB,GAAX,2BAAyBsD,EAAM/B,KAAKvB,IAApC,IAA4CoC,SAAUu5B,OAExDr4B,EAAM7B,gBAAiB,QAMe45B,EAAWp3B,QAAxCq3B,yBAEAD,MAAf,S,uLCxGM/5B,EAA8B,CAClCs6B,YAAY,EACZh+B,gBAAiBf,KAINg/B,EAAc,IAAIC,IAC/BD,EAAYztB,IAAIvR,IAAGC,OAAQi/B,GAEpB,IAAMC,EAAkB1Q,6BAA0BntB,GAE5C89B,EAA6B,SAAC,GAAkB,IAAhBpQ,EAAe,EAAfA,SAC3C,EAA0BoC,oBAAwB,WAChD,IAAMiO,EAAkB3Y,cAExB,OAAO,2BACFjiB,GADL,IAEE1D,gBAAiBX,IAAUi/B,QAL/B,mBAAO54B,EAAP,KAAc64B,EAAd,KAQQv+B,EAAoB0F,EAApB1F,gBAER8uB,qBAAU,YACiB,uCAAG,gCAAAjyB,EAAA,0DACpByhC,EAAkB3Y,iBAEA1mB,IAAGC,OAHD,uBAIlBs/B,EAAWP,EAAYjuB,IAAI/Q,IAAGC,QAJZ,SAKIqmB,YAAY+Y,GALhB,OAKlBG,EALkB,OAMxBR,EAAYztB,IAAI8tB,EAAhB,2BAAsCE,GAAaC,IAN3B,OAS1BF,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPV,YAAY,OAXY,2CAAH,qDAezBW,KACC,CAACJ,IAEJ,IAAMt+B,EAAW,uCAAG,WAAOd,GAAP,iBAAAtC,EAAA,yDACbohC,EAAYW,IAAIz/B,EAASD,QADZ,wBAEhBq/B,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPV,YAAY,OAJE,SAOKzY,YAAYpmB,EAASD,QAP1B,OAOVA,EAPU,OAQVs/B,EAAWP,EAAYjuB,IAAI/Q,IAAGC,QAGpC++B,EAAYztB,IAAIrR,EAASD,OAAzB,2BAAsCs/B,GAAat/B,IACnD0mB,aAAa2E,QAAQjF,IAAQnmB,EAASD,QAEtCq/B,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPV,YAAY,EACZh+B,gBAAiBb,OAjBH,wBAoBhBymB,aAAa2E,QAAQjF,IAAQnmB,EAASD,QACtCq/B,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPV,YAAY,EACZh+B,gBAAiBb,OAxBH,4CAAH,sDA6BX0/B,EAAYld,uBAChB,SAACoD,EAAaphB,GACZ,IAGMm7B,GAHiBb,EAAYW,IAAI5+B,EAAgBd,QACnD++B,EAAYjuB,IAAIhQ,EAAgBd,QAChC++B,EAAYjuB,IAAI/Q,IAAGC,SACe6lB,IAAQA,EAK9C,GAFyB+Z,EAAeC,MAAM,aAEtBp7B,EAAM,CAC5B,IAAIq7B,EAAmBF,EAMvB,OALAv/B,OAAO0S,KAAKtO,GAAMm6B,SAAQ,SAACmB,GACzB,IAAMC,EAAc,IAAIC,OAAJ,WAAeF,EAAf,KAA2B,KAC/CD,EAAmBA,EAAiBI,QAAQF,EAAav7B,EAAKs7B,GAAS1hC,eAGlEyhC,EAGT,OAAOF,IAET,CAAC9+B,IAGH,OAAO,cAACo+B,EAAgBpQ,SAAjB,CAA0B9oB,MAAK,2BAAOQ,GAAP,IAAczF,cAAaF,EAAG8+B,IAA7D,SAA2E5Q,KCzFrEnuB,EAVQ,WACrB,IAAMu/B,EAAkBhxB,qBAAW+vB,GAEnC,QAAwB79B,IAApB8+B,EACF,MAAM,IAAI9uB,MAAM,iCAGlB,OAAO8uB,I,iECiBMlL,IAxBkB,SAACt0B,GAChC,OACE,cAAC,KAAD,yBAAKqxB,MAAM,KAAKkD,OAAO,KAAKC,QAAQ,cAAcC,KAAK,QAAWz0B,GAAlE,aACE,oBAAGy/B,MAAM,6BAA6BnvB,GAAG,WAAzC,UACE,sBAAMovB,OAAO,OAAOC,SAAS,UAAUlL,KAAK,sBAAsBmL,YAAa,EAAG/K,EAAE,qHACpF,sBAAM6K,OAAO,OAAOC,SAAS,UAAUlL,KAAK,wCAAwCmL,YAAa,EAAG/K,EAAE,62D,ixtCCCxGgL,EAAkB5Z,cAEX6Z,EAAO,uCAAG,WAAOC,GAAP,yBAAA/iC,EAAA,+EAE2D6iC,EAAgBG,eAAeD,GAF1F,uBAERE,EAFQ,EAEX,GAAgBC,EAFL,EAEE,GAAmBC,EAFrB,EAEkB,GAAoBC,EAFtC,EAEmC,GAChDC,EAAiBpZ,IAAU3iB,MAAK,SAACg8B,GAAD,OAAgBA,EAAWhwB,KAAOyvB,KAHrD,kBAKZQ,IAAM,GAAIF,EAAgB,CAC/BD,aACAviC,KAAMoiC,EACNO,MAAON,EAAYO,WACnB5Z,OAAQsZ,EAAaM,cATJ,2DAYZ,MAZY,0DAAH,sDAmBPC,EAAQ,uCAAG,sCAAA1jC,EAAA,sEAEd2jC,EAAY1Z,IAAUlkB,QAAO,SAACmkB,EAAOC,GACzC,OAAO,2BACFD,GADL,kBAEGC,EAAK7W,GAAK6W,MAEZ,IAPiB,SAQE0Y,EAAgBe,cARlB,OAWpB,IAHMC,EARc,OAUd9+B,EAAQ,GACLsf,EAAI,EAAGA,GAAKwf,EAASxf,IAC5Btf,EAAM++B,KAAK,CACT9hC,QAAS2sB,cACT9tB,KAAM,iBACNJ,OAAQ,CAAC4jB,KAfO,gBAkBG0f,YAAYC,EAAYj/B,GAlB3B,cAkBdk/B,EAlBc,OAoBdC,EAAkBD,EAASl+B,QAAO,SAACmkB,EAAOC,EAAM5kB,GACpD,IAAW09B,EAA6D9Y,EAAhE,GAAgB+Y,EAAgD/Y,EAAnD,GAAmBgZ,EAAgChZ,EAAnC,GAAoBiZ,EAAejZ,EAAlB,GAEtD,OAAO,2BACFD,GADL,kBAEG3kB,EAAQ,EAAI,CACX1E,KAAMoiC,EACNO,MAAON,EAAYO,WACnB5Z,OAAQsZ,EAAaM,WACrBL,kBAGH,IAhCiB,kBAkCbG,IAAM,GAAII,EAAWO,IAlCR,2DAoCb,MApCa,0DAAH,sD,iCCuBNC,IAnDO,CACpB,CACE7wB,GAAI,EACJzS,KAAM,cACN8hB,YAAa,gFACbC,OAAQ,CACNC,GAAI,qBACJC,GAAI,qBACJC,GAAI,qBACJqhB,IAAK,sBACLphB,KAAM,mGAERqhB,WAAY,qBACZC,UAAW,UACXd,MAAO,EACP3Z,OAAQ,GAEV,CACEvW,GAAI,EACJzS,KAAM,oBACN8hB,YAAa,yFACbC,OAAQ,CACNC,GAAI,2BACJC,GAAI,2BACJC,GAAI,2BACJqhB,IAAK,4BACLphB,KAAM,yGAERqhB,WAAY,2BACZC,UAAW,UACXd,MAAO,EACP3Z,OAAQ,GAEV,CACEvW,GAAI,EACJzS,KAAM,iBACN8hB,YAAa,sFACbC,OAAQ,CACNC,GAAI,wBACJC,GAAI,wBACJC,GAAI,wBACJqhB,IAAK,yBACLphB,KAAM,sGAERqhB,WAAY,wBACZC,UAAW,UACXd,MAAO,EACP3Z,OAAQ,K,0bC1BZ,SAAS0a,EAAiBnxB,EAA2BoxB,GACnD,IAAMpkC,EAAY2mB,cAAZ3mB,QACU,KAAZA,IACFA,EAAU,IAEZ,IAAMqkC,EAAkBC,cAExB,OAAOrwB,mBAAQ,WACb,IAAKjU,EAAS,MAAO,GAGrB,IAAMukC,EAAiBjiC,OAAO0S,KAAKhC,EAAShT,IAAU2F,QAAqC,SAAC6+B,EAAQ5iC,GAElG,OADA4iC,EAAO5iC,GAAWoR,EAAShT,GAAS4B,GAASyR,MACtCmxB,IACN,IAEH,OAAIJ,EAEAC,EAEG1+B,QACC,SAAC8+B,EAAWpxB,GAEV,OADAoxB,EAAUpxB,EAAMzR,SAAWyR,EACpBoxB,IALb,eASSF,IAKNA,IACN,CAACvkC,EAASqkC,EAAiBrxB,EAAUoxB,IAQnC,SAASxd,IAEd,OAAOud,EADWvvB,eACiB,GAG9B,SAAS8vB,IAEd,OAAOP,EADW5uB,eACiB,GAG9B,SAASovB,IAEd,IACMC,EAAiBT,EADGrvB,eACiC,GAGrD+vB,EAAwBviC,OAAO0S,KAAK4R,KAU1C,OATyBie,EACrBviC,OAAO0S,KAAK4vB,GAAgBj/B,QAAqC,SAAC6+B,EAAQ5iC,GAI1E,OAHKijC,EAAsBlzB,SAAS/P,KAClC4iC,EAAO5iC,GAAWgjC,EAAehjC,IAE5B4iC,IACN,IACDI,EAKC,SAASE,IAEd,OAAOX,EADsBhvB,eACiB,GAGzC,SAAS4vB,EAAiB1xB,GAC/B,IAAM2xB,EAAepe,IAErB,SAAKoe,IAAiB3xB,MAIb2xB,EAAa3xB,EAAMzR,SAIvB,SAASqjC,EAAuBC,GACrC,IAAQllC,EAAY2mB,cAAZ3mB,QACF4kC,EAAiBD,IAEvB,OAAO1wB,mBAAQ,WACb,GAAKjU,GAA2B,KAAhBklC,EAIhB,OADeC,YAAa7iC,OAAOC,OAAOqiC,GAAiBM,KAE1D,CAACllC,EAAS4kC,EAAgBM,IAIxB,SAASE,EAAoBvM,GAClC,IAAMwL,EAAkBC,cAExB,QAAKzL,KAIIwL,EAAgBn9B,MAAK,SAACmM,GAAD,OAAWgyB,YAAexM,EAAUxlB,MAIpE,IAAMiyB,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAIG,OAAS,EACvBH,EAEFC,GAAWH,EAAcM,KAAKH,IAAsC,IAA1BI,mBAASJ,GAAS,IACxDK,YAAmBL,GACnBC,EAMD,SAASK,EAASxkC,GACvB,IAAQvB,EAAY2mB,cAAZ3mB,QACF6D,EAAS+iB,IAEThlB,EAAUokC,YAAUzkC,GAEpB0kC,EAAgBC,YAAiBtkC,QAAW0B,GAAW,GACvD6iC,EAAuBC,YAAwBxkC,QAAW0B,GAAW,GACrE+P,EAA2BzR,EAAUiC,EAAOjC,QAAW0B,EAEvD+iC,EAAYC,YAAoBjzB,OAAQ/P,EAAY2iC,EAAe,YAAQ3iC,EAAWijC,KACtFC,EAAmBF,YACvBjzB,OAAQ/P,EAAY6iC,EACpB,YACA7iC,EACAijC,KAEI7lC,EAAS4lC,YAAoBjzB,OAAQ/P,EAAY2iC,EAAe,cAAU3iC,EAAWijC,KACrFE,EAAgBH,YAAoBjzB,OAAQ/P,EAAY6iC,EAAsB,cAAU7iC,EAAWijC,KACnG5lC,EAAW2lC,YAAoBjzB,OAAQ/P,EAAY2iC,EAAe,gBAAY3iC,EAAWijC,KAE/F,OAAOtyB,mBAAQ,WACb,GAAIZ,EAAO,OAAOA,EAClB,GAAKrT,GAAY4B,EAAjB,CACA,GAAIjB,EAASs5B,SAAWv5B,EAAOu5B,SAAWoM,EAAUpM,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAIt5B,EAASmS,OACX,OAAO,IAAIT,IACTrS,EACA4B,EACAjB,EAASmS,OAAO,GAChByyB,EAAoB,UAAC7kC,EAAOoS,cAAR,aAAC,EAAgB,GAAjB,UAAqB2zB,EAAc3zB,cAAnC,aAAqB,EAAuB,GAAI,WACpEyyB,EAAoB,UAACc,EAAUvzB,cAAX,aAAC,EAAmB,GAApB,UAAwB0zB,EAAiB1zB,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACDlR,EACA5B,EACAW,EAASs5B,QACTt5B,EAASmS,OACTpS,EAAOu5B,QACPv5B,EAAOoS,OACP2zB,EAAc3zB,OACdO,EACAgzB,EAAUpM,QACVoM,EAAUvzB,OACV0zB,EAAiB1zB,SAsDd,SAAS4zB,EAAYC,GAC1B,IAAMC,EAAsC,SAApB,OAAVD,QAAU,IAAVA,OAAA,EAAAA,EAAYE,eACpBxzB,EAAQ0yB,EAASa,OAAQtjC,EAAYqjC,GAC3C,OAAOC,EAAQ9N,IAAQzlB,I,2ICpPpByzB,EAMAC,E,6FAWU,SAASC,EAAT,GAAkG,IAU3GC,EAWAC,EArBiCC,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,eAAgB7hB,EAA4C,EAA5CA,SAAU8hB,EAAkC,EAAlCA,YAC5E,EAA0CjU,mBAAS,IAAnD,mBAAOkU,EAAP,KAAsBC,EAAtB,KACA,EAA0CnU,mBAAS,IAAnD,mBAAOoU,EAAP,KAAsBC,EAAtB,KAEQ3kC,EAAMD,cAANC,EAEF4kC,EACc,KAAlBJ,IAAyBH,EAAc,KAAKv4B,QAAQ,KAAOiD,OAAO81B,WAAWL,GAAe14B,QAAQ,GAChGg5B,EAAyC,KAAlBJ,IAAyBjiB,EAAW,IAAIjlB,aAAeknC,EAoBpF,SAASK,EAAoB5/B,GAC3Bs/B,EAAiBt/B,GAEjB,IACE,IAAM6/B,EAA6Bj2B,OAAO5R,UAAqC,IAA3B4R,OAAO81B,WAAW1/B,IAAc3H,aAC/EuR,OAAOk2B,MAAMD,IAA+BA,EAA6B,KAC5EV,EAAeU,GAEjB,MAAO7mC,GACPD,QAAQC,MAAMA,IAIlB,SAAS+mC,EAAoB//B,GAC3Bw/B,EAAiBx/B,GAEjB,IACE,IAAMggC,EAA8C,GAAzBp2B,OAAO5R,SAASgI,IACtC4J,OAAOk2B,MAAME,IAAeA,EAAa,GAC5CZ,EAAYY,GAEd,MAAOhnC,GACPD,QAAQC,MAAMA,IAIlB,OAxCEgmC,EAHoB,KAAlBK,GAAyBI,EAElBA,GAAwBP,EAAc,GAC/BL,EAAcoB,SACrBR,GAAwBP,EAAc,IAC/BL,EAAcqB,eAEd7kC,EANAwjC,EAAcsB,aAa9BlB,EAHoB,KAAlBM,GAAyBI,OAGXtkC,EAFAyjC,EAAcqB,aAgC9B,eAAC,IAAD,CAAY3T,IAAI,KAAhB,UACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,eAACV,EAAA,EAAD,WACE,cAAC,KAAD,CAAMsU,SAAS,OAAf,SAAuBvlC,EAAE,wBACzB,cAAC43B,EAAA,EAAD,CACEC,KAAM73B,EAAE,+FACRwlC,GAAG,WAGP,eAAC,IAAD,CAAMC,SAAU,CAAC,OAAQ,OAAQ,UAAjC,UACE,eAAC,IAAD,CAAMC,oBAAoB,cAAcC,QAAQ,MAAMC,GAAI,CAAC,MAAO,MAAO,GAAIC,GAAI,CAAC,EAAG,EAAG,OAAxF,UACE,cAAC,IAAD,CACEllC,QAAS,WACP8jC,EAAiB,IACjBH,EAAe,KAEjBwB,QAAyB,KAAhBzB,EAAqB,UAAY,WAL5C,kBASA,cAAC,IAAD,CACE1jC,QAAS,WACP8jC,EAAiB,IACjBH,EAAe,KAEjBwB,QAAyB,KAAhBzB,EAAqB,UAAY,WAL5C,kBASA,cAAC,IAAD,CACE1jC,QAAS,WACP8jC,EAAiB,IACjBH,EAAe,MAEjBwB,QAAyB,MAAhBzB,EAAsB,UAAY,WAL7C,mBAUF,eAACpT,EAAA,EAAD,WACE,cAAC,IAAD,CACE8U,UAAU,qBACVC,MAAM,KACNC,aAAc5B,EAAc,KAAKv4B,QAAQ,GACzC3G,MAAOq/B,EACP0B,OAAQ,WACNnB,GAAqBV,EAAc,KAAKv4B,QAAQ,KAElDq6B,SAAU,SAACC,GAAD,OAAOrB,EAAoBqB,EAAEC,OAAOlhC,QAC9CmhC,WAAY1B,EACZ2B,WAAY,CAAC,GAAI,GAAI,KAAK13B,SAASw1B,KAErC,cAAC,KAAD,CAAMhM,MAAM,UAAUmO,MAAI,EAAChB,GAAG,MAA9B,uBAKDrB,GACD,cAAClT,EAAA,EAAD,CACEwV,MAAO,CACLlB,SAAU,OACVmB,WAAY,MACZrO,MAAO8L,IAAkBH,EAAcsB,aAAe,MAAQ,WAJlE,SAOGnB,IAAkBH,EAAcsB,aAC7BtlC,EAAE,qCACFmkC,IAAkBH,EAAcoB,SAChCplC,EAAE,6BACFA,EAAE,yCAKZ,eAAC,IAAD,CAAY2xB,IAAI,KAAhB,UACE,eAACV,EAAA,EAAD,WACE,cAAC,KAAD,CAAMsU,SAAS,OAAf,SAAuBvlC,EAAE,0BACzB,cAAC43B,EAAA,EAAD,CAAgBC,KAAM73B,EAAE,0EAA2EwlC,GAAG,WAExG,eAACvU,EAAA,EAAD,WACE,cAAC,IAAD,CACE8U,UAAU,qBACV1N,MAAO+L,EAAgB,WAAQ5jC,EAC/B0lC,OAAQ,WACNhB,GAAqBziB,EAAW,IAAIjlB,aAEtCyoC,aAAcxjB,EAAW,IAAIjlB,WAC7B2H,MAAOu/B,EACPyB,SAAU,SAACC,GAAD,OAAOlB,EAAoBkB,EAAEC,OAAOlhC,UAEhD,cAAC,KAAD,CAAMwhC,GAAG,MAAMpB,SAAS,OAAxB,SACGvlC,EAAE,uB,SAnKVgkC,K,4BAAAA,E,oBAAAA,E,uBAAAA,M,cAMAC,K,6BAAAA,M,KCHL,IAwBe2C,EAxBqC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACrD,EAA0D1kB,cAA1D,mBAAOC,EAAP,KAA8B0kB,EAA9B,KACA,EAAsBvkB,cAAtB,mBAAOwkB,EAAP,KAAYC,EAAZ,KACQhnC,EAAMD,cAANC,EAER,OACE,cAAC,IAAD,CAAO0pB,MAAO1pB,EAAE,YAAa6mC,UAAWA,EAAxC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYlV,IAAI,KAAK8U,MAAO,CAAEnV,QAAS,QAAvC,UACE,cAAC,KAAD,CAAMkV,MAAI,EAACjB,SAAS,OAApB,SACGvlC,EAAE,0BAEL,cAAC,EAAD,CACEqkC,YAAajiB,EACbkiB,eAAgBwC,EAChBrkB,SAAUskB,EACVxC,YAAayC,YCrBV,SAASC,IACtB,MAAiCC,aAAS,cAAC,EAAD,KAAnCC,EAAP,oBACA,EAAqB3lB,cAAdE,EAAP,oBAEA,OACE,cAAC,IAAD,CAAiB0lB,KAAM1lB,EAAvB,SACE,cAAC,IAAD,CAAQokB,QAAQ,OAAOl+B,EAAG,EAAGjH,QAASwmC,EAAwB/2B,GAAG,8BAAjE,SACE,cAAC,KAAD,CAAUioB,MAAM,UAAUlH,MAAM,a,2DCJlCkW,EAAmB1nC,IAAO4L,IAAV,8PASX,qBAAG8C,MAAkBi5B,OAAOC,WAGjCC,EAAc7nC,IAAO4L,IAAV,2CACN,gBAAGk8B,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAASr5B,EAArB,EAAqBA,MAArB,OACPo5B,EAAUp5B,EAAMi5B,OAAOC,QAAUG,EAAUr5B,EAAMi5B,OAAOI,QAAUr5B,EAAMi5B,OAAOK,WAGpE,SAASC,EAAT,GAA0D,IAAD,IAAlCC,EAAkC,EAAlCA,GAC5B3qC,EAAY2mB,cAAZ3mB,QAEF4qC,EAAO,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAIC,QACdL,IAAU,OAACI,QAAD,IAACA,OAAD,EAACA,EAAIE,SACfL,GAAWD,GAAWI,IAA8B,KAAvB,UAAAA,EAAGE,eAAH,eAAYC,SAA8C,qBAA9B,UAAOH,EAAGE,eAAV,aAAO,EAAYC,SAElF,OAAK9qC,EAGH,eAACmqC,EAAD,CAAkBI,QAASA,EAASC,QAASA,EAA7C,UACE,cAAC,IAAD,CAAcre,KAAM4e,YAAeJ,EAAGK,KAAM,cAAehrC,GAA3D,gBAAsE4qC,QAAtE,IAAsEA,IAAWD,EAAGK,OACpF,cAACV,EAAD,CAAaC,QAASA,EAASC,QAASA,EAAxC,SACGD,EAAU,cAACU,EAAA,EAAD,IAAmBT,EAAU,cAAC,IAAD,CAAerP,MAAM,YAAe,cAAC,IAAD,CAAWA,MAAM,iBAN9E,KCnBvB,SAAS+P,EAAqBtrC,EAAuBurC,GACnD,OAAOA,EAAEC,UAAYxrC,EAAEwrC,UAGzB,SAASC,EAAmBC,GAC1B,OACE,cAAC,IAAD,CAAMC,cAAc,SAApB,SACGD,EAAazmC,KAAI,SAAC8lC,GACjB,OAAO,cAACD,EAAD,CAA0CC,GAAIA,GAA5BA,EAAGK,KAAOL,EAAGS,gBAM9C,I,MA2CeI,EA3CyC,SAAC,GAAmB,IAAjB7B,EAAgB,EAAhBA,UACzD,EAA6BhjB,cAArBnhB,EAAR,EAAQA,QAASxF,EAAjB,EAAiBA,QACX8G,EAAWyd,cACXknB,EAAkBC,cAEhB5oC,EAAMD,cAANC,EAEF6oC,EAA2B13B,mBAAQ,WAEvC,OADY3R,OAAOC,OAAOkpC,GACft+B,OAAOy+B,KAAqBz3B,KAAK+2B,KAC3C,CAACO,IAEElB,EAAUoB,EAAyBx+B,QAAO,SAACw9B,GAAD,OAASA,EAAGE,WACtDgB,EAAYF,EAAyBx+B,QAAO,SAACw9B,GAAD,OAAQA,EAAGE,WAEvDiB,EAA+BpnB,uBAAY,WAC3C1kB,GAAS8G,EAASiJ,YAAqB,CAAE/P,eAC5C,CAAC8G,EAAU9G,IAEd,OACE,cAAC,IAAD,CAAO+rC,SAAS,QAAQvf,MAAO1pB,EAAE,uBAAwB6mC,UAAWA,EAApE,SACGnkC,GACC,cAAC,IAAD,UACK+kC,EAAQ5E,QAAYkG,EAAUlG,OAC/B,qCACE,eAAC,IAAD,CAAS+C,GAAG,OAAOa,MAAO,CAAEyC,eAAgB,iBAA5C,UACE,cAAC,KAAD,UAAOlpC,EAAE,yBACT,cAAC,IAAD,CAAQ8lC,QAAQ,WAAWE,MAAM,KAAKrlC,QAASqoC,EAA/C,SACGhpC,EAAE,kBAGNuoC,EAAmBd,GACnBc,EAAmBQ,MAGtB,cAAC,KAAD,UAAO/oC,EAAE,iCC/CNmpC,EAXM,WACnB,MAAqCjC,aAAS,cAAC,EAAD,KAAvCkC,EAAP,oBACA,OACE,mCACE,cAAC,IAAD,CAAQtD,QAAQ,OAAOl+B,EAAG,EAAGjH,QAASyoC,EAA4B5D,GAAG,OAArE,SACE,cAAC,IAAD,CAAanN,MAAM,UAAUlH,MAAM,cCcrCkY,EAAqB1pC,YAAO2pC,IAAP3pC,CAAH,iLAMK,qBAAG0O,MAAkBi5B,OAAOiC,cAoC1CC,EAjCoB,SAAC,GAA2D,IAAzD9f,EAAwD,EAAxDA,MAAO+f,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAA+B,IAAvBC,gBAAuB,SAC5F,OACE,eAACP,EAAD,WACE,eAAC,IAAD,CAAMQ,WAAW,SAAShE,GAAI+D,EAAW,EAAI,OAA7C,UACGD,GACC,cAAC,IAAD,CAAYG,GAAIC,IAAMC,GAAIL,EAA1B,SACE,cAAC,IAAD,CAAexY,MAAM,WAGvBzH,GAAS+f,EACT,eAAC,IAAD,CAAMhB,cAAc,SAApB,UACE,cAAC,IAAD,CAASqB,GAAG,KAAKlE,GAAG,MAApB,SACGlc,IAEH,eAAC,IAAD,CAAMmgB,WAAW,SAAjB,UACGH,GAAU,cAAC9R,EAAA,EAAD,CAAgBC,KAAM6R,EAAQ7D,GAAG,QAC5C,cAAC,KAAD,CAAMxN,MAAM,aAAakN,SAAS,OAAlC,SACGkE,UAGI,SAGbG,GACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,WC/CGK,EAActqC,YAAOuqC,IAAPvqC,CAAH,wGAUT,SAASwqC,EAAT,GAA+D,IAA5Cjc,EAA2C,EAA3CA,SAChC,OAAO,cAAC+b,EAAD,UAAc/b,ICXhB,IAAM+b,EAActqC,YAAOuqC,IAAPvqC,CAAH,uGAUT,SAASyqC,EAAT,GAAkE,IAA5Clc,EAA2C,EAA3CA,SACnC,OAAO,cAAC,EAAD,UAAcA,M,sFCnBR,SAASmc,EAAellC,EAAUmlC,GAC/C,MAA4Cha,mBAAYnrB,GAAxD,mBAAOolC,EAAP,KAAuBC,EAAvB,KAgBA,OAdAzb,qBAAU,WAER,IAAM0b,EAAUC,YAAW,WACzBF,EAAkBrlC,KACjBmlC,GAKH,OAAO,WACLK,aAAaF,MAEd,CAACtlC,EAAOmlC,IAEJC,I,iCCpBT,0GAEYK,EAFZ,S,SAEYA,K,wBAAAA,E,yBAAAA,M,KAKL,IAAMC,EAAY99B,YAAyE,sBACrF+9B,EAAiB/9B,YAAmB,wB,gCCRjD,6JAIa+sB,EAAW,IAAIv3B,IAAU,GACzB84B,EAAU,IAAI94B,IAAU,GAExB42B,GADW,IAAI52B,IAAU,GACf,IAAIA,IAAU,KAExBwoC,EAA8B,SAACC,GAAD,OACzCC,EAAkBD,GAAUxoC,UAEjByoC,EAAoB,SAACD,GAAD,OAA2C,IAAIzoC,IAAUyoC,EAASxtC,c,iCCZnG,oBAIM0tC,EAAwB,CAC5BttC,OAAQgV,IAAM,GAAGE,SACjBhU,QAAS8T,IAAM,GAAGG,YAClBlV,SAAU,IAGNstC,EAAc,CAClB,CACE/6B,GAAI,SACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,gBACN0tC,UAAW,CACTC,WAAY,eACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,IAErB1V,SAAUmV,EACV36B,MAAOxP,IAAOwV,KACdo1B,mBAAoB,QACpBC,WAAY,YACZC,WAAY,0FACZC,mBAAoB,EACpBC,QAAS,GAEX,CACE37B,GAAI,WACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,uBACN0tC,UAAW,CACTC,WAAY,sBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,sBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErB1V,SAAUmV,EACV36B,MAAOxP,IAAOiW,SACd20B,mBAAoB,QACpBC,WAAY,YACZC,WAAY,iGACZC,mBAAoB,IACpBC,QAAS,GAEX,CACE37B,GAAI,UACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,yBACN0tC,UAAW,CACTC,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErB1V,SAAUmV,EACV36B,MAAOxP,IAAO8X,IACd8yB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,mGACZC,mBAAoB,IACpBC,QAAS,GAEX,CACE37B,GAAI,OACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,cACN+tC,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAO4Z,KACdgxB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpBC,QAAS,GAEX,CACE37B,GAAI,QACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,qBACN+tC,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAOka,MACd0wB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,+FACZC,mBAAoB,KACpBC,QAAS,GAEX,CACE37B,GAAI,QACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,cACN+tC,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAOwa,IACdowB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpBC,QAAS,GAEX,CACE37B,GAAI,UACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,kBACN+tC,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAOqb,MACduvB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpBC,QAAS,GAEX,CACE37B,GAAI,SACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,yBACN+tC,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAOub,OACdqvB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,sGACZC,mBAAoB,KACpBC,QAAS,GAEX,CACE37B,GAAI,QACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,cACN+tC,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAO4b,IACdgvB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpBC,QAAS,GAEX,CACE37B,GAAI,QACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,gBACN+tC,cAAe,CACbJ,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAO+b,MACd6uB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,gGACZC,mBAAoB,KACpBC,QAAS,GAEX,CACE37B,GAAI,QACJtR,QAAS,6CACTssC,UAAU,EACVztC,KAAM,cACN+tC,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErB1V,SAAUmV,EACV36B,MAAOxP,IAAOic,MACd2uB,mBAAoB,QACpBC,WAAY,YACZC,WAAY,oFACZC,mBAAoB,KACpBC,QAAS,IAIEZ,O,iCChPf,8CAEaa,EAAoBj/B,YAAuD,kC,yrzBCY3Ek/B,EAAoB,SAACxnC,GAChC,MAAO,CACLC,UAAWD,EAAW,IAAIlC,IAAUkC,EAASC,WAAao1B,IAC1Dn1B,oBAAqBF,EAAW,IAAIlC,IAAUkC,EAASE,qBAAuBm1B,IAC9El1B,cAAeH,EAAW,IAAIlC,IAAUkC,EAASG,eAAiBk1B,IAClEj1B,cAAeJ,EAAW,IAAIlC,IAAUkC,EAASI,eAAiBi1B,MAIzDoS,EAAgB,SAACC,GAC5B,IAAQ7pC,EAAiD6pC,EAAjD7pC,YAAa8pC,EAAoCD,EAApCC,aAAc3nC,EAAsB0nC,EAAtB1nC,SAAa4nC,EAAhD,YAAyDF,EAAzD,GAEA,OAAO,2BACFE,GADL,IAEE5nC,SAAUwnC,EAAkBxnC,GAC5BnC,YAAa,IAAIC,IAAUD,GAC3B8pC,aAAc,IAAI7pC,IAAU6pC,MAInBE,EAAyB,SAAC15B,GACrC,OAAOA,EAAM/P,QAAO,SAAC0pC,EAAQ9T,GAC3B,IAAM+T,EAAoBvqC,YAAWw2B,EAAKxlB,WAAWnU,SAAS2tC,oBACxDhuC,EAAewD,YAAWw2B,EAAKloB,MAAMzR,SAAS2tC,oBASpD,OAPKF,EAAOC,KACVD,EAAOC,GAAqB,IAAIjqC,IAAUk2B,EAAKxlB,WAAW0oB,WAAW4E,YAElEgM,EAAO9tC,KACV8tC,EAAO9tC,GAAgB,IAAI8D,IAAUk2B,EAAKloB,MAAMorB,WAAW4E,YAGtDgM,IACN,M,uHCtCQG,EAA8B,SAACC,GAC1C,IAAMC,EAAYptC,OAAOC,OAAO0f,KAAY/a,MAAK,SAACyoC,GAEhD,OADgB5qC,YAAW4qC,EAAe/tC,WACvB6tC,KAGrB,OAAOC,EAAYA,EAAUttB,cAAgB,MAMlCwtB,EAAc,SAACC,GAC1B,OAAIA,EAASC,WAAW,WAChB,GAAN,OAAU9tB,IAAV,iBAA+B6tB,EAAS37B,MAAM,IAGzC27B,GAOIE,EAAe,uCAAG,WAAON,EAAoBO,GAA3B,qBAAApwC,EAAA,sEAErBwxB,EAAW6e,YAAkBR,GAFR,SAGJre,EAAS8e,SAASF,GAHd,cAGrBH,EAHqB,gBAIGtnB,MAAMqnB,EAAYC,IAJrB,WAIrBM,EAJqB,QAMNC,GANM,0CAOlB,MAPkB,yBAULD,EAAgB1nB,OAVX,eAUrB4nB,EAVqB,yBAWpBA,GAXoB,yCAa3BrvC,QAAQC,MAAM,kBAAd,MAb2B,kBAcpB,MAdoB,0DAAH,wDAkBfqvC,EAAe,uCAAG,WAAOb,EAAoBO,GAA3B,iBAAApwC,EAAA,sEACPmwC,EAAgBN,EAAYO,GADrB,UACvBK,EADuB,OAEvBjuB,EAAgBotB,EAA4BC,GAI7CY,EANwB,yCAOpB,MAPoB,UAUxBjuB,EAVwB,yCAWpB,MAXoB,UAcxBiuB,EAAQjuB,GAdgB,0CAepB,MAfoB,iCAkBtBE,IAAKpb,MAAK,SAACqpC,GAChB,OAAOF,EAAQjuB,GAAezQ,SAAS4+B,EAAI1tB,gBAnBhB,4CAAH,yD,uKCjCf2tB,EAAkB3Q,YAC7B,+BAD6C,uCAE7C,WAAOr6B,GAAP,iBAAA5F,EAAA,6DAEQ6wC,EAAoBnuC,OAAO0S,KAAKiN,KAAYpd,IAAxB,iBAAAvC,OAAA,IAAAA,CAAA,UAA4B,WAAOouC,GAAP,+BAAA9wC,EAAA,6DACnC+wC,EAAe1uB,IAAWyuB,GAAnC9uC,QACFA,EAAUmD,YAAW4rC,GACrBvf,EAAW6e,YAAkBruC,GAE7BgvC,EAL8C,+BAAAhxC,EAAA,MAK1B,WAAOuF,GAAP,mBAAAvF,EAAA,+EAEoBwxB,EAASyf,oBAAoBrrC,EAASL,GAF1D,cAEhB2rC,EAFgB,OAGhBd,EAAUc,EAAUzN,WAHJ,SAKEiN,YAAgB1uC,EAASouC,GAL3B,cAKhBe,EALgB,yBAMf,CAACf,EAASe,EAAUluB,aANL,yCAQtB7hB,QAAQC,MAAM,oBAAd,MARsB,kBASf,MATe,0DAL0B,+DAkBpBmwB,EAAS4f,UAAUxrC,GAlBC,UAkB9CyrC,EAlB8C,OAqBlC,KAFZD,EAAYC,EAAkB5N,YAnBgB,0CAsB3C,IAtB2C,QA4BpD,IAHM6N,EAAuB,GAGpBjtB,EAAI,EAAGA,EAAI+sB,EAAW/sB,IAC7BitB,EAAqBxN,KAAKkN,EAAkB3sB,IA7BM,iBAgC9BmZ,QAAQC,IAAI6T,GAhCkB,eAgC9CC,EAhC8C,yBAiC7CA,GAjC6C,4CAA5B,uDAF5B,SAsC8B/T,QAAQC,IAAIoT,GAtC1C,cAsCQW,EAtCR,yBAwCSA,EAAcC,QAxCvB,2CAF6C,uDA8ClCC,EAAoB/oC,YAAY,CAC3C9H,KAAM,eACNgG,aAzDsC,CACtCqiB,eAAe,EACfC,WAAW,EACXriB,KAAM,IAuDN8B,SAAU,GACVQ,cAAe,SAACC,GACdA,EAAQC,QAAQsnC,EAAgBjG,SAAS,SAAC9hC,GACxCA,EAAMsgB,WAAY,KAEpB9f,EAAQC,QAAQsnC,EAAgB9P,WAAW,SAACj4B,EAAOC,GACjDD,EAAMsgB,WAAY,EAClBtgB,EAAMqgB,eAAgB,EACtBrgB,EAAM/B,KAAOgC,EAAOE,QAAQjD,QAAO,SAACmkB,EAAOynB,GACzC,IAAKA,EACH,OAAOznB,EAGT,MAA8BynB,EAA9B,mBAAOvB,EAAP,KAAgBntB,EAAhB,KAEA,OAAO,2BACFiH,GADL,kBAEGjH,EAAaiH,EAAMjH,GAAN,sBAAwBiH,EAAMjH,IAA9B,CAA2CmtB,IAAW,CAACA,OAEtE,UAKMsB,MAAf,S,iCC3FA,4CA2BeE,IArBU,WACvB,MAAsC7c,cAA9B30B,EAAR,EAAQA,QAASwF,EAAjB,EAAiBA,QAASimB,EAA1B,EAA0BA,QACpB3kB,EAAWyd,cAgBjB,MAAO,CAAEktB,cAfa/sB,uBACpB,SAACgtB,GACC,GAAIlsC,GAAWksC,IAAgB1xC,EAC7B,IACS,OAAPyrB,QAAO,IAAPA,KAASkmB,KAAK,0BAA2B,CAACxwC,IAAauwC,GAAclsC,IACrEsB,EAAS4mB,aAAoB,IAC7B,MAAOzsB,GACPD,QAAQI,KAAKH,QAGf6F,EAASsmB,YAAiBptB,EAASwF,EAASksC,MAGhD,CAAC1xC,EAASwF,EAASimB,EAAS3kB,O,+JCjB1B8qC,EAAiBC,IAAMphB,cAAc,CAAEqhB,KAAM,EAAGC,KAAM,IAsBtDC,EAAyB,SAAC,GAAkB,IAAhBhhB,EAAe,EAAfA,SAChC,EAAwBoC,mBAAS,GAAjC,mBAAO0e,EAAP,KAAaG,EAAb,KACA,EAAwB7e,mBAAS,GAAjC,mBAAO2e,EAAP,KAAaG,EAAb,KACMC,EAtBsB,WAC5B,IAAMA,EAAwBC,kBAAO,GAcrC,OAZAvgB,qBAAU,WACR,IAAMwgB,EAAqB,WACzBF,EAAsB79B,SAAWiY,SAAS+lB,QAK5C,OAFAxyC,OAAOyyC,iBAAiB,mBAAoBF,GAErC,WACLvyC,OAAO0yC,oBAAoB,mBAAoBH,MAEhD,IAEIF,EAOuBM,GAoB9B,OAlBA5gB,qBAAU,WACR,IAAM6gB,EAAWC,YAAW,sBAAC,sBAAA/yC,EAAA,sDACvBuyC,EAAsB79B,SACxB49B,GAAQ,SAACU,GAAD,OAAUA,EAAO,KAFA,2CA/BX,KAoClB,OAAO,kBAAMC,cAAcH,MAC1B,CAACP,IAEJtgB,qBAAU,WACR,IAAM6gB,EAAWC,YAAW,sBAAC,sBAAA/yC,EAAA,sDACvBuyC,EAAsB79B,SACxB29B,GAAQ,SAACW,GAAD,OAAUA,EAAO,KAFA,2CAvCX,KA4ClB,OAAO,kBAAMC,cAAcH,MAC1B,CAACP,IAEG,cAACP,EAAe7gB,SAAhB,CAAyB9oB,MAAO,CAAE6pC,OAAMC,QAAxC,SAAiD/gB,M,qCChD9C5F,E,sDAAAA,K,oBAAAA,E,8BAAAA,E,WAAAA,M,KAML,I,QAAM0nB,EAAa,CACtB,CACItmB,MAAO,WACPumB,KAAMC,IACNC,YAAa7nB,EAAeC,SAC5B6nB,SAAU,GAEd,CACI1mB,MAAO,gBACPumB,KAAMI,KACNF,YAAa7nB,EAAeE,cAC5B4nB,SAAU,GAEd,CACI1mB,MAAO,eACPumB,KAAMK,KACNH,YAAa7nB,EAAeC,SAC5B6nB,SAAU,GAEd,CACI1mB,MAAO,aACPumB,KAAMM,IACNJ,YAAa7nB,EAAeC,SAC5B6nB,SAAU,KAEd,CACI1mB,MAAO,cACPumB,KAAMO,KACNL,YAAa7nB,EAAeC,SAC5B6nB,SAAU,KAEd,CACI1mB,MAAO,gBACPumB,KAAMQ,IACNN,YAAa7nB,EAAexe,IAC5BsmC,SAAU,KAEd,CACI1mB,MAAO,UACPumB,KAAMS,KACNP,YAAa7nB,EAAeC,SAC5B6nB,SAAU,KAEd,CACI1mB,MAAO,SACPumB,KAAMU,IACNR,YAAa7nB,EAAeC,SAC5B6nB,SAAU,MAIL7d,EAA2B,gBAC3Bqe,EAAwB,S,OChD/BC,EAAgBlxC,YAAOuxB,IAAPvxB,CAAH,sKAObmxC,EAAenxC,YAAOC,IAAPD,CAAH,yRAoEHoxC,EAtDmC,SAAC,GAA0B,IAAxB3wC,EAAuB,EAAvBA,MAAOymC,EAAgB,EAAhBA,UAmBpDmK,GAlBQjxC,cAANC,EAEmB,SAACgwC,GAC1B,IAAMiB,EAAsBprB,aAAaC,QAAQ8qB,GAC3CI,EAAehB,EAAW3+B,MAAK,SAAUvU,EAAGurC,GAAK,OAAOvrC,EAAEszC,SAAW/H,EAAE+H,YAE7E,GADAlyC,QAAQysB,IAAI,eAAgBqmB,IACvBC,EACH,OAAOD,EAET,IAAME,EAAkBF,EAAa5sC,MAAK,SAAU+sC,GAAsB,OAAOA,EAAmBznB,QAAUunB,KAE9G,OADA/yC,QAAQysB,IAAI,kBAAmBumB,GAC1BA,GAGLhzC,QAAQysB,IAAIqmB,EAAa3mC,QAAO,SAAU8mC,GAAsB,OAAOA,EAAmBznB,QAAUunB,MAC9F,CAAEC,GAAR,mBAA4BF,EAAa3mC,QAAO,SAAU8mC,GAAsB,OAAOA,EAAmBznB,QAAUunB,QAH3GD,EAMUI,CAAmBC,IAexC,OACE,cAAC,IAAD,CAAgBpI,SAAS,QAAzB,SACE,cAAC,IAAD,CAAW9X,MAAO,CAAC,QAAS,KAAM,SAAlC,SACE,cAAC0f,EAAD,UACE,cAAC,IAAD,CAAMnL,oBAAoB,UAA1B,SACGsL,EAAajvC,KAAI,SAACuvC,GAAD,OAAY,cAAC,IAAD,UAC5B,8BACE,eAACR,EAAD,CAAcnwC,QAAS,kBApBf,SAACyxB,GACrB,IAAMmf,EAAQ,mBAAmBzO,KAAK0O,UAAUC,aAAez0C,OAAO00C,SAE9C,iBAApBtf,EAAU1I,OAA4B6nB,EACxCnxC,EAAMkoB,EAAeE,eAErBpoB,EAAMgyB,EAAU+d,aAElBtqB,aAAa2E,QAAQomB,EAAuBxe,EAAU1I,OACtD7D,aAAa2E,QAAQ+H,EAA0BH,EAAU+d,aACzDtJ,IAUyC8K,CAAcL,IAA3C,UACE,cAACA,EAAOrB,KAAR,CAAaxJ,MAAO,CAAEtV,MAAO,OAAQyU,GAAI,SACzC,cAAC,KAAD,CAAML,SAAS,OAAf,SAAuB+L,EAAO5nB,cAJI4nB,EAAO5nB,mB,iBCzDrDkoB,EAAcjyC,YAAOkyC,KAAPlyC,CAAH,qKAQXmyC,EAAUnyC,IAAOwhB,EAAV,qEAsCE4wB,EAjCmC,SAAC,GAA6C,IAA3C1xC,EAA0C,EAA1CA,OAAQqC,EAAkC,EAAlCA,QAASmkC,EAAyB,EAAzBA,UAAWmL,EAAc,EAAdA,QACvEhyC,EAAMD,cAANC,EACR,EAAgCswB,oBAAS,GAAzC,mBAAO2hB,EAAP,KAAiBC,EAAjB,KAeA,OACE,eAAC,IAAD,CAAOxoB,MAAM,GAAGmd,UAAWA,EAAWsL,iBAAiB,uDAAvD,UACE,cAACP,EAAD,UAAclvC,IACd,eAAC,IAAD,CAAMkjC,GAAG,OAAT,UACE,cAAC,IAAD,CAAcwM,OAAK,EAAC/oB,KAAM2oB,EAAQK,iBAAkBxM,GAAG,OAAvD,SAA+DmM,EAAQM,WACvE,cAAC,kBAAD,CAAiBza,KAAMn1B,EAAS6vC,OAlBnB,WACjBL,GAAY,GACZxH,YAAW,WACTwH,GAAY,KACX,MAcC,SACE,+BAAOD,EAAWjyC,EAAE,WAAa,cAAC8xC,EAAD,CAAS/L,UAAU,uBAGxD,cAAC,IAAD,CAAMmD,eAAe,SAArB,SACE,cAAC,IAAD,CAAQlD,MAAM,KAAKF,QAAQ,YAAYnlC,QAhBvB,WACpBN,IACArD,OAAO6oB,aAAayM,WAAWC,GAC/BsU,KAaI,SAAgE7mC,EAAE,kBC3C3DO,IAPQ,SAACH,EAAOC,EAAQqC,EAASsvC,GAI9C,MAAO,CAAEvxC,sBAHyBymC,aAAS,cAAC,EAAD,CAAc9mC,MAAOA,KAAW,GAAM,EAAM,SAAS,GAGrCoyC,sBAFzBtL,aAAS,cAAC,EAAD,CAAc7mC,OAAQA,EAAQqC,QAASA,EAASsvC,QAASA,KAAa,GAAM,EAAM,aAAa,M,iCCF7H,SAASS,EAAUC,GAAwB,IAAD,IAEvD,OADiBA,EAAIppB,MAAM,KAAK,GAAGvI,eAEjC,IAAK,QACH,MAAO,CAAC2xB,GACV,IAAK,OACH,MAAO,CAAC,QAAD,OAASA,EAAIC,OAAO,IAAMD,GACnC,IAAK,OACH,IAAMxK,EAAI,UAAGwK,EAAI1T,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCkJ,EAArC,oCAAsEA,EAAtE,MACT,IAAK,OACH,IAAMvqC,EAAI,UAAG+0C,EAAI1T,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCrhC,EAArC,oCAAsEA,EAAtE,MACT,QACE,MAAO,IAnBb,mC,iCCCA,4KAQO,SAASi1C,IAQd,MAA6B/uB,cAArB3mB,EAAR,EAAQA,QAASwF,EAAjB,EAAiBA,QACXsB,EAAWyd,cAEjB,OAAOG,uBACL,SACE8D,GAMI,IAAD,yDAD4G,GAH7GoiB,EAIC,EAJDA,QACA+K,EAGC,EAHDA,SACAC,EAEC,EAFDA,MAGF,GAAKpwC,GACAxF,EAAL,CAEA,IAAQgrC,EAASxiB,EAATwiB,KACR,IAAKA,EACH,MAAM13B,MAAM,8BAEdxM,EAASgJ,YAAe,CAAEk7B,OAAM6K,KAAMrwC,EAASxF,UAAS21C,WAAU/K,UAASgL,cAE7E,CAAC9uC,EAAU9G,EAASwF,IAKjB,SAASkmC,IAAgE,IAAD,EACrE1rC,EAAY2mB,cAAZ3mB,QAEFyI,EAAQgL,aAAgD,SAACqiC,GAAD,OAAOA,EAAExK,gBAEvE,OAAOtrC,GAAO,UAAGyI,EAAMzI,UAAT,QAA0B,GAenC,SAAS4rC,EAAoBjB,GAClC,OAAO,IAAItX,MAAO0iB,UAAYpL,EAAGS,UAAY,MAIxC,SAAS4K,EAAsBz0C,EAAkC00C,GACtE,IAAMxK,EAAkBC,IACxB,OAAOz3B,mBACL,iBAC0B,kBAAjB1S,GACY,kBAAZ00C,GACP3zC,OAAO0S,KAAKy2B,GAAiB/N,MAAK,SAACsN,GACjC,IAAML,EAAKc,EAAgBT,GAC3B,IAAKL,EAAI,OAAO,EAChB,GAAIA,EAAGE,QACL,OAAO,EAET,IAAQ8K,EAAahL,EAAbgL,SACR,QAAKA,IACEA,EAASM,UAAYA,GAAWN,EAASp0C,eAAiBA,GAAgBqqC,EAAoBjB,SAEzG,CAACc,EAAiBwK,EAAS10C,M,yPCtDlB20C,EAAuB,WAClC,MAAoDvhB,cAA5CnvB,EAAR,EAAQA,QAASimB,EAAjB,EAAiBA,QAASzrB,EAA1B,EAA0BA,QAAYm2C,EAAtC,iBACMC,EAAa3iC,aAAY,SAAChL,GAAD,OAAkBA,EAAM4kB,QAAQ3mB,KAAK1G,WAC9Dq2C,EAAchmC,YAAY+lC,GAE1BE,EAASlE,iBAAO3mB,GACtB,EAAgC2H,mBAAS3H,GAAW4qB,GAApD,mBAAOx2C,EAAP,KAAiB02C,EAAjB,KASA,OAPA1kB,qBAAU,WACJpG,IAAY6qB,EAAOhiC,UACrBiiC,EAAY9qB,GAAW4qB,GACvBC,EAAOhiC,QAAUmX,KAElB,CAACA,EAAS4qB,IAEN,aAAE5qB,QAAS5rB,EAAUG,QAASA,GAAWo2C,EAAY5wC,WAAY2wC,IAG7DK,EAAwB,WACnC,MAA2C7hB,cAAdwhB,GAA7B,EAAQ1qB,QAAR,EAAiBzrB,QAAjB,kBAEA,EAAgCozB,mBAAcqjB,KAA9C,mBAAO52C,EAAP,UASA,OAAO,aAAE4rB,QAAS5rB,EAAUG,QAASC,SAASC,IAAoC,KAAQi2C,IAG7ExvB,IAhDY,WACzB,MAA2CgO,cAAnClJ,EAAR,EAAQA,QAASzrB,EAAjB,EAAiBA,QAAYm2C,EAA7B,iBACMG,EAASlE,iBAAO3mB,GACtB,EAAgC2H,mBAAS3H,GAAWirB,KAApD,mBAAO72C,EAAP,KAAiB82C,EAAjB,KASA,OAPA9kB,qBAAU,WACJpG,IAAY6qB,EAAOhiC,UACrBqiC,EAAYlrB,GAAWirB,KACvBJ,EAAOhiC,QAAUmX,KAElB,CAACA,IAEG,aAAEA,QAAS5rB,EAAUG,QAAO,OAAEA,QAAF,IAAEA,IAAWC,SAASC,KAAgC,KAAQi2C,K,mQClBtFS,EAAmB,SAACC,GAAsC,IAAnBl2C,EAAkB,uDAAP,GAC7D,OAAO,IAAI0E,IAAUwxC,GAAQloC,MAAMstB,IAAQC,IAAIv7B,KAGpCm2C,EAAmB,SAACD,GAAsC,IAAnBl2C,EAAkB,uDAAP,GAC7D,OAAO,IAAI0E,IAAUwxC,GAAQE,UAAU9a,IAAQC,IAAIv7B,KAMxCq2C,EAAmB,SAACC,GAAuC,IAAnBt2C,EAAkB,uDAAP,GAC9D,OAAOm2C,EAAiBG,EAASt2C,GAAU0iC,YAGhC6T,EAAwB,SAACD,GAAiE,IAA7Ct2C,EAA4C,uDAAjC,GAAIw2C,EAA6B,uCACpG,OAAOL,EAAiBG,EAASt2C,GAAUiO,QAAQuoC,IAGxCC,EAA4B,SAACH,GAAiE,IAA7Ct2C,EAA4C,uDAAjC,GAAIw2C,EAA6B,uCACxG,OAAOL,EAAiBG,EAASt2C,GAAUiO,QAAQuoC,EAAiB,IAGzDE,EAAe,SAACC,GAAwD,IAAxCC,EAAuC,uDAAxB,EAAGC,EAAqB,uDAAN,EACtE71C,EAAU,CACd81C,sBAAuBF,EACvBG,sBAAuBF,GAEzB,OAAOF,EAAOK,oBAAer0C,EAAW3B,K,iCCrC1C,wEAEY+rC,EAFZ,S,SAEYA,K,sCAAAA,E,sBAAAA,E,wBAAAA,E,yBAAAA,M,KAOL,IAAMC,EAAY99B,YAAmD,uB,iCCT5E,sEAOe,SAASy0B,IACtB,IAAQtkC,EAAY2mB,cAAZ3mB,QACF43C,EAAsBnkC,aAAkD,qBAAG2Q,KAAQvgB,UAEzF,OAAOoQ,mBAAQ,WAAO,IAAD,EACnB,OAAKjU,EACEsC,OAAOC,OAAP,iBAAcq1C,QAAd,IAAcA,OAAd,EAAcA,EAAsB53C,UAApC,QAA2D,IAAI6E,IAAI2iB,KADrD,KAEpB,CAACowB,EAAqB53C,M,olJCXrB63C,GAAoD,mBACvDtlC,IAAQC,QAAU,8CADqC,cAEvDD,IAAQE,QAAU,8CAFqC,G,QC0D7CqlC,EAAW,SAACl2C,GACvB,IAAQ6pB,EAAY9E,cAAZ8E,QACR,OAAOxX,mBAAQ,kBAAM8jC,YAAiBn2C,EAAS6pB,EAAQusB,eAAc,CAACp2C,EAAS6pB,KAEpEwsB,EAAiB,SAACr2C,GAC7B,IAAQ6pB,EAAY9E,cAAZ8E,QACR,OAAOxX,mBAAQ,mBAAOrS,GAAWm2C,YAAiBn2C,EAAS6pB,EAAQusB,eAAsB,CAACp2C,EAAS6pB,KAExFysB,EAAmB,SAACt2C,GACX+kB,cAAZ8E,QACR,OAAOxX,mBAAQ,kBAAM8jC,YAAiBn2C,OAAS0B,KAAY,CAAC1B,KAWjDu2C,EAAqB,WAChC,IAAQ1sB,EAAY9E,cAAZ8E,QACR,OAAOxX,mBAAQ,kBAAMmkC,YAAmB3sB,EAAQusB,eAAc,CAACvsB,KAGpD4sB,EAAsB,WAAoB,IAAnBjoC,IAAkB,yDACpD,EAAoBuW,cAAZ8E,EAAR,EAAQA,QACF6sB,EAAarkC,mBAAQ,kBAAMskC,YAAoB9sB,EAAQusB,eAAc,CAACvsB,IACtE+sB,EAAWvkC,mBAAQ,kBAAMskC,iBAAoBj1C,KAAY,IAC/D,OAAO8M,EAASkoC,EAAaE,GAUlBC,EAA2B,SAAC72C,GACvC,IAAQ6pB,EAAY9E,cAAZ8E,QACR,OAAOxX,mBAAQ,kBAAMxD,YAAmB7O,EAAS6pB,EAAQusB,eAAc,CAACp2C,EAAS6pB,KAGtEitB,EAAqB,SAAC92C,GACjC,OAAOqS,mBAAQ,kBAAMxD,YAAmB7O,OAAS0B,KAAY,CAAC1B,KAGnD+2C,EAAuB,SAAC/2C,GAAoC,IAAnBwO,IAAkB,yDACtE,EAAoBuW,cAAZ8E,EAAR,EAAQA,QACF6sB,EAAarkC,mBAAQ,kBAAM2kC,YAAqBh3C,EAAS6pB,EAAQusB,eAAc,CAACp2C,EAAS6pB,IACzF+sB,EAAWvkC,mBAAQ,kBAAM2kC,YAAqBh3C,OAAS0B,KAAY,CAAC1B,IAC1E,OAAOwO,EAASkoC,EAAaE,GAGlBK,EAAuB,SAACj3C,GAAoC,IAAnBwO,IAAkB,yDACtE,EAAoBuW,cAAZ8E,EAAR,EAAQA,QACF6sB,EAAarkC,mBAAQ,kBAAM6kC,YAAqBl3C,EAAS6pB,EAAQusB,eAAc,CAACp2C,EAAS6pB,IACzF+sB,EAAWvkC,mBAAQ,kBAAM6kC,YAAqBl3C,OAAS0B,KAAY,CAAC1B,IAC1E,OAAOwO,EAASkoC,EAAaE,GAGlBO,EAAsB,WACjC,OAAO9kC,mBAAQ,kBAAM+kC,iBAAoB11C,KAAY,KAG1C21C,EAAuB,WAClC,OAAOhlC,mBAAQ,kBAAMilC,iBAAsB51C,KAAY,KAG5C61C,EAAU,WACrB,IAAQ1tB,EAAY9E,cAAZ8E,QACR,OAAOxX,mBAAQ,kBAAMmlC,YAAgB3tB,EAAQusB,eAAc,CAACvsB,KA+DjD4tB,EAAuB,WAClC,IAAQ5tB,EAAY9E,cAAZ8E,QACR,OAAOxX,mBAAQ,kBAAMqlC,YAAqB7tB,EAAQusB,eAAc,CAACvsB,KA0CnE,SAAS8tB,EAAY33C,EAA6B43C,GAAyD,IAA/CC,IAA8C,yDACxG,EAA6B9yB,cAArB8E,EAAR,EAAQA,QAASjmB,EAAjB,EAAiBA,QAEjB,OAAOyO,mBAAQ,WACb,IAAKrS,IAAY43C,IAAQ/tB,EAAS,OAAO,KACzC,IACE,OAAOvb,YAAYtO,EAAS43C,EAAK/tB,EAASguB,GAAwBj0C,EAAUA,OAAUlC,GACtF,MAAOrC,GAEP,OADAD,QAAQC,MAAM,yBAA0BA,GACjC,QAER,CAACW,EAAS43C,EAAK/tB,EAASguB,EAAsBj0C,IAG5C,SAAS0gC,EAAiB3kC,EAAuBk4C,GACtD,OAAOF,EAAYh4C,EAAcm4C,EAAWD,GAQvC,SAASE,EAAwBF,GACtC,IACI73C,EADI5B,EAAY2mB,cAAZ3mB,QAER,GAAIA,EAEF,OAAQA,GACN,KAAKuS,IAAQC,QACb,KAAKD,IAAQE,QACX7Q,EAAU,6CAIhB,OAAO23C,EAAY33C,EAASg4C,EAASH,GAGhC,SAASI,EAAuBj4C,EAA6B63C,GAClE,OAAOF,EAAY33C,EAASk4C,EAAyBL,GAGhD,SAASrT,EAAwB7kC,EAAuBk4C,GAC7D,OAAOF,EAAYh4C,EAAcw4C,IAAmBN,GAG/C,SAASO,EAAgBC,EAAsBR,GACpD,OAAOF,EAAYU,EAAazgB,IAAmBigB,GAG9C,SAASS,IACd,IAAQl6C,EAAY2mB,cAAZ3mB,QACR,OAAOu5C,EAAYv5C,GAAW63C,EAAmB73C,GAAUm6C,GAAe,K,iCCrS5E,sCAAMC,EAAiB,kDAEhB,SAASC,EAAgBC,GAC9B,IAAMxY,EAAQwY,EAAWxY,MAAMsY,GAC/B,GAAKtY,EACL,MAAO,CAAEyY,QAAQ,GAAD,OAAKzY,EAAM,GAAGje,cAAd,OAAkC22B,QAAS1Y,EAAM,M,iCCLnE,gEAIA,IAAM2Y,EAAkB,IAAI/2B,IAAUg2B,GAEN,IAAIh2B,IAAUq2B,GAE/BU,O,iCCRf,0EAeA,IAAMC,EAAgB,IAAIC,YAMX,SAASC,EAAiBC,GACvC,IAAMC,EAlBR,SAAyBC,GAGvB,IADAA,EAAMA,EAAIjL,WAAW,MAAQiL,EAAItF,OAAO,GAAKsF,GACrCpV,OAAS,IAAM,EAAG,MAAM,IAAIryB,MAAM,8CAE1C,IADA,IAAM0nC,EAAM,IAAIC,WAAWF,EAAIpV,OAAS,GAC/B1hB,EAAI,EAAGA,EAAI+2B,EAAIrV,OAAQ1hB,IAC9B+2B,EAAI/2B,GAAKhkB,SAAS86C,EAAItF,OAAW,EAAJxxB,EAAO,GAAI,IAE1C,OAAO+2B,EAUME,CAAgBL,GACvBM,EAAQC,mBAASN,GACvB,OAAQK,GACN,IAAK,UACH,IAAMz0C,EAAO20C,mBAASP,GAChBQ,EAAM,IAAIC,IAAI70C,GACpB,MAAM,UAAN,OAAiB80C,sBAAYF,EAAIG,YAEnC,IAAK,UACH,IAAM/0C,EAAO20C,mBAASP,GAChBQ,EAAM,IAAIC,IAAI70C,GACd+0C,EAAYC,iBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAUh7C,KACN,UAAN,OAAiBi6C,EAAcgB,OAAOD,EAAUE,QAAQC,QAEpD,UAAN,OAAiBJ,sBAAYF,EAAIG,YAEnC,QACE,MAAM,IAAInoC,MAAJ,8BAAiC6nC,O,iKC/BvCU,EAAqB,IAAIC,IAAI,CAAEC,WAAW,IAAQC,QAAQC,GAOjD,SAAeC,EAA9B,oC,4CAAe,WACbC,EACAC,GAFa,uCAAAx8C,EAAA,2DAIPy8C,EAAYhC,YAAgB8B,IAJrB,0CAScC,EAAsBC,EAAU9B,SAT9C,OAST+B,EATS,6DAWTt7C,QAAQC,MAAR,sCAA6Co7C,EAAU9B,SAAvD,MACM,IAAIjnC,MAAJ,sCAAyC+oC,EAAU9B,UAZhD,kBAgBTgC,EAAgB3B,YAAiB0B,GAhBxB,yDAkBTt7C,QAAQC,MAAM,yCAA0Cq7C,GAClD,IAAIhpC,MAAJ,kDAAqDgpC,IAnBlD,QAqBXtoC,EAAOuhC,YAAU,GAAD,OAAIgH,GAAJ,iBAAoBF,EAAU7B,eAA9B,QAAyC,KArB9C,wBAuBXxmC,EAAOuhC,YAAU4G,GAvBN,QAyBJl4B,EAAI,EAzBA,aAyBGA,EAAIjQ,EAAK2xB,QAzBZ,wBA0BLjxB,EAAMV,EAAKiQ,GACXu4B,EAASv4B,IAAMjQ,EAAK2xB,OAAS,EAC/Bnd,OA5BO,sBA8BQD,MAAM7T,GA9Bd,QA8BT8T,EA9BS,6DAgCTxnB,QAAQC,MAAM,uBAAwBk7C,EAAtC,OACIK,EAjCK,uBAiCS,IAAIlpC,MAAJ,kCAAqC6oC,IAjC9C,kDAqCN3zB,EAAS4nB,GArCH,qBAsCLoM,EAtCK,uBAsCS,IAAIlpC,MAAJ,kCAAqC6oC,IAtC9C,gEA0CQ3zB,EAASC,OA1CjB,WA0CLA,EA1CK,OA2CNozB,EAAmBpzB,GA3Cb,uBA4CHg0B,EA5CG,oBA6CPZ,EAAmBa,cA7CZ,aA6CP,EAA2B/2C,QAAe,SAACsI,EAAMhN,GAAW,IAAD,EACnD07C,EAAG,UAAO17C,EAAc27C,SAArB,sBAAiC37C,EAAM00B,eAAvC,QAAkD,IAC3D,OAAO1nB,EAAK03B,OAAS,EAAd,UAAqB13B,EAArB,aAA8B0uC,GAA9B,UAAyCA,KAC/C,WAhDI,QAgDG,gBACN,IAAIrpC,MAAJ,wCAA2CmpC,IAjDxC,iCAmDJh0B,GAnDI,QAyBoBxE,IAzBpB,8BAqDP,IAAI3Q,MAAM,mCArDH,0E,4CCZTupC,EAAgB,CACpB,CACEC,UAAU,EACVC,OAAQ,CACN,CACEt8C,KAAM,OACNiB,KAAM,YAGVjB,KAAM,WACNu8C,QAAS,CACP,CACEv8C,KAAM,kBACNiB,KAAM,YAGVu7C,SAAS,EACTC,gBAAiB,OACjBx7C,KAAM,aAGJy7C,EAAoB,6CAEpBC,EAAe,CACnB,CACEN,UAAU,EACVC,OAAQ,CACN,CACEM,aAAc,UACd58C,KAAM,OACNiB,KAAM,YAGVjB,KAAM,cACNu8C,QAAS,CACP,CACEK,aAAc,QACd58C,KAAM,GACNiB,KAAM,UAGVu7C,SAAS,EACTC,gBAAiB,OACjBx7C,KAAM,aAKV,SAAS47C,EAAiBC,EAAyB19C,GACjD,OAAO,IAAI2Q,IAAS+sC,EAAiBH,EAAcv9C,G,4CAQtC,WAAqC06C,EAAiB16C,GAAtD,mBAAAD,EAAA,6DACP49C,EAAuB,IAAIhtC,IAAS2sC,EAAmBN,EAAeh9C,GACtEmrC,EAAOyS,mBAASlD,GAFT,SAGiBiD,EAAqBE,SAAS1S,GAH/C,cAGPuS,EAHO,yBAIND,EAAiBC,EAAiB19C,GAAUg7C,YAAY7P,IAJlD,4C,sBCRA2S,IAzCf,WACE,IAAQlyB,EAAYmyB,cAAZnyB,QACAzrB,EAAY2mB,cAAZ3mB,QACF8G,EAAWyd,cAEXs5B,EAAcn5B,uBAClB,SAAC61B,GACC,GAAIv6C,IAAYuS,IAAQC,QACtB,MAAM,IAAIc,MAAM,4CAElB,ODuCS,SAAf,oCCvCa8oC,CAAsB7B,EAAS9uB,KAExC,CAACzrB,EAASyrB,IAIZ,OAAO/G,sBAAW,uCAChB,WAAOy3B,GAAP,6BAAAv8C,EAAA,6DAAwBk+C,IAAxB,iCACQC,EAAYC,cACdF,GACFh3C,EAASm3C,IAAe1T,QAAQ,CAAEwT,YAAWrpC,IAAKynC,KAHtD,kBAKSD,EAAaC,EAAS0B,GAC1BK,MAAK,SAACC,GAIL,OAHIL,GACFh3C,EAASm3C,IAAevd,UAAU,CAAEhsB,IAAKynC,EAASgC,YAAWJ,eAExDI,KAERC,OAAM,SAACn9C,GAKN,MAJAD,QAAQC,MAAR,oCAA2Ck7C,GAAWl7C,GAClD68C,GACFh3C,EAASm3C,IAAeI,SAAS,CAAE3pC,IAAKynC,EAAS4B,YAAWO,aAAcr9C,EAAM00B,WAE5E10B,MAjBZ,2CADgB,sDAqBhB,CAAC6F,EAAU+2C,M,wmDCjDf,uFAIO,SAAS1Y,EAAathC,EAAiBioB,GAC5C,GAAsB,IAAlBA,EAAO6Z,OAAc,OAAO9hC,EAEhC,IAAM06C,EAAmBvY,YAAUla,GAEnC,GAAIyyB,EACF,OAAO16C,EAAOsJ,QAAO,SAACkG,GAAD,OAAWA,EAAMzR,UAAY28C,KAGpD,IAAMC,EAAmB1yB,EACtBjI,cACAuI,MAAM,OACNjf,QAAO,SAAC2oC,GAAD,OAAOA,EAAEnQ,OAAS,KAE5B,GAAgC,IAA5B6Y,EAAiB7Y,OACnB,OAAO9hC,EAGT,IAAM46C,EAAgB,SAAC3I,GACrB,IAAM4I,EAAS5I,EACZjyB,cACAuI,MAAM,OACNjf,QAAO,SAACwxC,GAAD,OAAQA,EAAGhZ,OAAS,KAE9B,OAAO6Y,EAAiBI,OAAM,SAACl0C,GAAD,OAAoB,IAAbA,EAAEi7B,QAAgB+Y,EAAOhhB,MAAK,SAACmhB,GAAD,OAAQA,EAAG/O,WAAWplC,IAAMm0C,EAAGC,SAASp0C,UAG7G,OAAO7G,EAAOsJ,QAAO,SAACkG,GACpB,IAAQ3S,EAAiB2S,EAAjB3S,OAAQD,EAAS4S,EAAT5S,KAChB,OAAQC,GAAU+9C,EAAc/9C,IAAaD,GAAQg+C,EAAch+C,MAIhE,SAASs+C,EAAuBl7C,EAA6BqhC,GAClE,OAAOjxB,mBAAQ,WACb,IAAKpQ,EACH,MAAO,GAGT,IAAMm7C,EAAc9Z,EACjBrhB,cACAuI,MAAM,OACNjf,QAAO,SAAC2oC,GAAD,OAAOA,EAAEnQ,OAAS,KAE5B,GAAIqZ,EAAYrZ,OAAS,EACvB,OAAO9hC,EAGT,IAAMo7C,EAAwB,GACxBC,EAA2B,GAC3B/P,EAAgB,GAatB,OAVAtrC,EAAOgB,KAAI,SAACwO,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAM3S,cAAN,eAAcmjB,iBAAkBm7B,EAAY,GACvCC,EAAavb,KAAKrwB,IAE3B,UAAIA,EAAM3S,cAAV,aAAI,EAAcmjB,cAAcisB,WAAW5K,EAAYrhB,cAAc+3B,SAC5DsD,EAAgBxb,KAAKrwB,GAEvB87B,EAAKzL,KAAKrwB,MAGb,GAAN,OAAW4rC,EAAiBC,EAAoB/P,KAC/C,CAACtrC,EAAQqhC,M,gCCpEd,o4CAoEMh1B,EAAc,SAACC,EAAUvO,EAAiBwO,GAC9C,IAAME,EAAgB,OAAGF,QAAH,IAAGA,IAAUsmC,IACnC,OAAO,IAAInmC,IAAOC,SAAS5O,EAASuO,EAAKG,IAG9B8nC,EAAqB,SAAChoC,GACjC,OAAOF,EAAYivC,EAAYtxB,cAAqBzd,IAEzCgvC,EAAiB,SAAChvC,GAC7B,OAAOF,EAAYmvC,EAAQtxB,cAAiB3d,IAEjC2nC,EAAmB,SAACn2C,EAAiBwO,GAChD,OAAOF,EAAYovC,EAAU19C,EAASwO,IAE3B6/B,EAAoB,SAACruC,EAAiBwO,GACjD,OAAOF,EAAYqvC,EAAW39C,EAASwO,IAE5BK,EAAqB,SAAC7O,EAAiBwO,GAClD,OAAOF,EAAYsvC,EAAY59C,EAASwO,IAE7BwoC,EAAuB,SAACh3C,EAAiBwO,GACpD,OAAOF,EAAYuvC,EAAU79C,EAASwO,IAE3B0oC,EAAuB,SAACl3C,EAAiBwO,GACpD,OAAOF,EAAYwvC,EAAc99C,EAASwO,IAE/B4oC,EAAsB,SAAC5oC,GAClC,OAAOF,EAAYyvC,EAAaxvB,cAAsB/f,IAK3CwvC,EAAmB,SAACh+C,EAAiBwO,GAChD,OAAOF,EAAY2vC,EAAUj+C,EAASwO,IAE3B0vC,EAAmB,SAACl+C,EAAiBwO,GAChD,OAAOF,EAAY6vC,EAAUn+C,EAASwO,IAE3B4vC,EAAsB,SAAC9sC,EAAY9C,GAC9C,IAAM6vC,EAASC,IAAYh5C,MAAK,SAAC+nC,GAAD,OAAUA,EAAKkR,SAAWjtC,KACpD/C,EAAM8vC,EAAOG,eAAiBC,IAAaC,QAAUC,EAAcC,EACzE,OAAOtwC,EAAYC,EAAKpL,YAAWk7C,EAAO77C,iBAAkBgM,IAEjDqwC,EAAwB,SAACvtC,EAAY9C,GAChD,IAAM6vC,EAASC,IAAYh5C,MAAK,SAAC+nC,GAAD,OAAUA,EAAKkR,SAAWjtC,KAC1D,OAAOhD,EAAYwwC,EAAY37C,YAAWk7C,EAAO77C,iBAAkBgM,IAExDuwC,EAA4B,SAACvwC,GACxC,OAAOF,EAAY8e,EAAgBD,cAA4B3e,IAEpDgpC,GAAkB,SAAChpC,GAC9B,OAAOF,EAAY0wC,EAAS3yB,cAAkB7d,IAEnCyY,GAAqB,SAACzY,GACjC,OAAOF,EAAY0zB,EAAYrV,cAA4Bne,IAEhDywC,GAA2B,SAACzwC,GACvC,OAAOF,EAAY4wC,EAAmBryB,cAA4Bre,IAEvD2wC,GAA0B,SAAC3wC,GACtC,OAAOF,EAAY8wC,EAAiBryB,cAA0Bve,IAEnD6wC,GAA0B,SAAC7wC,GACtC,OAAOF,EAAYgxC,EAAiBjyB,cAA0B7e,IAEnD+wC,GAAuB,SAAC/wC,GACnC,OAAOF,EAAYkxC,EAAc/yB,cAAuBje,IAE7C8oC,GAAwB,SAAC9oC,GACpC,OAAOF,EAAYie,EAAYD,cAAwB9d,IAE5CixC,GAAyB,SAACjxC,GACrC,OAAOF,EAAYoxC,EAAgBzyB,cAAyBze,IAEjDmxC,GAAgC,SAACnxC,GAC5C,OAAOF,EAAYsxC,EAAuBryB,cAAgC/e,IAE/DqxC,GAAuB,SAACrxC,GACnC,OAAOF,EAAYwxC,EAAcryB,cAAuBjf,IAE7CkpC,GAAuB,SAAClpC,GACnC,OAAOF,EAAYyxC,EAAcpyB,cAAuBnf,IAG7CwxC,GAAyB,SAACxxC,GACrC,OAAOF,EAAY2xC,EAAgBpyB,cAAyBrf,IAGjD0xC,GAA6B,SAAC1xC,GACzC,OAAOF,EAAY6xC,EAAoBpyB,cAA6Bvf,IAEzD4xC,GAAuB,SAAC5xC,GACnC,OAAOF,EAAY+xC,EAAc9+B,cAAuB/S,IAE7C8xC,GAAmC,SAAC9xC,GAC/C,OAAOF,EAAYiyC,EAA0BtyB,cAAmCzf,IAErEgyC,GAAoC,SAAChyC,GAChD,OAAOF,EAAYmyC,EAA2BtyB,cAAoC3f,IAEvEkyC,GAAyB,SAAClyC,GACrC,OAAOF,EAAYqyC,EAAgBtyB,cAAyB7f,IAEjDmoC,GAAsB,SAACnoC,GAClC,OAAOF,EAAYsyC,EAAanyB,cAAsBjgB,K,qHC9JlDpL,EAAS,uCAAG,WAAgBmL,EAAYxL,GAA5B,yBAAA/E,EAAA,sEAER2jB,EAAQy+B,cACRv+B,EAAM,IAAIlT,IAAOkyC,MAAM/+B,UAAUvT,GAEjCwT,EAAWhf,EAAME,KAAI,SAAC+e,GAAD,MAAU,CAACA,EAAKhiB,QAAQiiB,cAAeJ,EAAIK,mBAAmBF,EAAKnjB,KAAMmjB,EAAKvjB,YAL3F,SAMekjB,EAAMQ,UAAUJ,GAN/B,uBAMNK,EANM,EAMNA,WAEFlZ,EAAMkZ,EAAWnf,KAAI,SAAC+e,EAAMK,GAAP,OAAaR,EAAIS,qBAAqBvf,EAAMsf,GAAGxjB,KAAMmjB,MARlE,kBAUP9Y,GAVO,wCAYR,IAAIwI,MAAJ,MAZQ,0DAAH,wDAsBFqwB,EAAW,uCAAG,WACzBxzB,EACAxL,GAFyB,uCAAA/E,EAAA,6DAGzB+B,EAHyB,+BAGG,CAAE+gD,gBAAgB,GAEtCA,EAAmB/gD,EAAnB+gD,eACFn/B,EAAQy+B,cACRv+B,EAAM,IAAIlT,IAAOkyC,MAAM/+B,UAAUvT,GAEjCwT,EAAWhf,EAAME,KAAI,SAAC+e,GAAD,MAAU,CAACA,EAAKhiB,QAAQiiB,cAAeJ,EAAIK,mBAAmBF,EAAKnjB,KAAMmjB,EAAKvjB,YAThF,SAUAkjB,EAAMo/B,aAAaD,EAAgB/+B,GAVnC,cAUnBK,EAVmB,OAWnBlZ,EAAMkZ,EAAWnf,KAAI,SAAC+e,EAAMK,GAChC,kBAAuBL,EAAvB,GAAO9Q,EAAP,KAAepM,EAAf,KACA,OAAOoM,EAAS2Q,EAAIS,qBAAqBvf,EAAMsf,GAAGxjB,KAAMiG,GAAQ,QAbzC,kBAgBlBoE,GAhBkB,4CAAH,wDAmBT9F,O,gUCxCH2H,E,6CCIGuqB,EAhBkB,SAACt0B,GAChC,OACE,cAAC,KAAD,yBAAKw0B,QAAQ,iBAAoBx0B,GAAjC,aACE,sBACE60B,EAAE,6oBAMFJ,KAAK,gB,SDNA9pB,EAAW,CACtBX,IAAK,GACLg2C,YAAa,GACbh2B,MAAO,IACPi2B,cAAe,MACfh2C,KAAM,MACNi2C,aAAc,Q,SAEJn2C,O,cAAAA,I,8BAAAA,I,mBAAAA,I,qCAAAA,I,mBAAAA,I,oCAAAA,M,KAWL,IAAM+f,GAAa,mBACvBnf,EAASX,IAAM,OADQ,cAEvBW,EAASq1C,YAAc,eAFA,cAGvBr1C,EAASqf,MAAQ,WAHM,cAIvBrf,EAASs1C,cAAgB,mBAJF,cAKvBt1C,EAASV,KAAO,aALO,cAMvBU,EAASu1C,aAAe,0BAND,GAWbC,GAAY,mBACtBx1C,EAASX,IAAM2mC,KADO,cAEtBhmC,EAASq1C,YAAcrP,KAFD,cAGtBhmC,EAASqf,MAAQo2B,GAHK,cAItBz1C,EAASs1C,cAAgBG,GAJH,cAKtBz1C,EAASV,KAAOo2C,KALM,cAMtB11C,EAASu1C,aAAeG,KANF,GAiBZ96B,GAAW,mBACrB5a,EAASX,IAAM,CACd,oCACA,oCACA,qCAJoB,cAMrBW,EAASq1C,YAAc,CAAC,oDANH,cAOrBr1C,EAASqf,MAAQ,CAAC,6BAPG,cAQrBrf,EAASs1C,cAAgB,CAAC,4CARL,cASrBt1C,EAASV,KAAO,CAAC,0CATI,cAUrBU,EAASu1C,aAAe,CAAC,+CAVJ,GAeXI,GAAc,mBACxB31C,EAASX,IAAM,wBADS,cAExBW,EAASq1C,YAAc,gCAFC,cAGxBr1C,EAASqf,MAAQ,2BAHO,cAIxBrf,EAASs1C,cAAgB,mCAJD,cAKxBt1C,EAASV,KAAO,yBALQ,cAMxBU,EAASu1C,aAAe,iCANA,GAQdK,GAAmB,mBAC7B51C,EAASX,IAAM,WADc,cAE7BW,EAASq1C,YAAc,WAFM,cAG7Br1C,EAASqf,MAAQ,eAHY,cAI7Brf,EAASs1C,cAAgB,sBAJI,cAK7Bt1C,EAASV,KAAO,aALa,cAM7BU,EAASu1C,aAAe,sBANK,GASnB3hD,GAAY,mBACtBoM,EAASX,IAAM,CACd5M,QAAS,OACTO,UAAW,sBACXC,eAAgB,CACdC,KAAM,MACNC,OAAQ,MACRC,SAAU,IAEZC,QAASunB,EAAY5a,EAASX,KAC9B9L,kBAAmB,CAACoiD,EAAe31C,EAASX,QAVvB,cAYtBW,EAASq1C,YAAc,CACtB5iD,QAAS,OACTO,UAAW,8BACXC,eAAgB,CACdC,KAAM,MACNC,OAAQ,MACRC,SAAU,IAEZC,QAASunB,EAAY5a,EAASq1C,aAC9B9hD,kBAAmB,CAACoiD,EAAe31C,EAASq1C,gBArBvB,cAuBtBr1C,EAASqf,MAAQ,CAChB5sB,QAAS,OACTO,UAAW,QACXC,eAAgB,CACdC,KAAM,QACNC,OAAQ,QACRC,SAAU,IAEZC,QAASunB,EAAY5a,EAASqf,OAC9B9rB,kBAAmB,CAACoiD,EAAe31C,EAASqf,UAhCvB,cAkCtBrf,EAASs1C,cAAgB,CACxB7iD,QAAS,OACTO,UAAW,QACXC,eAAgB,CACdC,KAAM,QACNC,OAAQ,QACRC,SAAU,IAEZC,QAASunB,EAAY5a,EAASs1C,eAC9B/hD,kBAAmB,CAACoiD,EAAe31C,EAASs1C,kBA3CvB,cA6CtBt1C,EAASV,KAAO,CACf7M,QAAS,SACTO,UAAW,oBACXC,eAAgB,CACdC,KAAM,YACNC,OAAQ,OACRC,SAAU,GAEZC,QAASunB,EAAY5a,EAASV,MAC9B/L,kBAAmB,CAACoiD,EAAe31C,EAASV,SAtDvB,cAwDtBU,EAASu1C,aAAe,CACvB9iD,QAAS,OACTO,UAAW,yBACXC,eAAgB,CACdC,KAAM,YACNC,OAAQ,OACRC,SAAU,GAEZC,QAASunB,EAAY5a,EAASu1C,cAC9BhiD,kBAAmB,CAACoiD,EAAe31C,EAASu1C,iBAjEvB,GAqEZM,EAAmC,CAa9C,CACEpjD,QAASuN,EAASV,KAClBw2C,YAAa,mBACb3iD,OAAQgsB,EAAcnf,EAASV,MAC/BkmC,KAAMgQ,EAAax1C,EAASV,S,0IEzK1By2C,EAASC,YAAH,sHASNC,EAAY/gD,IAAOghD,IAAV,iIACGH,GACN,qBAAGI,QACJ,qBAAGA,QAEA,gBAAGphB,EAAH,EAAGA,OAAQnxB,EAAX,EAAWA,MAAX,cAAuBmxB,QAAvB,IAAuBA,IAAUnxB,EAAMi5B,OAAOC,WAQ7C,SAASY,EAAT,GAQX,IAAD,IAPDyY,YAOC,MAPM,OAON,EANDphB,EAMC,EANDA,OACG6M,EAKF,iBACD,OACE,cAACqU,EAAD,yBAAWpsB,QAAQ,YAAYC,KAAK,OAAOgL,MAAM,6BAA6BqhB,KAAMA,EAAMphB,OAAQA,GAAY6M,GAA9G,aACE,sBACE1X,EAAE,6HACFksB,YAAY,MACZC,cAAc,QACdC,eAAe,e,iCCxCvB,4BAIMC,EAAoB,CACxB,CACEC,WAAY,6CACZC,MAAO,EACPpgD,aAAcC,IAAOI,KACrBggD,aAAcpgD,IAAOM,QACrB+/C,SAAU,iBACVC,cAAe,2BACfC,OAAO,EACPC,YAAa,IAAIh/C,IAAU,MAC3BurB,aAAc,IAAIvrB,IAAU,KAC5Bi/C,WAAY,aAEd,CACEP,WAAY,6CACZC,MAAO,EACPpgD,aAAcC,IAAOI,KACrBggD,aAAcpgD,IAAOM,QACrB+/C,SAAU,iBACVC,cAAe,2BACfI,UAAU,EACVF,YAAa,IAAIh/C,IAAU,MAC3BurB,aAAc,IAAIvrB,IAAU,KAC5Bi/C,WAAY,cAIDR,O,8DC1BTU,EAA8B,CAClC,CACET,YAAU,mBACPp3C,IAAcC,IAAO,IADd,cAEPD,IAAcE,KAAQ,8CAFf,GAIVm3C,MAAO,EACPpgD,aAAcC,IAAO6I,KACrBu3C,aAAcpgD,IAAO6I,KACrBw3C,SAAU,YACVC,cAAe,uCACfC,OAAO,IAIII,O,iCCpBf,WAiBe9wB,IAVU,SAACzrB,GACxB,IAAMizB,EAAMkX,mBAMZ,OAJAvgB,qBAAU,WACRqJ,EAAI5mB,QAAUrM,IACb,CAACA,IAEGizB,EAAI5mB,U,gCCdb,oBAQeqd,IALI,WACjB,MAAuBvgB,qBAAWwgC,KAClC,MAAO,CAAElgB,YADT,EAAQqgB,KACoB0S,YAD5B,EAAc3S,Q,ikrPCgBT,IAAK4S,EA8BArE,EA6FAn+B,EAqDAyiC,EAkCAC,EAlNZ,sG,SAAYF,K,sBAAAA,E,+BAAAA,M,cA8BArE,K,sBAAAA,E,YAAAA,E,kBAAAA,E,aAAAA,M,cA6FAn+B,K,kBAAAA,E,eAAAA,M,cAqDAyiC,K,kBAAAA,E,YAAAA,E,cAAAA,E,uBAAAA,M,cAkCAC,O,iCAAAA,I,qBAAAA,I,eAAAA,I,uBAAAA,I,oBAAAA,M,yNCtNC5vB,EAAoB,WAE/B,OADgBvhB,aAAY,SAAChL,GAAD,OAAkBA,EAAM4kB,QAAQ3mB,KAAK1G,YAStD6kD,EAAmB,WAC9B,IAAM/9C,EAAWg+C,cACjB,EAA6Bn+B,cAArB3mB,EAAR,EAAQA,QAASwF,EAAjB,EAAiBA,QACX4wC,EAAaphB,IACbrI,EARiBlZ,aAAY,SAAChL,GAAD,OAAkBA,EAAM4kB,QAAQ3mB,KAAKimB,kBAShE8kB,EAAkBD,cAAlBC,cACR5f,qBAAU,WACJlF,EACF8kB,EAAc2E,GAEdtvC,EAASsmB,YAAiBptB,EAASwF,EAAS4wC,MAI7C,CAACp2C,EAASwF,EAAS4wC,EAAYzpB,EAAgB8kB,EAAe3qC,M,qPCb7DL,EAAiC,CACrCqkC,OAAQia,IAAiBC,QACzBj8B,WAAW,EACXk8B,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,cAAeC,IAAcC,IAC7BC,aAAc,EACdC,6BAA8B,EAC9BC,eAAgB,IAChBC,aAAc,GACdC,aAAc,mBACdC,WAAY,GACZC,gBAAiBjpB,IAASt3B,SAC1BwgD,OAAQ,GACRz5B,QAAS,GACT05B,QAAS,GACTC,kBAAmB,IAiBRC,EAAwBpmB,YACnC,wBADmD,sBAEnD,sDAAAjgC,EAAA,6DAAO4F,EAAP,+BAAiB,KAAjB,SAE2B0gD,cAF3B,cAEQC,EAFR,OAGQC,EAASC,IAAMF,EAAWZ,aAAcY,EAAWZ,aA7CpC,GA0CvB,SAM+Be,YAAcF,GAN7C,UAMQG,EANR,OAOQC,EAAsDD,EAAe5gD,QAAO,SAACmkB,EAAO28B,GACxF,IAAMC,EAAiBC,YAAmCF,GAE1D,OAAO,2BACF38B,GADL,kBAEG48B,EAAe94C,MAAMtN,WAAaomD,MAEpC,IAEGE,EAhBR,2BAiBOT,GAjBP,IAkBIL,OAAQU,EACRT,QAAS,GACTC,kBAAmB,KAGhBxgD,EAvBP,0CAwBWohD,GAxBX,yBA4BgCC,YAAcrhD,EAAS4gD,GA5BvD,eA4BQU,EA5BR,iBA+BkCC,YAAiBvhD,EAAS4gD,GA/B5D,eA+BQJ,EA/BR,yBAiCS7iB,IAAM,GAAIyjB,EAAiB,CAChCb,QAASiB,YAAexhD,EAASshD,EAAiBV,GAClDJ,uBAnCJ,6CAwCWiB,EAAapnB,YAAyC,yBAAzB,uCAAmD,WAAOjyB,GAAP,iBAAAhO,EAAA,6DACrFsnD,EAAqBtF,cADgE,SAEpEsF,EAAmBpB,OAAOl4C,GAF0C,cAErF4a,EAFqF,yBAGpFm+B,YAAmCn+B,IAHiD,2CAAnD,uDAM7B2+B,EAActnB,YACzB,0BADyC,uCAEzC,WAAOumB,GAAP,eAAAxmD,EAAA,sEACuB0mD,YAAcF,GADrC,cACQN,EADR,yBAESA,EAAOngD,QAAO,SAACmkB,EAAOs9B,GAC3B,IAAKA,EACH,OAAOt9B,EAGT,IAAM48B,EAAiBC,YAAmCS,GAE1D,OAAO,2BACFt9B,GADL,kBAEG48B,EAAe94C,MAAMtN,WAAaomD,MAEpC,KAbL,2CAFyC,uDAmB9BW,EAAkBxnB,YAA6B,8BAAb,sBAA4C,4BAAAjgC,EAAA,sEAChEsmD,cADgE,cACnFC,EADmF,yBAElFA,GAFkF,4CAK9EmB,EAAkBznB,YAC7B,8BAD6C,uCAE7C,iCAAAjgC,EAAA,6DAAS4F,EAAT,EAASA,QAAS4gD,EAAlB,EAAkBA,OAAlB,SACwBS,YAAcrhD,EAAS4gD,GAD/C,cACQL,EADR,yBAESiB,YAAexhD,EAASugD,EAASK,IAF1C,2CAF6C,uDAQlCmB,EAAyB1nB,YAGpC,qCAHoD,uCAGd,iCAAAjgC,EAAA,6DAAS4F,EAAT,EAASA,QAAS4gD,EAAlB,EAAkBA,OAAlB,SAChBW,YAAiBvhD,EAAS4gD,GADV,cAChCL,EADgC,yBAE/BA,GAF+B,2CAHc,uDASzCyB,EAAe3nB,YAC1B,2BAD0C,uCAE1C,mCAAAjgC,EAAA,6DAAS4F,EAAT,EAASA,QAASiiD,EAAlB,EAAkBA,QAAlB,SACyBC,YAAc,CACnCtjC,KAAM5e,EAAQqe,cACd4jC,YAHJ,cACQj/B,EADR,OAKQm/B,EAAOn/B,EAAS3jB,IAAI+iD,KAL5B,kBAOS,CAAEpiD,UAASmiD,SAPpB,2CAF0C,uDAa/BE,EAAmBt/C,YAAY,CAC1C9H,KAAM,cACNgG,eACA+B,SAAU,CACRs/C,oBAAqB,SAACr/C,EAAOC,GAC3BD,EAAMqiC,OAASpiC,EAAOE,SAExBm/C,oBAAqB,SAACt/C,EAAOC,GAC3BD,EAAMw8C,kBAAoBv8C,EAAOE,QACjCH,EAAM28C,cAAgBC,IAAcC,KAEtC0C,kBAAmB,SAACv/C,EAAOC,GACzBD,EAAMy8C,gBAAkBx8C,EAAOE,SAEjCq/C,iBAAkB,SAACx/C,EAAOC,GACxBD,EAAM28C,cAAgB18C,EAAOE,SAE/Bs/C,gBAAiB,SAACz/C,EAAOC,GACvBD,EAAM88C,aAAe78C,EAAOE,SAE9Bu/C,mBAAoB,SAAC1/C,EAAOC,GAC1BD,EAAMo9C,gBAAkBn9C,EAAOE,SAEjCw/C,0BAA2B,SAAC3/C,EAAOC,GACjC,MAA2BA,EAAOE,QAA1BpD,EAAR,EAAQA,QAAS6iD,EAAjB,EAAiBA,MAEjB,GAAI5/C,EAAM4jB,QAAQ7mB,GAAU,CAC1B,IAAM8iD,EAAW7/C,EAAM4jB,QAAQ7mB,GAASuD,WAAU,SAACw/C,GAAD,OAASA,EAAIr1C,KAAOm1C,KAElEC,GAAY,IACd7/C,EAAM4jB,QAAQ7mB,GAAS8iD,GAAUb,SAAU,MAKnDz+C,cAAe,SAACC,GAEdA,EAAQC,QAAQq+C,EAAuB7mB,WAAW,SAACj4B,EAAOC,GACxDD,EAAMu9C,kBAAoB7iB,IAAM,GAAI16B,EAAMu9C,kBAAmBt9C,EAAOE,YAItEK,EAAQC,QAAQo+C,EAAgB5mB,WAAW,SAACj4B,EAAOC,GACjDD,EAAMs9C,QAAU5iB,IAAM,GAAI16B,EAAMs9C,QAASr9C,EAAOE,YAIlDK,EAAQC,QAAQm+C,EAAgB3mB,WAAW,SAACj4B,EAAOC,GACjD,MAAyFA,EAAOE,QAAxFkiC,EAAR,EAAQA,OAAQya,EAAhB,EAAgBA,aAAcE,EAA9B,EAA8BA,eAAgBC,EAA9C,EAA8CA,aAAcC,EAA5D,EAA4DA,aAAcC,EAA1E,EAA0EA,WAG1E,GAAIn9C,EAAM88C,eAAiBA,EAAc,CACvC,IAAMiD,EAAcC,IAAMnmD,OAAOC,OAAOkG,EAAMq9C,QAAS,SACjD4C,EAAcC,YAClBH,EAAY56C,MAAQ,EACpB46C,EAAYI,YAAcngD,EAAMg9C,eAjMb,IAoMrBh9C,EAAMq9C,OAAO4C,EAAY96C,OAAS86C,EAClCjgD,EAAM+8C,6BAA+B/8C,EAAM+8C,6BAA+B/8C,EAAMg9C,eArM3D,EAwMvBh9C,EAAMqiC,OAASA,EACfriC,EAAM88C,aAAeA,EACrB98C,EAAMg9C,eAAiBA,EACvBh9C,EAAMi9C,aAAeA,EACrBj9C,EAAMk9C,aAAeA,EACrBl9C,EAAMm9C,WAAaA,KAIrB38C,EAAQC,QAAQ+8C,EAAsBvlB,WAAW,SAACj4B,EAAOC,GAMvD,IALA,MACEA,EAAOE,QADDkiC,EAAR,EAAQA,OAAQya,EAAhB,EAAgBA,aAAcG,EAA9B,EAA8BA,aAAcD,EAA5C,EAA4CA,eAAgBK,EAA5D,EAA4DA,OAAQE,EAApE,EAAoEA,kBAAmBJ,EAAvF,EAAuFA,WAAYG,EAAnG,EAAmGA,QAE7FP,EAA+B98C,EAAOE,QAAQk9C,OAAOP,GAAcqD,WACnEC,EAAiC,GAE9B5kC,EAAI,EAAGA,GA1NK,EA0NoBA,IACvC4kC,EAAanlB,KACXilB,YACEpD,EAAethC,EACfuhC,GAAgCC,EA3Nf,GA2NiDxhC,IAKxE,OAAO,2BACFxb,GADL,IAEEqiC,SACAya,eACAG,eACAD,iBACAG,aACAJ,+BACAQ,oBACAD,UACAD,OAAQ3iB,IAAM,GAAI2iB,EAAQgD,YAAcD,SAK5C5/C,EAAQC,QAAQ+9C,EAAWvmB,WAAW,SAACj4B,EAAOC,GAC5CD,EAAMq9C,OAAS3iB,IAAM,GAAI16B,EAAMq9C,OAAX,eACjBp9C,EAAOE,QAAQgF,MAAMtN,WAAaoI,EAAOE,aAK9CK,EAAQC,QAAQi+C,EAAYzmB,WAAW,SAACj4B,EAAOC,GAC7CD,EAAMq9C,OAAS3iB,IAAM,GAAI16B,EAAMq9C,OAAQp9C,EAAOE,YAIhDK,EAAQC,QAAQs+C,EAAajd,SAAS,SAAC9hC,GACrCA,EAAM08C,mBAAoB,KAE5Bl8C,EAAQC,QAAQs+C,EAAanJ,UAAU,SAAC51C,GACtCA,EAAM08C,mBAAoB,KAE5Bl8C,EAAQC,QAAQs+C,EAAa9mB,WAAW,SAACj4B,EAAOC,GAC9C,MAA0BA,EAAOE,QAAzBpD,EAAR,EAAQA,QAASmiD,EAAjB,EAAiBA,KAEjBl/C,EAAM08C,mBAAoB,EAC1B18C,EAAM4jB,QAAQ7mB,GAAWmiD,QAMxB,EAQHE,EAAiBz+C,QAENy+C,GAVR,EACLG,kBADK,EAELE,gBAFK,EAGLD,iBAHK,EAILF,oBAJK,EAKLD,oBALK,EAMLK,mBANK,EAOLC,0BAGaP,EAAf,S,0CCnSMkB,EAAwB,CAC5B,CACE71C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,SACPw8B,MAAO,gBAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,WACPw8B,MAAO,oBAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,mBACPw8B,MAAO,eAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,OACPw8B,MAAO,gBAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,aACPw8B,MAAO,iBAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,QACPw8B,MAAO,eAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,UACPw8B,MAAO,iBAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,SACPw8B,MAAO,kBAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,QACPw8B,MAAO,eAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,QACPw8B,MAAO,iBAET,CACE91C,GAAI,YACJxR,KAAM,MACN8qB,MAAO,QACPw8B,MAAO,eAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,wBACPw8B,MAAO,4BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,uBACPw8B,MAAO,2BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,uBACPw8B,MAAO,2BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,uBACPw8B,MAAO,2BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,2BACPw8B,MAAO,+BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,0BACPw8B,MAAO,8BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,yBACPw8B,MAAO,6BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,yBACPw8B,MAAO,6BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,yBACPw8B,MAAO,6BAET,CACE91C,GAAI,YACJxR,KAAM,aACN8qB,MAAO,6BACPw8B,MAAO,iCAET,CACE91C,GAAI,YACJxR,KAAM,aACN8q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","file":"static/js/main.98a81e19.chunk.js","sourcesContent":["// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { CHAIN_PARAMS } from 'config/constants/chains'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n// V2 for multi chain\nexport const setupNetworkV2 = async (chainId: number) => {\n  const provider = window.ethereum\n  if (provider) {\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [CHAIN_PARAMS[chainId]],\n      })\n      return true\n    } catch (error) {\n      console.warn(error)\n      return false\n    }\n  } else {\n    console.warn(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add ETH as a network on Metamask, or switch to ETH if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupEthNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_ETH_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            // chainName: 'Ethereum Mainnet',\n            // nativeCurrency: {\n            //   name: 'ETH',\n            //   symbol: 'eth',\n            //   decimals: 18,\n            // },\n            // rpcUrls: ethRpc,\n            // blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the ETH network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  // 'ar-SA': AR,\n  // 'bn-BD': BN,\n  'en-US': EN,\n  // 'de-DE': DE,\n  // 'el-GR': EL,\n  // 'es-ES': ESES,\n  // 'fi-FI': FI,\n  // 'fil-PH': FIL,\n  // 'fr-FR': FR,\n  // 'hi-IN': HI,\n  // 'hu-HU': HU,\n  // 'id-ID': ID,\n  // 'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  // 'nl-NL': NL,\n  // 'pl-PL': PL,\n  // 'pt-BR': PTBR,\n  // 'pt-PT': PTPT,\n  // 'ro-RO': RO,\n  // 'ru-RU': RU,\n  // 'sv-SE': SVSE,\n  // 'ta-IN': TA,\n  // 'tr-TR': TR,\n  // 'uk-UA': UK,\n  // 'vi-VN': VI,\n  'zh-CN': ZHCN,\n  // 'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { languageList } from 'config/localization/languages'\nimport useWalletModalV2 from 'components/ConnectWallet/useWalletModal'\n\nconst MConnectWalletButton = styled(Button)`\n  background-color: #910101;\n  border-radius: 23.5px;\n`\n\nconst ConnectWalletButton = (props) => {\n  const { t, currentLanguage, setLanguage } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, undefined, {})\n  const { onPresentConnectModal: onPresentConnectModalV2 } = useWalletModalV2(login, logout, undefined, {})\n\n  return (\n    <MConnectWalletButton onClick={onPresentConnectModalV2} {...props}>\n      {t('Connect Wallet')}\n    </MConnectWalletButton>\n  )\n}\n\nexport default ConnectWalletButton\n","import tokens from './tokens'\nimport { MaximizerConfig } from './types'\n\nconst maximizers: MaximizerConfig[] = [\n  {\n    maximizerId: 0,\n    stakingToken: tokens.santosbnb,\n    earningTokens: {\n      main: tokens.cake,\n      extra: tokens.musashi\n    },\n    contractAddress: {\n      97: '',\n      56: '0xc3683EB5B95b334180E2717c37f5F0a7493354b3',\n    },\n    maximiserTImage: '/images/santosxbnb.png',\n    isFinished: false,\n  },\n  {\n    maximizerId: 1,\n    stakingToken: tokens.qibnb,\n    earningTokens: {\n      main: tokens.cake,\n      extra: tokens.musashi\n    },\n    contractAddress: {\n      97: '',\n      56: '0xc3683EB5B95b334180E2717c37f5F0a7493354b3',\n    },\n    maximiserTImage: '/images/qixbnb.png',\n    isFinished: false,\n  },\n  {\n    maximizerId: 2,\n    stakingToken: tokens.darbnb,\n    earningTokens: {\n      main: tokens.cake,\n      extra: tokens.musashi\n    },\n    contractAddress: {\n      97: '',\n      56: '0xc3683EB5B95b334180E2717c37f5F0a7493354b3',\n    },\n    maximiserTImage: '/images/darxbnb.png',\n    isFinished: false,\n  },\n  {\n    maximizerId: 3,\n    stakingToken: tokens.bnbfroyo,\n    earningTokens: {\n      main: tokens.cake,\n      extra: tokens.musashi\n    },\n    contractAddress: {\n      97: '',\n      56: '0xc3683EB5B95b334180E2717c37f5F0a7493354b3',\n    },\n    maximiserTImage: '/images/froyoxbnb.png',\n    isFinished: false,\n  }\n]\n\nexport default maximizers\n","import BigNumber from 'bignumber.js'\nimport maximizersConfig from 'config/constants/maximizers'\nimport maximizerABI from 'config/abi/maximizer.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\n\n\nexport const fetchMaximizersTotalStaking = async () => {\n  const calls = maximizersConfig.map((m) => ({\n    address: getAddress(m.contractAddress),\n    name: 'getPoolProfile',\n    params: [m.maximizerId],\n  }))\n\n  const maximizersTotalStaked = await multicall(maximizerABI, calls)\n\n  return [\n    ...maximizersConfig.map((m, index) => ({\n      maximizerId: m.maximizerId,\n      totalStaked: new BigNumber(maximizersTotalStaked[index][2].toString()).toJSON(),\n    })),\n  ]\n}\n","import BigNumber from 'bignumber.js'\nimport maximizersConfig from 'config/constants/maximizers'\nimport bep20ABI from 'config/abi/erc20.json'\nimport maximizerABI from 'config/abi/maximizer.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\n\n\nexport const fetchMaximizersAllowance = async (account) => {\n  const calls = maximizersConfig.map((m) => ({\n    address: getAddress(m.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(m.contractAddress)],\n  }))\n\n  const allowances = await multicall(bep20ABI, calls)\n  return maximizersConfig.reduce(\n    (acc, maximizer, index) => ({ ...acc, [maximizer.maximizerId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  const calls = maximizersConfig.map((m) => ({\n    address: getAddress(m.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(bep20ABI, calls)\n  const tokenBalances = maximizersConfig.reduce(\n    (acc, maximizer, index) => ({ ...acc, [maximizer.maximizerId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  return tokenBalances\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = maximizersConfig.map((m) => ({\n    address: getAddress(m.contractAddress),\n    name: 'userInfo',\n    params: [account, m.maximizerId],\n  }))\n  const userInfo = await multicall(maximizerABI, calls)\n  const stakedBalances = maximizersConfig.reduce(\n    (acc, maximizer, index) => ({\n      ...acc,\n      [maximizer.maximizerId]: new BigNumber(userInfo[index][0].toString()).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...stakedBalances }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = maximizersConfig.map((m) => ({\n    address: getAddress(m.contractAddress),\n    name: 'getCakeClaim',\n    params: [m.maximizerId, account],\n  }))\n  const rewardInfo = await multicall(maximizerABI, calls)\n  const pendingRewards = maximizersConfig.reduce(\n    (acc, maximizer, index) => ({\n      ...acc,\n      [maximizer.maximizerId]: new BigNumber(rewardInfo[index]).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...pendingRewards }\n}\n\nexport const fetchUserPendingRewardsPlatform = async (account) => {\n  const calls = maximizersConfig.map((m) => ({\n    address: getAddress(m.contractAddress),\n    name: 'getPlatformClaim',\n    params: [m.maximizerId, account],\n  }))\n  const rewardInfo = await multicall(maximizerABI, calls)\n  const pendingRewardsPlatform = maximizersConfig.reduce(\n    (acc, maximizer, index) => ({\n      ...acc,\n      [maximizer.maximizerId]: new BigNumber(rewardInfo[index]).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...pendingRewardsPlatform }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport maximizerConfig from 'config/constants/maximizers'\nimport { MaximizersState, Maximizer, AppThunk } from 'state/types'\nimport { fetchMaximizersTotalStaking } from './fetchMaximizers'\nimport {\n  fetchMaximizersAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n  fetchUserPendingRewardsPlatform\n} from './fetchMaximizersUser'\nimport { updateVersion } from '../global/actions'\n\nconst initialState: MaximizersState = {\n  data: [...maximizerConfig],\n  userDataLoaded: false,\n}\n\nexport const fetchMaximizerPublicDataAsync = () => async (dispatch) => {\n  const totalStakings = await fetchMaximizersTotalStaking()\n\n  const liveData = maximizerConfig.map((maximizer) => {\n    const totalStaking = totalStakings.find((entry) => entry.maximizerId === maximizer.maximizerId)\n\n    return {\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setMaximizerPublicData(liveData))\n}\n\nexport const fetchMaximizerUserDataAsync = (account: string): AppThunk => async (dispatch) => {\n  const allowances = await fetchMaximizersAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n  const pendingRewardsPlatform = await fetchUserPendingRewardsPlatform(account)\n\n  const userData = maximizerConfig.map((maximizer) => ({\n    maximizerId: maximizer.maximizerId,\n    allowance: allowances[maximizer.maximizerId],\n    stakingTokenBalance: stakingTokenBalances[maximizer.maximizerId],\n    stakedBalance: stakedBalances[maximizer.maximizerId],\n    pendingReward: pendingRewards[maximizer.maximizerId],\n    pendingRewardPlatform: pendingRewardsPlatform[maximizer.maximizerId],\n  }))\n\n  dispatch(setMaximizerUserData(userData))\n}\n\nexport const updateMaximizerUserAllowance = (maximizerId: number, account: string): AppThunk => async (dispatch) => {\n  const allowances = await fetchMaximizersAllowance(account)\n  dispatch(updateMaximizerUserData({ maximizerId, field: 'allowance', value: allowances[maximizerId] }))\n}\n\nexport const updateMaximizerUserBalance = (maximizerId: number, account: string): AppThunk => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updateMaximizerUserData({ maximizerId, field: 'stakingTokenBalance', value: tokenBalances[maximizerId] }))\n}\n\nexport const updateMaximizerUserStakedBalance = (maximizerId: number, account: string): AppThunk => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updateMaximizerUserData({ maximizerId, field: 'stakedBalance', value: stakedBalances[maximizerId] }))\n}\n\nexport const updateMaximizerUserPendingReward = (maximizerId: number, account: string): AppThunk => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updateMaximizerUserData({ maximizerId, field: 'pendingReward', value: pendingRewards[maximizerId] }))\n}\n\nexport const updateMaximizerUserPendingRewardPlatform = (maximizerId: number, account: string): AppThunk => async (dispatch) => {\n  const pendingRewardsPlatform = await fetchUserPendingRewardsPlatform(account)\n  dispatch(updateMaximizerUserData({ maximizerId, field: 'pendingRewardPlatform', value: pendingRewardsPlatform[maximizerId] }))\n}\n\nexport const MaximizersSlice = createSlice({\n  name: 'Maximizers',\n  initialState,\n  reducers: {\n    setMaximizerPublicData: (state, action) => {\n      const liveMaximizersData: Maximizer[] = action.payload\n      state.data = state.data.map((maximizer) => {\n        const liveMaximizerData = liveMaximizersData.find((entry) => entry.maximizerId === maximizer.maximizerId)\n        return { ...maximizer, ...liveMaximizerData }\n      })\n    },\n    setMaximizerUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((maximizer) => {\n        const userMaximizerData = userData.find((entry) => entry.maximizerId === maximizer.maximizerId)\n        return { ...maximizer, userData: userMaximizerData }\n      })\n      state.userDataLoaded = true\n    },\n    updateMaximizerUserData: (state, action) => {\n      const { field, value, maximizerId } = action.payload\n      const index = state.data.findIndex((m) => m.maximizerId === maximizerId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(updateVersion, (state) => {\n      // reset state to init value\n      state.data = initialState.data\n      state.userDataLoaded = initialState.userDataLoaded\n    })\n  }\n})\n\n// Actions\nexport const { setMaximizerPublicData, setMaximizerUserData, updateMaximizerUserData } = MaximizersSlice.actions\n\nexport default MaximizersSlice.reducer\n","import tokens from './tokens'\nimport { VaultConfig } from './types'\n\nconst vaults: VaultConfig[] = [\n  {\n    vaultId: 1, // dummy id\n    stakingToken: tokens.cake,\n    earningTokens: {\n      main: tokens.cake,\n      extra: tokens.musashi\n    },\n    contractAddress: {\n      97: '',\n      56: '0x56D3eB06f63f4DA83aa17eed8a1B712213475db3',\n    },\n    vaultTImage: '/images/cake.png',\n    isFinished: false,\n  },\n  {\n    vaultId: 2,\n    stakingToken: tokens.cake,\n    earningTokens: {\n      main: tokens.musashi,\n    },\n    contractAddress: {\n      97: '',\n      56: '0x0F525105AA69A19dbFD9D314716dafc5d7B19327',\n    },\n    vaultTImage: '/images/cake.png',\n    isFinished: false,\n  }\n]\n\nexport default vaults\n","import BigNumber from 'bignumber.js'\nimport vaultConfig from 'config/constants/vaults'\nimport vaultABI from 'config/abi/autoVault.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const fetchVaultPricePerFullShare = async () => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'getPricePerFullShare',\n    params: [],\n  }))\n\n  const pricePerFullShare = await multicall(vaultABI, calls)\n\n  return [\n    ...vaultConfig.map((v, index) => ({\n      vaultId: v.vaultId,\n      pricePerFullShare: new BigNumber(pricePerFullShare[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchVaultTotalShares = async () => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'totalShares',\n    params: [],\n  }))\n\n  const totalShares = await multicall(vaultABI, calls)\n\n  return [\n    ...vaultConfig.map((v, index) => ({\n      vaultId: v.vaultId,\n      totalShares: new BigNumber(totalShares[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchVaultTotalPendingCakeRewards = async () => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'calculateTotalPendingCakeRewards',\n    params: [],\n  }))\n\n  const totalPendingCakeReward = await multicall(vaultABI, calls)\n\n  return [\n    ...vaultConfig.map((v, index) => ({\n      vaultId: v.vaultId,\n      totalPendingHarvest: new BigNumber(totalPendingCakeReward[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchVaultPerformanceFee = async () => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'performanceFee',\n    params: [],\n  }))\n\n  const performanceFee = await multicall(vaultABI, calls)\n\n  return [\n    ...vaultConfig.map((v, index) => ({\n      vaultId: v.vaultId,\n      performanceFee: new BigNumber(performanceFee[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchVaultTotalToken = async () => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'balanceOf',\n    params: [],\n  }))\n\n  const totalToken = await multicall(vaultABI, calls)\n\n  return [\n    ...vaultConfig.map((v, index) => ({\n      vaultId: v.vaultId,\n      totalTokenInVault: new BigNumber(totalToken[index]).toJSON(),\n    })),\n  ]\n}\n","import BigNumber from 'bignumber.js'\nimport vaultConfig from 'config/constants/vaults'\nimport erc20ABI from 'config/abi/erc20.json'\nimport vaultABI from 'config/abi/autoVault.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\n\n\nexport const fetchVaultPoolsAllowance = async (account) => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(v.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return vaultConfig.reduce(\n    (acc, vault, index) => ({ ...acc, [vault.vaultId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  const calls = vaultConfig.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = vaultConfig.reduce(\n    (acc, vault, index) => ({ ...acc, [vault.vaultId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  return tokenBalances\n}\n\nexport const fetchUserShares = async (account) => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n\n  const userInfo = await multicall(vaultABI, calls)\n  const shares = vaultConfig.reduce(\n    (acc, vault, index) => ({\n      ...acc,\n      [vault.vaultId]: new BigNumber(userInfo[index][0].toString()).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...shares }\n}\n\nexport const fetchUserAmount = async (account) => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'getUserAmount',\n    params: [account],\n  }))\n\n  const userInfo = await multicall(vaultABI, calls)\n  const shares = vaultConfig.reduce(\n    (acc, vault, index) => ({\n      ...acc,\n      [vault.vaultId]: new BigNumber(userInfo[index].toString()).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...shares }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = vaultConfig.map((v) => ({\n    address: getAddress(v.contractAddress),\n    name: 'getClaimable',\n    params: [account],\n  }))\n\n  const res = await multicall(vaultABI, calls)\n  const pendingRewards = vaultConfig.reduce(\n    (acc, vault, index) => ({\n      ...acc,\n      [vault.vaultId]: new BigNumber(res[index].toString()).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...pendingRewards }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport vaultConfig from 'config/constants/vaults'\nimport { AutoVaultState, AutoVault, AppThunk } from 'state/types'\nimport {\n  fetchVaultPricePerFullShare,\n  fetchVaultTotalShares,\n  fetchVaultTotalPendingCakeRewards,\n  fetchVaultPerformanceFee,\n  fetchVaultTotalToken\n} from './fetchVaultPools'\nimport {\n  fetchVaultPoolsAllowance,\n  fetchUserBalances,\n  fetchUserShares,\n  fetchUserPendingRewards,\n  fetchUserAmount\n} from './fetchVaultPoolsUser'\nimport { updateVersion } from '../global/actions'\n\nconst initialState: AutoVaultState = {\n  data: [...vaultConfig],\n  userDataLoaded: false,\n}\n\nexport const fetchVaultPublicDataAsync = () => async (dispatch) => {\n  const pricePerFullShares = await fetchVaultPricePerFullShare()\n  const totalSharess = await fetchVaultTotalShares()\n  const totalPendingCakeRewardss = await fetchVaultTotalPendingCakeRewards()\n  const performanceFees = await fetchVaultPerformanceFee()\n  const totalTokens = await fetchVaultTotalToken()\n\n  const liveData = vaultConfig.map((vault) => {\n    const pricePerFullShare = pricePerFullShares.find((entry) => entry.vaultId === vault.vaultId)\n    const totalShares = totalSharess.find((entry) => entry.vaultId === vault.vaultId)\n    const totalPendingCakeRewards = totalPendingCakeRewardss.find((entry) => entry.vaultId === vault.vaultId)\n    const performanceFee = performanceFees.find((entry) => entry.vaultId === vault.vaultId)\n    const totalToken = totalTokens.find((entry) => entry.vaultId === vault.vaultId)\n\n    return {\n      ...totalShares,\n      ...pricePerFullShare,\n      ...totalToken,\n      ...totalPendingCakeRewards,\n      fees: {\n        ...performanceFee\n      }\n    }\n  })\n\n  dispatch(setVaultPublicData(liveData))\n}\n\nexport const fetchVaultUserDataAsync = (account: string): AppThunk => async (dispatch) => {\n  const allowances = await fetchVaultPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const sharess = await fetchUserShares(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n  const userAmounts = await fetchUserAmount(account)\n\n  const userData = vaultConfig.map((vault) => ({\n    vaultId: vault.vaultId,\n    allowance: allowances[vault.vaultId],\n    stakingTokenBalance: stakingTokenBalances[vault.vaultId],\n    userShares: sharess[vault.vaultId],\n    userAmount: userAmounts[vault.vaultId],\n    pendingReward: pendingRewards[vault.vaultId],\n  }))\n\n  dispatch(setVaultUserData(userData))\n}\n\nexport const updateVaultUserAllowance = (vaultId: number, account: string): AppThunk => async (dispatch) => {\n  const allowances = await fetchVaultPoolsAllowance(account)\n  dispatch(updateVaultUserData({ vaultId, field: 'allowance', value: allowances[vaultId] }))\n}\n\nexport const updateVaultUserBalance = (vaultId: number, account: string): AppThunk => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updateVaultUserData({ vaultId, field: 'stakingTokenBalance', value: tokenBalances[vaultId] }))\n}\n\nexport const updateVaultUserShares = (vaultId: number, account: string): AppThunk => async (dispatch) => {\n  const sharess = await fetchUserShares(account)\n  dispatch(updateVaultUserData({ vaultId, field: 'userShares', value: sharess[vaultId] }))\n}\n\nexport const updateVaultUserAmount = (vaultId: number, account: string): AppThunk => async (dispatch) => {\n  const userAmounts = await fetchUserAmount(account)\n  dispatch(updateVaultUserData({ vaultId, field: 'userAmount', value: userAmounts[vaultId] }))\n}\n\nexport const updateVaultUserPendingReward = (vaultId: number, account: string): AppThunk => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updateVaultUserData({ vaultId, field: 'pendingReward', value: pendingRewards[vaultId] }))\n}\n\nexport const VaultsSlice = createSlice({\n  name: 'Vaults',\n  initialState,\n  reducers: {\n    setVaultPublicData: (state, action) => {\n      const liveVaultsData: AutoVault[] = action.payload\n      state.data = state.data.map((vault) => {\n        const liveVaultData = liveVaultsData.find((entry) => entry.vaultId === vault.vaultId)\n        return { ...vault, ...liveVaultData }\n      })\n    },\n    setVaultUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((vault) => {\n        const userVaultData = userData.find((entry) => entry.vaultId === vault.vaultId)\n        return { ...vault, userData: userVaultData }\n      })\n      state.userDataLoaded = true\n    },\n    updateVaultUserData: (state, action) => {\n      const { field, value, vaultId } = action.payload\n      const index = state.data.findIndex((v) => v.vaultId === vaultId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(updateVersion, (state) => {\n      // reset state to init value\n      state.data = initialState.data\n      state.userDataLoaded = initialState.userDataLoaded\n    })\n  }\n})\n\n// Actions\nexport const { setVaultPublicData, setVaultUserData, updateVaultUserData } = VaultsSlice.actions\n\nexport default VaultsSlice.reducer\n","import { CHAIN_ID_ENUM } from 'config/constants/chains'\nimport tokens from './tokens'\nimport { MultiPoolConfig } from './types'\n\nconst multiPools: MultiPoolConfig[] = [\n  {\n    poolId: 0,\n    stakingToken: tokens.time,\n    earningTokens: {\n      main: tokens.time\n    },\n    contractAddress: {\n      [CHAIN_ID_ENUM.BSC]: '',\n      [CHAIN_ID_ENUM.AVAX]: '0x7389e71d0651e53F9053d2Ac22e3139C3cCCC20f',\n    },\n    stakingTImage: '/images/timeToken.png?v=1',\n    sortOrder: 1,\n    isFinished: false,\n  }\n]\n\nexport default multiPools\n","import BigNumber from 'bignumber.js'\nimport multiPoolConfig from 'config/constants/multiPools'\nimport poolAvaxAbi from 'config/abi/pool_avax_abi.json'\nimport multicall from 'utils/multicallMulti'\nimport { CHAIN_ID } from 'config/constants/chains'\nimport tokens from 'config/constants/tokens'\nimport { getWonderlandStakingContract, getAvaxMemoTokenContract } from 'utils/contractHelperMulti'\nimport contracts from 'config/constants/contracts'\n\n// Pool total deposit / stake\nexport const fetchPoolsTotalStaking = async (chainId: number) => {\n  const filteredMultiPools = multiPoolConfig.filter((mPool) => mPool.contractAddress[chainId] && mPool.contractAddress[chainId] !== \"\")\n\n  const calls = filteredMultiPools.map((mPool) => ({\n    address: mPool.contractAddress[chainId],\n    name: 'total_deposit',\n    params: [],\n  }))\n\n  const totalStaked = await multicall(chainId, poolAvaxAbi, calls)\n\n  return [\n    ...filteredMultiPools.map((mPool, index) => ({\n      poolId: mPool.poolId,\n      totalStaked: new BigNumber(totalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\n// Pool APR\nexport const fetchPoolsAPR = async (chainId: number) => {\n  const filteredMultiPools = multiPoolConfig.filter((mPool) => mPool.contractAddress[chainId] && mPool.contractAddress[chainId] !== \"\")\n\n  if (chainId === CHAIN_ID.AVAX) {\n    // wonderland pool epoch\n    const wonderlandStakingContract = getWonderlandStakingContract(contracts.wonderlandStakingContr[chainId], chainId)\n    const epoch = await wonderlandStakingContract.epoch()\n    const stakingRewardBN = new BigNumber(epoch.distribute.toString())\n\n    // memo circulating supply\n    const memoContract = getAvaxMemoTokenContract(tokens.memo.address[chainId], chainId)\n    const circulatingSupply = await memoContract.circulatingSupply()\n    const circulatingSupplyBN = new BigNumber(circulatingSupply.toString())\n\n    const stakingRebase = stakingRewardBN.div(circulatingSupplyBN);\n    // stakingAPY    = Math.pow(1 + stakingRebase, 365 * 3) - 1;\n    const stakingAPY = ((stakingRebase.plus(1)).exponentiatedBy(365 * 3)).minus(1)\n    // APY(%) = (stakingAPY * 100) and 1 decimal point;\n    const stakingAPYPercentage = stakingAPY.times(100).toFixed(1)\n\n    return [\n      ...filteredMultiPools.map((mPool, index) => ({\n        poolId: mPool.poolId,\n        apy: stakingAPYPercentage,\n      })),\n    ]\n  }\n  return [\n    ...filteredMultiPools.map((mPool, index) => ({\n      poolId: mPool.poolId,\n      apy: \"0\",\n    })),\n  ]\n}","import BigNumber from 'bignumber.js'\nimport multiPoolConfig from 'config/constants/multiPools'\nimport poolAvaxAbi from 'config/abi/pool_avax_abi.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicallMulti'\n\n// user pool allowance\nexport const fetchMultiPoolsAllowance = async (chainId: number, account) => {\n  const filteredMultiPools = multiPoolConfig.filter((mPool) => mPool.contractAddress[chainId] && mPool.contractAddress[chainId] !== \"\")\n\n  const calls = filteredMultiPools.map((mPool) => ({\n    address: (mPool.stakingToken.address[chainId]),\n    name: 'allowance',\n    params: [account, (mPool.contractAddress[chainId])],\n  }))\n\n  const allowances = await multicall(chainId, erc20ABI, calls)\n\n  return filteredMultiPools.reduce(\n    (acc, mPool, index) => ({ ...acc, [mPool.poolId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\n// user stake token balance\nexport const fetchUserBalances = async (chainId: number, account) => {\n  const filteredMultiPools = multiPoolConfig.filter((mPool) => mPool.contractAddress[chainId] && mPool.contractAddress[chainId] !== \"\")\n\n  const calls = filteredMultiPools.map((mPool) => ({\n    address: (mPool.stakingToken.address[chainId]),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(chainId, erc20ABI, calls)\n  const tokenBalances = filteredMultiPools.reduce(\n    (acc, mPool, index) => ({ ...acc, [mPool.poolId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n  \n  return tokenBalances\n}\n\n// user deposit\nexport const fetchUserAmount = async (chainId: number, account) => {\n  const filteredMultiPools = multiPoolConfig.filter((mPool) => mPool.contractAddress[chainId] && mPool.contractAddress[chainId] !== \"\")\n\n  const calls = filteredMultiPools.map((mPool) => ({\n    address: (mPool.contractAddress[chainId]),\n    name: 'player',\n    params: [account],\n  }))\n\n  const userInfo = await multicall(chainId, poolAvaxAbi, calls)\n  const userDeposits = filteredMultiPools.reduce(\n    (acc, mPool, index) => ({\n    ...acc,\n    [mPool.poolId]: new BigNumber(userInfo[index][0].toString()).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...userDeposits }\n}\n\n// user claimable\nexport const fetchUserPendingRewards = async (chainId: number, account) => {\n    const filteredMultiPools = multiPoolConfig.filter((mPool) => mPool.contractAddress[chainId] && mPool.contractAddress[chainId] !== \"\")\n\n    const calls = filteredMultiPools.map((mPool) => ({\n      address: (mPool.contractAddress[chainId]),\n      name: 'getRewardAmount',\n      params: [account],\n    }))\n  \n    const res = await multicall(chainId, poolAvaxAbi, calls)\n    const pendingRewards = filteredMultiPools.reduce(\n      (acc, mPool, index) => ({\n        ...acc,\n        [mPool.poolId]: new BigNumber(res[index].toString()).toJSON(),\n      }),\n      {},\n    )\n  \n    return { ...pendingRewards }\n  }","import { createSlice } from '@reduxjs/toolkit'\nimport multiPoolConfig from 'config/constants/multiPools'\nimport { MultiPoolsState, MultiPool, AppThunk } from 'state/types'\nimport {\n  fetchPoolsTotalStaking,\n  fetchPoolsAPR\n} from './fetchMultiPools'\nimport {\n  fetchMultiPoolsAllowance,\n  fetchUserBalances,\n  fetchUserPendingRewards,\n  fetchUserAmount\n} from './fetchMultiPoolUser'\nimport { updateVersion } from '../global/actions'\n\nconst initialState: MultiPoolsState = {\n  data: [...multiPoolConfig],\n  userDataLoaded: false,\n}\n\nexport const fetchMultiPoolPublicDataAsync = (chainId: number) => async (dispatch) => {\n  const totalTokens = await fetchPoolsTotalStaking(chainId)\n  const aprs = await fetchPoolsAPR(chainId)\n\n  const filteredMultiPools = multiPoolConfig.filter((mPool) => mPool.contractAddress[chainId] && mPool.contractAddress[chainId] !== \"\")\n\n  const liveData = filteredMultiPools.map((mPool) => {\n    const totalToken = totalTokens.find((entry) => entry.poolId === mPool.poolId)\n    const apr = aprs.find((entry) => entry.poolId === mPool.poolId)\n\n    return {\n      ...totalToken,\n      ...apr\n    }\n  })\n\n  dispatch(setMultiPoolPublicData(liveData))\n}\n\nexport const fetchMultiPoolUserDataAsync = (chainId: number, account: string): AppThunk => async (dispatch) => {\n  const allowances = await fetchMultiPoolsAllowance(chainId, account)\n  const stakingTokenBalances = await fetchUserBalances(chainId, account)\n  const pendingRewards = await fetchUserPendingRewards(chainId, account)\n  const userAmounts = await fetchUserAmount(chainId, account)\n\n  const userData = multiPoolConfig.map((mPool) => ({\n    poolId: mPool.poolId,\n    allowance: allowances[mPool.poolId],\n    stakingTokenBalance: stakingTokenBalances[mPool.poolId],\n    userAmount: userAmounts[mPool.poolId],\n    pendingReward: pendingRewards[mPool.poolId],\n  }))\n\n  dispatch(setMultiPoolUserData(userData))\n}\n\nexport const updateMultiPoolUserAllowance = (chainId: number, poolId: number, account: string): AppThunk => async (dispatch) => {\n  const allowances = await fetchMultiPoolsAllowance(chainId, account)\n  dispatch(updateMultiPoolUserData({ poolId, field: 'allowance', value: allowances[poolId] }))\n}\n\nexport const updateMultiPoolUserBalance = (chainId: number, poolId: number, account: string): AppThunk => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(chainId, account)\n  dispatch(updateMultiPoolUserData({ poolId, field: 'stakingTokenBalance', value: tokenBalances[poolId] }))\n}\n\nexport const updateMultiPoolUserAmount = (chainId: number, poolId: number, account: string): AppThunk => async (dispatch) => {\n  const userAmounts = await fetchUserAmount(chainId, account)\n  dispatch(updateMultiPoolUserData({ poolId, field: 'userAmount', value: userAmounts[poolId] }))\n}\n\nexport const updateMultiPoolUserPendingReward = (chainId: number, poolId: number, account: string): AppThunk => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(chainId, account)\n  dispatch(updateMultiPoolUserData({ poolId, field: 'pendingReward', value: pendingRewards[poolId] }))\n}\n\nexport const MultiPoolsSlice = createSlice({\n  name: 'MultiPools',\n  initialState,\n  reducers: {\n    setMultiPoolPublicData: (state, action) => {\n      const liveVaultsData: MultiPool[] = action.payload\n      state.data = state.data.map((mPool) => {\n        const liveVaultData = liveVaultsData.find((entry) => entry.poolId === mPool.poolId)\n        return { ...mPool, ...liveVaultData }\n      })\n    },\n    setMultiPoolUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((mPool) => {\n        const userMultiPoolData = userData.find((entry) => entry.poolId === mPool.poolId)\n        return { ...mPool, userData: userMultiPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updateMultiPoolUserData: (state, action) => {\n      const { field, value, poolId } = action.payload\n      const index = state.data.findIndex((mPool) => mPool.poolId === poolId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(updateVersion, (state) => {\n      // reset state to init value\n      state.data = initialState.data\n      state.userDataLoaded = initialState.userDataLoaded\n    })\n  }\n})\n\n// Actions\nexport const { setMultiPoolPublicData, setMultiPoolUserData, updateMultiPoolUserData } = MultiPoolsSlice.actions\n\nexport default MultiPoolsSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ethers } from 'ethers'\nimport jackpotAbiAvax from 'config/abi/jackpot_abi_avax.json'\nimport erc20Abi from 'config/abi/erc20.json'\nimport wonderlandStakingAbi from 'config/abi/wonderlandStaking.json'\nimport avaxMemoTokenAbi from 'config/abi/avaxMemoToken.json'\nimport getProvider from './getProvider'\n\nexport const getContract = (abi: any, address: string, chainId: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const provider = getProvider(chainId)\n  const signerOrProvider = signer ?? provider\n  // if (!address || address === '0x0000000000000000000000000000000000000000' || !abi) return null\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getJackpotContract = (address: string, chainId: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(jackpotAbiAvax, address, chainId, signer)\n}\n\nexport const getErc20TokenContract = (address: string, chainId: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc20Abi, address, chainId, signer)\n}\n\nexport const getWonderlandStakingContract = (address: string, chainId: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(wonderlandStakingAbi, address, chainId, signer)\n}\n\nexport const getAvaxMemoTokenContract = (address: string, chainId: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(avaxMemoTokenAbi, address, chainId, signer)\n}","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\n// zap token logic\nimport ZAP_TOKEN_LIST from '../../config/constants/zapLists/zap.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n\n\n// zap token logic\nconst zapListCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\n\nexport function zapListToTokenMap(list: TokenList): TokenAddressMap {\n  const result = zapListCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  zapListCache?.set(list, map)\n  return map\n}\n\nexport function useZapTokenList(): TokenAddressMap {\n  const defaultTokenMap = zapListToTokenMap(ZAP_TOKEN_LIST)\n  return defaultTokenMap\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 435,\n    lpSymbol: 'REVV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\n    },\n    token: tokens.revv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: tokens.btt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 434,\n    lpSymbol: 'SKILL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\n    },\n    token: tokens.skill,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: tokens.win,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 433,\n    lpSymbol: 'IF-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\n    },\n    token: tokens.if,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 432,\n    lpSymbol: 'SPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\n    },\n    token: tokens.sps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 431,\n    lpSymbol: 'C98-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\n    },\n    token: tokens.c98,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 430,\n    lpSymbol: 'AXS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\n    },\n    token: tokens.axs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: tokens.pmon,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: tokens.trx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 429,\n    lpSymbol: 'CHESS-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n    },\n    token: tokens.chess,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 428,\n    lpSymbol: 'TITAN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n    },\n    token: tokens.titan,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 427,\n    lpSymbol: 'ONE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n    },\n    token: tokens.harmony,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 426,\n    lpSymbol: 'MASK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n    },\n    token: tokens.mask,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 425,\n    lpSymbol: 'DVI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n    },\n    token: tokens.dvi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 424,\n    lpSymbol: 'ADX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n    },\n    token: tokens.adx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 423,\n    lpSymbol: 'USDC-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.usdt,\n  },\n  {\n    pid: 422,\n    lpSymbol: 'CAKE-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.usdt,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 421,\n    lpSymbol: 'BSCPAD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n    },\n    token: tokens.bscpad,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 420,\n    lpSymbol: 'RABBIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n    },\n    token: tokens.rabbit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 419,\n    lpSymbol: 'WAULTx-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\n    },\n    token: tokens.waultx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 418,\n    lpSymbol: 'WEX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n    },\n    token: tokens.wex,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 417,\n    lpSymbol: 'FORM-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n    },\n    token: tokens.form,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 416,\n    lpSymbol: 'ORBS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n    },\n    token: tokens.orbs,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 415,\n    lpSymbol: 'DG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n    },\n    token: tokens.$dg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 414,\n    lpSymbol: 'WOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n    },\n    token: tokens.woo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 413,\n    lpSymbol: 'HTB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n    },\n    token: tokens.htb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 412,\n    lpSymbol: 'HAI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n    },\n    token: tokens.hai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 411,\n    lpSymbol: 'O3-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n    },\n    token: tokens.o3,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 410,\n    lpSymbol: 'AMPL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n    },\n    token: tokens.ampl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 409,\n    lpSymbol: 'ETH-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 408,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 407,\n    lpSymbol: 'MARSH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n    },\n    token: tokens.marsh,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 406,\n    lpSymbol: 'BORING-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n    },\n    token: tokens.boring,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 405,\n    lpSymbol: 'MBOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n    },\n    token: tokens.mbox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 404,\n    lpSymbol: 'ATA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\n    },\n    token: tokens.ata,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 403,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n    },\n    token: tokens.mx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 402,\n    lpSymbol: 'bCFX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n    },\n    token: tokens.bcfx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: tokens.qkc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: tokens.ktn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: tokens.mtrg,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: tokens.swg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: tokens.tusd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: tokens.vrt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 395,\n    lpSymbol: 'EZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n    },\n    token: tokens.ez,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 394,\n    lpSymbol: 'KALM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n    },\n    token: tokens.kalm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: tokens.popen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: tokens.well,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: tokens.deri,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: tokens.chr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: tokens.cyc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: tokens.xend,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: tokens.hotcross,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: tokens.rfox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: tokens.wmass,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: tokens.ubxt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: tokens.btr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: tokens.τdoge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: tokens.one,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: tokens.fine,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: tokens.doge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: tokens.oin,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: tokens.hyfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: tokens.math,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: tokens.mcoin,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: tokens.pnt,\n    quoteToken: tokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: tokens.lmt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: tokens.dfd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: tokens.alpaca,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: tokens.beth,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: tokens.og,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: tokens.asr,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: tokens.atm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: tokens.juv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: tokens.psg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: tokens.xtz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: tokens.bch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: tokens.stax,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: tokens.nar,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: tokens.nya,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: tokens.burger,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import addresses from 'config/constants/contracts'\n\nexport const getMulticallAddress = (chainId: number) => {\n  return addresses.multiCall[chainId]\n}","import { Interface } from '@ethersproject/abi'\nimport multicallABI from 'config/abi/Multicall.json'\nimport { ethers } from 'ethers'\nimport { getMulticallAddress } from './addressHelperMulti'\nimport getProvider from './getProvider'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (chainId: number, abi: any[], calls: Call[]) => {\n  const multicallAddress = getMulticallAddress(chainId)\n  const provider = getProvider(chainId)\n  const multi = new ethers.Contract(multicallAddress, multicallABI, provider)\n  const itf = new Interface(abi)\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.aggregate(calldata)\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n  return res\n}\n\nexport default multicall\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme as toggleThemeAction,\n} from '../actions'\nimport { serializeToken, deserializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import sample from 'lodash/sample'\nimport { NETWORK_RPC } from 'config/constants/chains'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport const ethRpc = [process.env.REACT_APP_ETH_RPC]\nexport const getEthRpc = () => {\n  return sample(ethRpc)\n}\n\nexport const getMultichainNodeUrl = (chainId: number) => {\n  return sample(NETWORK_RPC[chainId])\n}\n\nexport default getNodeUrl\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport { CHAIN_ID } from 'config/constants/chains'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst chainIdEth = parseInt(process.env.REACT_APP_ETH_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [CHAIN_ID.AVAX] })\nconst injectedBridge = new InjectedConnector({ supportedChainIds: [chainId, chainIdEth] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\nexport const connectorsByNameBridge: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injectedBridge,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","const fetchAndUpdateNetwork = (web3ChainId: number, account: string, chainId: number) => {\n  if (account) {\n    if (web3ChainId === chainId) {\n      return { chainId }\n    }\n    return { chainId: web3ChainId }\n  }\n  return { chainId }\n}\n\nexport default fetchAndUpdateNetwork\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { CHAIN_ID, NETWORK_LABEL } from 'config/constants/chains'\nimport { Network, NetworkState } from 'state/types'\nimport fetchAndUpdateNetwork from './fetchNetwork'\n\nconst chainIdSafeCheck = (): { chainId: number; chainIdFromUrl: boolean } => {\n  const { search } = window.location\n  const params = new URLSearchParams(search)\n  const chainStr = params.get('chain')\n  const removeChainParamUrl = window.location.href.split('?chain')[0]\n  window.history.pushState({}, document.title, removeChainParamUrl)\n  const localStorageChain = parseInt(window.localStorage.getItem('chainIdStatus'))\n  if (chainStr) {\n    if (chainStr.toLowerCase() === NETWORK_LABEL[CHAIN_ID.BSC].toLowerCase()) {\n      return { chainId: CHAIN_ID.BSC, chainIdFromUrl: true }\n    }\n    if (chainStr.toLowerCase() === NETWORK_LABEL[CHAIN_ID.MATIC].toLowerCase()) {\n      return { chainId: CHAIN_ID.MATIC, chainIdFromUrl: true }\n    }\n    return { chainId: localStorageChain || CHAIN_ID.AVAX, chainIdFromUrl: false }\n  }\n  return { chainId: localStorageChain || CHAIN_ID.AVAX, chainIdFromUrl: false }\n}\n\nconst { chainId: initChainId, chainIdFromUrl } = chainIdSafeCheck()\n\nconst initialState: NetworkState = {\n  isInitialized: false,\n  isLoading: true,\n  data: { chainId: initChainId, chainIdFromUrl },\n}\n\nexport const networkSlice = createSlice({\n  name: 'network',\n  initialState,\n  reducers: {\n    networkFetchStart: (state) => {\n      state.isLoading = true\n    },\n    networkFetchSucceeded: (state, action: PayloadAction<Network>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    networkFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    setNetwork: (state, action) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data.chainId = action.payload.chainId\n    },\n    setChainIdFromUrl: (state, action) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data.chainIdFromUrl = action.payload.chainIdFromUrl\n    },\n  },\n})\n\n// Actions\nexport const { networkFetchStart, networkFetchSucceeded, networkFetchFailed, setNetwork, setChainIdFromUrl } =\n  networkSlice.actions\n\n// thunks\nexport const fetchUserNetwork = (web3ChainId: number, account: string, chainId: number) => (dispatch) => {\n  try {\n    dispatch(networkFetchStart())\n    const network = fetchAndUpdateNetwork(web3ChainId, account, chainId)\n    dispatch(setNetwork(network))\n    localStorage.setItem(`chainIdStatus`, JSON.stringify(network.chainId))\n  } catch (error) {\n    console.log(error)\n    dispatch(networkFetchFailed())\n  }\n}\n\nexport const fetchChainIdFromUrl = (updatedChainIdFromUrl: boolean) => (dispatch) => {\n  dispatch(setChainIdFromUrl(updatedChainIdFromUrl))\n}\n\nexport default networkSlice.reducer\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getAddressEth = (address: Address): string => {\n  const chainId = process.env.REACT_APP_ETH_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[1]\n}\n\nexport const getStakingAddress = () => {\n  return getAddress(addresses.stakingContr)\n}\n\nexport const getZapAddress = () => {\n  return getAddress(addresses.zapContr)\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getReferralAddress = () => {\n  return getAddress(addresses.referralContr)\n}\nexport const getTreasuryAddress = () => {\n  return getAddress(addresses.treasuryContr)\n}\n","import React, {createContext, useCallback, useContext, useEffect, useMemo, useReducer} from 'react'\nimport useRefresh from 'hooks/useRefresh'\n\nconst UPDATE_POT_DETAILS = 'UPDATE_POT_DETAILS'\n\nconst PotDetailContext = createContext(undefined)\n\nconst API_URL = process.env.REACT_APP_DOMAIN_LINK\n\nfunction usePotDetailContext() {\n    return useContext(PotDetailContext)\n}\n\nfunction reducer(state, { type, payload }) {\n    switch (type) {\n        case UPDATE_POT_DETAILS: {\n            // const { address, sessionId, totalDeposit, totalReward, winners, deposits, end } = payload\n            const { address, sessionId, totalDeposit, totalReward, end } = payload\n            return {\n                ...state,\n                [address]: {\n                    ...state?.[address],\n                    sessionId,\n                    totalDeposit,\n                    totalReward,\n                    // winners,\n                    // deposits,\n                    end\n                },\n            }\n        }\n\n        default: {\n            throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n        }\n    }\n}\n\nexport default function Provider({ children }) {\n    const [state, dispatch] = useReducer(reducer, {})\n\n    // const updatePotData = useCallback((address, sessionId, totalDeposit, totalReward, winners, deposits, end) => {\n    const updatePotData = useCallback((address, sessionId, totalDeposit, totalReward, end) => {\n        dispatch({\n            type: UPDATE_POT_DETAILS,\n            payload: {address, sessionId, totalDeposit, totalReward, end },\n            // payload: {address, sessionId, totalDeposit, totalReward, winners, deposits, end },\n        })\n    }, [])\n\n\n    return (\n        <PotDetailContext.Provider\n            value={useMemo(\n                () => [\n                    state,\n                    {\n                        updatePotData\n                    },\n                ],\n                [\n                    state,\n                    updatePotData\n                ]\n            )}\n        >\n            {children}\n        </PotDetailContext.Provider>\n    )\n}\n\nconst GetPotData = async (contract, address) => {\n    // get from contract\n    // let result = await (await fetch(`${API_URL}/farm/${id}`)).json()\n    // let deposits\n    // try {\n    //     // get deposit list - host.com/api/jackpot/0x0123/deposits\n    //     deposits = await (await fetch(`${API_URL}jackpot/${address}/deposits`)).json()\n    //     // console.log({deposits})\n    // } catch (e) {\n    //     deposits = undefined\n    // }\n    const sessionId = await contract.session_id()\n    // let winners\n    // try {\n    //     winners = await contract.getCompleteHistory(sessionId-1)\n    // }\n    // catch (e) {\n    //     winners = undefined\n    // }\n    return {\n        \"address\": address,\n        sessionId,\n        \"totalDeposit\": await contract.total_deposit(),\n        \"totalReward\": 55,\n        // \"winners\": winners,\n        // \"deposits\": deposits,\n        \"end\" : await contract.session_endTimestamp()\n    }\n}\n\nexport function usePotData(contract,tempAddress) {\n    const { fastRefresh } = useRefresh()\n    const [state, { updatePotData }] = usePotDetailContext()\n    const potData = state?.[tempAddress]\n    useEffect(() => {\n\n        // const intervalId = setInterval(async () => {\n        //     await updPotData(tempAddress)\n        // }, 10000)\n\n        async function updPotData(_address) {\n            const potDataTemp = await GetPotData(contract, _address);\n            // const {address, sessionId, totalDeposit, totalReward, winners, deposits, end} = potDataTemp\n            // updatePotData(address, sessionId, totalDeposit, totalReward, winners, deposits, end)\n            const {address, sessionId, totalDeposit, totalReward, end} = potDataTemp\n            updatePotData(address, sessionId, totalDeposit, totalReward, end)\n        }\n        updPotData(tempAddress)\n\n        // return () => clearInterval(intervalId)\n    }, [potData, updatePotData, tempAddress, contract, fastRefresh]);\n\n\n    return potData || []\n}\n\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Musashi',\n  description:\n    'Musashi no lose jackpot pool',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Musashi')} | ${t('Home')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Musashi')} | ${t('Pools')}`,\n      }\n    case '/pot':\n      return {\n        title: `${t('Musashi')} | ${t('Pot')}`,\n      }\n    case '/bridge':\n      return {\n        title: `${t('Musashi')} | ${t('Bridge')}`,\n      }\n    case '/zap':\n      return {\n        title: `${t('Musashi')} | ${t('Zap')}`,\n      }\n    case '/referral' || '/referral/:address':\n      return {\n        title: `${t('Musashi')} | ${t('Referral')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description } = { ...DEFAULT_META, ...pageMeta }\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { getMultichainNodeUrl } from 'utils/getRpcUrl'\nimport { ethers } from 'ethers'\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\n\nconst activeWeb3Instance = {}\n\nconst getProvider = (chainId: number) => {\n  if (!activeWeb3Instance[chainId]) {\n    const RPC_URL = getMultichainNodeUrl(chainId)\n    activeWeb3Instance[chainId] = new ethers.providers.JsonRpcProvider(RPC_URL, chainId)\n  }\n  return activeWeb3Instance[chainId]\n}\n\nexport default getProvider\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName, connectorsByNameBridge } from 'utils/web3React'\nimport { setupNetwork, setupNetworkV2 } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useDispatch } from 'react-redux'\nimport { useNetworkChainId } from 'state/hooks'\nimport { profileClear } from 'state/profile'\n\nconst useAuth = (path?: string) => {\n  const { t } = useTranslation()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const dispatch = useDispatch()\n  const chainId = useNetworkChainId()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = path === 'bridge'? connectorsByNameBridge[connectorID] : connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetworkV2(chainId)\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [path, activate, toastError, t, chainId],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from \"react\";\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" fill=\"none\" {...props}>\n      <circle cx=\"48\" cy=\"48\" r=\"48\" fill=\"#F0B90B\" />\n      <path\n        d=\"M30.9008 25.9057L47.8088 16.0637L64.7169 25.9057L58.5007 29.5416L47.8088 23.3355L37.117 29.5416L30.9008 25.9057ZM64.7169 38.3179L58.5007 34.682L47.8088 40.8881L37.117 34.682L30.9008 38.3179V45.5897L41.5926 51.7958V64.2079L47.8088 67.8438L54.0251 64.2079V51.7958L64.7169 45.5897V38.3179ZM64.7169 58.0018V50.7301L58.5007 54.366V61.6377L64.7169 58.0018ZM69.1305 60.572L58.4386 66.7781V74.0499L75.3467 64.2079V44.524L69.1305 48.1599V60.572ZM62.9143 32.1118L69.1305 35.7477V43.0195L75.3467 39.3836V32.1118L69.1305 28.4759L62.9143 32.1118ZM41.5926 69.411V76.6828L47.8088 80.3187L54.0251 76.6828V69.411L47.8088 73.0469L41.5926 69.411ZM30.9008 58.0018L37.117 61.6377V54.366L30.9008 50.7301V58.0018ZM41.5926 32.1118L47.8088 35.7477L54.0251 32.1118L47.8088 28.4759L41.5926 32.1118ZM26.4872 35.7477L32.7034 32.1118L26.4872 28.4759L20.271 32.1118V39.3836L26.4872 43.0195V35.7477ZM26.4872 48.1599L20.271 44.524V64.2079L37.1791 74.0499V66.7781L26.4872 60.572V48.1599Z\"\n        fill=\"white\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\nexport const MUS: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xdffdFd03A65A4F5a55F826C9f7a96579d7A1fD05',\n    18,\n    'MUS',\n    'Musashi Token',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  time: {\n    symbol: 'TIME',\n    address: {\n      56: '',\n      43114: '0xb54f16fB19478766A268F172C9480f8da1a7c9C3'\n    },\n    decimals: 9,\n    projectLink: 'https://www.wonderland.money/'\n  },\n  memo: {\n    symbol: 'MEMO',\n    address: {\n      56: '',\n      43114: '0x136Acd46C134E8269052c62A67042D6bDeDde3C9'\n    },\n    decimals: 9,\n    projectLink: 'https://www.wonderland.money/'\n  },\n  usdtbusd: {\n    symbol: 'USDT-BUSD LP',\n    address: {\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  xcoin: {\n    symbol: 'XCOIN',\n    address: {\n      56: '0x7A91C7257fbe40453Ad3da44293658A6B237f8Df',\n      97: '0x769d7029833a9Ec81BDb28cE9bD6B0C9C4B3E96b',\n    },\n    decimals: 18,\n    projectLink: 'https://',\n  },\n  bnbmusashi: {\n    symbol: 'BNB-MUS LP',\n    address: {\n      56: '0x182C17fd381f81fc98f715Bea12bf9F5BF824Fb1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  santosbnb: {\n    symbol: 'SANTOS-BNB LP',\n    address: {\n      56: '0x06043B346450BbCfdE066ebc39fdc264FdFFeD74',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  qibnb: {\n    symbol: 'QI-BNB LP',\n    address: {\n      56: '0xf924E642f05ACC57fc3b14990c2B1a137683b201',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  darbnb: {\n    symbol: 'DAR-BNB LP',\n    address: {\n      56: '0x062f88E2B4896e823ac78Ac314468c29eEC4186d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  bnbfroyo: {\n    symbol: 'FROYO-BNB LP',\n    address: {\n      56: '0x1Ce76390Dd210B9C9ae28373FDf79714206ECb73',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  pcoin: {\n    symbol: 'PCOIN',\n    address: {\n      56: '0x352E5Dfc7DE737336805ef4f21a4a1dd4E0647B8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  musashi: {\n    symbol: 'MUS',\n    address: {\n      56: '0xdffdFd03A65A4F5a55F826C9f7a96579d7A1fD05',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.musashi.app/',\n  },\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n}\n\nexport default tokens\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import React from \"react\";\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"96\" height=\"96\" viewBox=\"0 0 113 113\" fill=\"none\" {...props}>\n      <g xmlns=\"http://www.w3.org/2000/svg\" id=\"surface1\">\n        <path stroke=\"none\" fillRule=\"nonzero\" fill=\"rgb(100%,100%,100%)\" fillOpacity={1} d=\"M 21.578125 19.382812 L 91.347656 19.382812 L 91.347656 82.796875 L 21.578125 82.796875 Z M 21.578125 19.382812 \"/>\n        <path stroke=\"none\" fillRule=\"evenodd\" fill=\"rgb(90.980392%,25.490196%,25.882353%)\" fillOpacity={1} d=\"M 112.960938 56.5 C 112.960938 87.664062 87.683594 112.925781 56.5 112.925781 C 25.316406 112.925781 0.0390625 87.664062 0.0390625 56.5 C 0.0390625 25.335938 25.316406 0.0742188 56.5 0.0742188 C 87.683594 0.0742188 112.960938 25.335938 112.960938 56.5 Z M 40.5 78.953125 L 29.542969 78.953125 C 27.238281 78.953125 26.101562 78.953125 25.410156 78.511719 C 24.660156 78.027344 24.203125 77.222656 24.148438 76.335938 C 24.105469 75.515625 24.675781 74.519531 25.8125 72.523438 L 52.867188 24.863281 C 54.019531 22.839844 54.601562 21.828125 55.335938 21.453125 C 56.125 21.050781 57.070312 21.050781 57.859375 21.453125 C 58.597656 21.828125 59.179688 22.839844 60.328125 24.863281 L 65.890625 34.566406 L 65.921875 34.617188 C 67.164062 36.789062 67.792969 37.890625 68.070312 39.042969 C 68.375 40.304688 68.375 41.636719 68.070312 42.898438 C 67.792969 44.0625 67.167969 45.171875 65.90625 47.375 L 51.695312 72.480469 L 51.65625 72.546875 C 50.40625 74.734375 49.769531 75.84375 48.890625 76.679688 C 47.933594 77.597656 46.785156 78.261719 45.519531 78.636719 C 44.371094 78.953125 43.082031 78.953125 40.5 78.953125 Z M 68.171875 78.953125 L 83.875 78.953125 C 86.191406 78.953125 87.355469 78.953125 88.050781 78.496094 C 88.796875 78.011719 89.269531 77.195312 89.3125 76.308594 C 89.351562 75.515625 88.792969 74.558594 87.703125 72.675781 C 87.667969 72.613281 87.628906 72.546875 87.589844 72.480469 L 79.726562 59.035156 L 79.636719 58.882812 C 78.53125 57.015625 77.972656 56.074219 77.257812 55.710938 C 76.46875 55.308594 75.535156 55.308594 74.746094 55.710938 C 74.027344 56.082031 73.441406 57.066406 72.292969 59.050781 L 64.453125 72.496094 L 64.429688 72.542969 C 63.28125 74.519531 62.707031 75.507812 62.75 76.320312 C 62.804688 77.207031 63.261719 78.027344 64.011719 78.511719 C 64.691406 78.953125 65.855469 78.953125 68.171875 78.953125 Z M 68.171875 78.953125 \"/>\n      </g>\n      {/* <path fillRule=\"evenodd\" clipRule=\"evenodd\" \n        d=\"M1502.5 752C1502.5 1166.77 1166.27 1503 751.5 1503C336.734 1503 0.5 1166.77 0.5 752C0.5 337.234 336.734 1 751.5 1C1166.27\n        1 1502.5 337.234 1502.5 752ZM538.688 1050.86H392.94C362.314 1050.86 347.186 1050.86 337.962 1044.96C327.999 1038.5 321.911 1027.8\n        321.173 1015.99C320.619 1005.11 328.184 991.822 343.312 965.255L703.182 330.935C718.495 303.999 726.243 290.531 736.021 285.55C746.537\n        280.2 759.083 280.2 769.599 285.55C779.377 290.531 787.126 303.999 802.438 330.935L876.42 460.079L876.797 460.738C893.336 489.635 901.723\n        504.289 905.385 519.669C909.443 536.458 909.443 554.169 905.385 570.958C901.695 586.455 893.393 601.215 876.604 630.549L687.573 964.702L687.084\n        965.558C670.436 994.693 661.999 1009.46 650.306 1020.6C637.576 1032.78 622.263 1041.63 605.474 1046.62C590.161 1050.86 573.004 1050.86 538.688\n        1050.86ZM906.75 1050.86H1115.59C1146.4 1050.86 1161.9 1050.86 1171.13 1044.78C1181.09 1038.32 1187.36 1027.43 1187.92 1015.63C1188.45 1005.1\n        1181.05 992.33 1166.55 967.307C1166.05 966.455 1165.55 965.588 1165.04 964.706L1060.43 785.75L1059.24 783.735C1044.54 758.877 1037.12 746.324\n        1027.59 741.472C1017.08 736.121 1004.71 736.121 994.199 741.472C984.605 746.453 976.857 759.552 961.544 785.934L857.306 964.891L856.949 965.507C841.69\n        991.847 834.064 1005.01 834.614 1015.81C835.352 1027.62 841.44 1038.5 851.402 1044.96C860.443 1050.86 875.94 1050.86 906.75 1050.86Z\"\n        fill=\"#E84142\"\n      /> */}\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n  useZapTokenList\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  let { chainId } = useActiveWeb3React()\n  if (chainId !== 56) {\n    chainId = 56\n  }\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllZapTokens(): { [address: string]: Token } {\n  const allTokens = useZapTokenList()\n  return useTokensFromMap(allTokens, false)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n      if (!activeTokensAddresses.includes(address)) {\n        newMap[address] = inactiveTokens[address]\n      }\n      return newMap\n    }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n      ? parseBytes32String(bytes32)\n      : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useZapToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllZapTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n\nexport function useZapCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useZapToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              className=\"swap-setting-input\"\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            className=\"swap-setting-input\"\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport { Text, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../Layout/Column'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Settings')} onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal minWidth='320px' title={t('Recent Transactions')} onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title?: string\n  subtitle?: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\n// const AppHeaderContainer = styled(Flex)`\n//   align-items: center;\n//   justify-content: space-between;\n//   padding: 24px;\n//   width: 100%;\n//   border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n// `\nconst AppHeaderContainer = styled(Flex)`\n  visibility: hidden;\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        {(title && subtitle) ? (\n          <Flex flexDirection=\"column\">\n            <Heading as=\"h2\" mb=\"8px\">\n              {title}\n            </Heading>\n            <Flex alignItems=\"center\">\n              {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n              <Text color=\"textSubtle\" fontSize=\"14px\">\n                {subtitle}\n              </Text>\n            </Flex>\n          </Flex>) : null\n        }\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\n// export const BodyWrapper = styled(Card)`\n//   border-radius: 24px;\n//   width: 100%;\n//   z-index: 1;\n//   box-shadow: 5px 10px 18px #910101;\n// `\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 10px;\n  width: 100%;\n  z-index: 1;\n  box-shadow: none;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\n// export const BodyWrapper = styled(Card)`\n//   border-radius: 24px;\n//   width: 100%;\n//   z-index: 1;\n//   box-shadow: 5px 10px 18px #910101;\n// `\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 0px;\n  width: 100%;\n  z-index: 1;\n  box-shadow: none;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBodyPot({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { fetchChainIdFromUrl, fetchUserNetwork } from 'state/network'\nimport { CHAIN_PARAMS } from 'config/constants/chains'\n\nconst useSwitchNetwork = () => {\n  const { chainId, account, library } = useWeb3React()\n  const dispatch = useDispatch()\n  const switchNetwork = useCallback(\n    (userChainId: number) => {\n      if (account && userChainId !== chainId) {\n        try {\n          library?.send('wallet_addEthereumChain', [CHAIN_PARAMS[userChainId], account])\n          dispatch(fetchChainIdFromUrl(false))\n        } catch (error) {\n          console.warn(error)\n        }\n      } else {\n        dispatch(fetchUserNetwork(chainId, account, userChainId))\n      }\n    },\n    [chainId, account, library, dispatch],\n  )\n  return { switchNetwork }\n}\n\nexport default useSwitchNetwork\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { MetamaskIcon, WalletConnectIcon, TrustWalletIcon, MathWalletIcon, TokenPocketIcon, BinanceChainIcon, SafePalIcon, Coin98Icon } from '@pancakeswap/uikit'\n\nexport enum ConnectorNames {\n    Injected = \"injected\",\n    WalletConnect = \"walletconnect\",\n    BSC = \"bsc\"\n}\n\nexport const connectors = [\n    {\n        title: \"Metamask\",\n        icon: MetamaskIcon,\n        connectorId: ConnectorNames.Injected,\n        priority: 1,\n    },\n    {\n        title: \"WalletConnect\",\n        icon: WalletConnectIcon,\n        connectorId: ConnectorNames.WalletConnect,\n        priority: 2,\n    },\n    {\n        title: \"Trust Wallet\",\n        icon: TrustWalletIcon,\n        connectorId: ConnectorNames.Injected,\n        priority: 3,\n    },\n    {\n        title: \"MathWallet\",\n        icon: MathWalletIcon,\n        connectorId: ConnectorNames.Injected,\n        priority: 999,\n    },\n    {\n        title: \"TokenPocket\",\n        icon: TokenPocketIcon,\n        connectorId: ConnectorNames.Injected,\n        priority: 999,\n    },\n    {\n        title: \"Binance Chain\",\n        icon: BinanceChainIcon,\n        connectorId: ConnectorNames.BSC,\n        priority: 999,\n    },\n    {\n        title: \"SafePal\",\n        icon: SafePalIcon,\n        connectorId: ConnectorNames.Injected,\n        priority: 999,\n    },\n    {\n        title: \"Coin98\",\n        icon: Coin98Icon,\n        connectorId: ConnectorNames.Injected,\n        priority: 999,\n    },\n]\n\nexport const connectorLocalStorageKey = \"connectorIdv2\"\nexport const walletLocalStorageKey = \"wallet\"","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Button, Box, ModalContainer, ModalBody, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { walletLocalStorageKey, connectorLocalStorageKey, connectors as walletConfig, ConnectorNames } from 'config/constants/connectors'\n\ninterface ConnectModalProps {\n  login: (connectorName: string) => void\n  onDismiss?: () => void\n  // TooltipComponent: React.ElementType\n}\n\nconst WalletWrapper = styled(Box)`\n  border-bottom: 1px solid rgb(231, 227, 235);\n  max-height: 453px;\n  overflow-y: auto;\n  padding-top: 24px;\n  padding-bottom: 24px;\n`\nconst WalletButton = styled(Button)`\n  width: 100%;\n  padding: 16px 24px;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: transparent;\n  box-shadow: none;\n`\n\nconst ConnectModal: React.FC<ConnectModalProps> = ({ login, onDismiss }) => {\n  const { t } = useTranslation()\n\n  const getPreferredConfig = (connectors: any) => {\n    const preferredWalletName = localStorage.getItem(walletLocalStorageKey)\n    const sortedConfig = connectors.sort(function (a, b) { return a.priority - b.priority; })\n    console.log('sortedConfig', sortedConfig)\n    if (!preferredWalletName) {\n      return sortedConfig;\n    }\n    const preferredWallet = sortedConfig.find(function (sortedWalletConfig) { return sortedWalletConfig.title === preferredWalletName; });\n    console.log('preferredWallet', preferredWallet)\n    if (!preferredWallet) {\n      return sortedConfig;\n    }\n    console.log(sortedConfig.filter(function (sortedWalletConfig) { return sortedWalletConfig.title !== preferredWalletName; }))\n    return [preferredWallet, ...sortedConfig.filter(function (sortedWalletConfig) { return sortedWalletConfig.title !== preferredWalletName; })]\n  }\n\n  const sortedConfig = getPreferredConfig(walletConfig);\n\n  const onClickWallet = (connector) => {\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n    // Since iOS does not support Trust Wallet we fall back to WalletConnect\n    if (connector.title === \"Trust Wallet\" && isIOS) {\n      login(ConnectorNames.WalletConnect)\n    } else {\n      login(connector.connectorId);\n    }\n    localStorage.setItem(walletLocalStorageKey, connector.title)\n    localStorage.setItem(connectorLocalStorageKey, connector.connectorId)\n    onDismiss()\n  }\n\n  return (\n    <ModalContainer minWidth=\"320px\">\n      <ModalBody width={[\"320px\", null, \"340px\"]}>\n        <WalletWrapper>\n          <Grid gridTemplateColumns=\"1fr 1fr\">\n            {sortedConfig.map((wallet) => <Box key={wallet.title}>\n              <div>\n                <WalletButton onClick={() => onClickWallet(wallet)}>\n                  <wallet.icon style={{ width: \"40px\", mb: \"8px\" }} />\n                  <Text fontSize='14px'>{wallet.title}</Text>\n                </WalletButton>\n              </div>\n            </Box>)}\n          </Grid>\n        </WalletWrapper>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default ConnectModal","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Button, Modal, LinkExternal,  } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { walletLocalStorageKey, connectorLocalStorageKey, connectors as walletConfig, ConnectorNames } from 'config/constants/connectors'\n\ninterface AccountModalProps {\n  logout: () => void\n  account?: string | undefined\n  onDismiss?: () => void\n  textObj: any\n  // TooltipComponent: React.ElementType\n}\n\nconst AccountText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 8px;\n  font-size: 20px;\n  font-weight: 700;\n`\nconst StyledI = styled.i`\n  padding-top: 8px;\n  font-size: 30px;\n`\n\nconst AccountModal: React.FC<AccountModalProps> = ({ logout, account, onDismiss, textObj }) => {\n  const { t } = useTranslation()\n  const [isCopied, setIsCopied] = useState(false)\n\n  const onCopyText = () => {\n    setIsCopied(true)\n    setTimeout(() => {\n      setIsCopied(false)\n    }, 1000)\n  }\n\n  const onClickLogout = () => {\n    logout()\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    onDismiss()\n  }\n\n  return (\n    <Modal title='' onDismiss={onDismiss} headerBackground=\"linear-gradient(111.68deg, #f2ecec 0%, #f6e8e8 100%)\">\n      <AccountText>{account}</AccountText>\n      <Flex mb='32px'>\n        <LinkExternal small href={textObj.explorerLinkText} mr=\"16px\">{textObj.linkText}</LinkExternal>\n        <CopyToClipboard text={account} onCopy={onCopyText}>\n          <span>{isCopied ? t('Copied!') : <StyledI className='bx bxs-copy' />}</span>\n        </CopyToClipboard>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <Button scale='sm' variant='secondary' onClick={onClickLogout}>{t('Logout')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default AccountModal","import React, { useCallback } from 'react'\nimport { useModal } from '@pancakeswap/uikit'\nimport ConnectModal from './Modals/ConnectModal'\nimport AccountModal from './Modals/AccountModal'\n\nconst useWalletModal = (login, logout, account, textObj) => {\n  const handlePresentConnectModal = useModal(<ConnectModal login={login} />, true, true, 'connc')[0]\n  const handlePresentAccountModal = useModal(<AccountModal logout={logout} account={account} textObj={textObj} />, true, true, 'acc-modal')[0]\n\n  return { onPresentConnectModal: handlePresentConnectModal, onPresentAccountModal: handlePresentAccountModal }\n}\n\nexport default useWalletModal","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider, ethRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\nimport { useSelector } from 'react-redux'\nimport getProvider from 'utils/getProvider'\nimport { State } from 'state/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport const useActiveWeb3ReactV2 = (): Web3ReactContextInterface<Web3Provider> => {\n  const { account, library, chainId, ...web3React } = useWeb3React()\n  const appChainId = useSelector((state: State) => state.network.data.chainId)\n  const appProvider = getProvider(appChainId)\n\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || appProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || appProvider)\n      refEth.current = library\n    }\n  }, [library, appProvider])\n\n  return { library: provider, chainId: chainId || appChainId, account, ...web3React }\n}\n\nexport const useEthActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  // const refEth = useRef(library)\n  const [provider, setprovider] = useState<any>(ethRpcProvider)\n\n  // useEffect(() => {\n  //   if (library !== refEth.current) {\n  //     setprovider(library || ethRpcProvider)\n  //     refEth.current = library\n  //   }\n  // }, [library])\n\n  return { library: provider, chainId: parseInt(process.env.REACT_APP_ETH_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const getFullDisplayBalanceFull = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals, 1)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getJackpotContract,\n  getStakingContract,\n  getReferralContract,\n  getAutoVaultContract,\n  getTreasuryContract,\n  getZapContract,\n  getMaximizerContract\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\nexport const useERC20Bridge = (address?: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => (address) ? getBep20Contract(address, library.getSigner()) : false, [address, library])\n}\nexport const useERC20Unsigned = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, undefined), [address])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useStakingContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getStakingContract(library.getSigner()), [library])\n}\n\nexport const useTreasuryContract = (signer = true) => {\n  const { library } = useActiveWeb3React()\n  const withSigner = useMemo(() => getTreasuryContract(library.getSigner()), [library])\n  const noSigner = useMemo(() => getTreasuryContract(undefined), [])\n  return signer ? withSigner : noSigner\n}\n\nexport const useZapContract = (signer = true) => {\n  const { library } = useActiveWeb3React()\n  const withSigner = useMemo(() => getZapContract(library.getSigner()), [library])\n  const noSigner = useMemo(() => getZapContract(undefined), [])\n  return signer ? withSigner : noSigner\n}\n\nexport const useJackpotContractSigned = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getJackpotContract(address, library.getSigner()), [address, library])\n}\n\nexport const useJackpotContract = (address: string) => {\n  return useMemo(() => getJackpotContract(address, undefined), [address])\n}\n\nexport const useAutoVaultContract = (address: string, signer = true) => {\n  const { library } = useActiveWeb3React()\n  const withSigner = useMemo(() => getAutoVaultContract(address, library.getSigner()), [address, library])\n  const noSigner = useMemo(() => getAutoVaultContract(address, undefined), [address])\n  return signer ? withSigner : noSigner\n}\n\nexport const useMaximizerContract = (address: string, signer = true) => {\n  const { library } = useActiveWeb3React()\n  const withSigner = useMemo(() => getMaximizerContract(address, library.getSigner()), [address, library])\n  const noSigner = useMemo(() => getMaximizerContract(address, undefined), [address])\n  return signer ? withSigner : noSigner\n}\n\nexport const useReferralContract = () => {\n  return useMemo(() => getReferralContract(undefined), [])\n}\n\nexport const useMasterchefSpecial = () => {\n  return useMemo(() => getMasterchefContract(undefined), [])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n  getStakingAddress,\n  getReferralAddress,\n  getTreasuryAddress,\n  getZapAddress\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport jackpotAbi from 'config/abi/jackpot_abi.json'\nimport stakingAbi from 'config/abi/stakingABI.json'\nimport referralAbi from 'config/abi/referral.json'\nimport vaultAbi from 'config/abi/autoVault.json'\nimport treasuryAbi from 'config/abi/Treasury.json'\nimport zapAbi from 'config/abi/zap.json'\nimport maximizerAbi from 'config/abi/maximizer.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getStakingContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(stakingAbi, getStakingAddress(), signer)\n}\nexport const getZapContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(zapAbi, getZapAddress(), signer)\n}\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getJackpotContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(jackpotAbi, address, signer)\n}\nexport const getAutoVaultContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(vaultAbi, address, signer)\n}\nexport const getMaximizerContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(maximizerAbi, address, signer)\n}\nexport const getReferralContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(referralAbi, getReferralAddress(), signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getTreasuryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(treasuryAbi, getTreasuryAddress(), signer)\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import BinanceChainIcon from 'components/ConnectNetwork/icons/BinanceChain'\nimport PolygonChainIcon from 'components/ConnectNetwork/icons/PolygonChain'\nimport AvalancheChainIcon from 'components/ConnectNetwork/icons/AvalancheChain'\nimport { ConnectNetworkConfig } from 'config/constants/types'\n\n// Network chain ids\n\nexport const CHAIN_ID = {\n  BSC: 56,\n  BSC_TESTNET: 97,\n  MATIC: 137,\n  MATIC_TESTNET: 80001,\n  AVAX: 43114,\n  AVAX_TESTNET: 43113\n}\nexport enum CHAIN_ID_ENUM {\n  BSC = 56,\n  BSC_TESTNET = 97,\n  MATIC = 137,\n  MATIC_TESTNET = 80001,\n  AVAX = 43114,\n  AVAX_TESTNET = 43113\n}\n\n// Network labels\n\nexport const NETWORK_LABEL = {\n  [CHAIN_ID.BSC]: 'BSC',\n  [CHAIN_ID.BSC_TESTNET]: 'BSC Testnet',\n  [CHAIN_ID.MATIC]: 'Polygon',\n  [CHAIN_ID.MATIC_TESTNET]: 'Polygon Testnet',\n  [CHAIN_ID.AVAX]: 'Avalanche',\n  [CHAIN_ID.AVAX_TESTNET]: 'Avalanche FUJI C-Chain'\n}\n\n// Network icons\n\nexport const NETWORK_ICON = {\n  [CHAIN_ID.BSC]: BinanceChainIcon,\n  [CHAIN_ID.BSC_TESTNET]: BinanceChainIcon,\n  [CHAIN_ID.MATIC]: PolygonChainIcon,\n  [CHAIN_ID.MATIC_TESTNET]: PolygonChainIcon,\n  [CHAIN_ID.AVAX]: AvalancheChainIcon,\n  [CHAIN_ID.AVAX_TESTNET]: AvalancheChainIcon,\n}\n\n// export const NETWORK_INFO_LINK = {\n//   [CHAIN_ID.BSC]: 'https://info.apeswap.finance',\n//   [CHAIN_ID.BSC_TESTNET]: 'https://info.apeswap.finance',\n//   [CHAIN_ID.MATIC]: 'https://polygon.info.apeswap.finance/',\n//   [CHAIN_ID.MATIC_TESTNET]: 'https://polygon.info.apeswap.finance/',\n// }\n\n// Network RPC nodes\nexport const NETWORK_RPC = {\n  [CHAIN_ID.BSC]: [\n    'https://bsc-dataseed1.ninicoin.io',\n    'https://bsc-dataseed.binance.org/',\n    'https://bsc-dataseed1.defibit.io',\n  ],\n  [CHAIN_ID.BSC_TESTNET]: ['https://data-seed-prebsc-2-s3.binance.org:8545/'],\n  [CHAIN_ID.MATIC]: ['https://polygon-rpc.com/'],\n  [CHAIN_ID.MATIC_TESTNET]: ['https://matic-mumbai.chainstacklabs.com'],\n  [CHAIN_ID.AVAX]: ['https://api.avax.network/ext/bc/C/rpc'],\n  [CHAIN_ID.AVAX_TESTNET]: ['https://api.avax-test.network/ext/bc/C/rpc'],\n}\n\n// Network block explorers\n\nexport const BLOCK_EXPLORER = {\n  [CHAIN_ID.BSC]: 'https://bscscan.com/',\n  [CHAIN_ID.BSC_TESTNET]: 'https://testnet.bscscan.com/',\n  [CHAIN_ID.MATIC]: 'https://polygonscan.com',\n  [CHAIN_ID.MATIC_TESTNET]: 'https://mumbai.polygonscan.com/',\n  [CHAIN_ID.AVAX]: 'https://snowtrace.io/',\n  [CHAIN_ID.AVAX_TESTNET]: 'https://testnet.snowtrace.io/'\n}\nexport const BLOCK_EXPLORER_NAME = {\n  [CHAIN_ID.BSC]: 'BscScan',\n  [CHAIN_ID.BSC_TESTNET]: 'BscScan',\n  [CHAIN_ID.MATIC]: 'PolygonScan',\n  [CHAIN_ID.MATIC_TESTNET]: 'Mumbai PolygonScan',\n  [CHAIN_ID.AVAX]: 'Snowtrace',\n  [CHAIN_ID.AVAX_TESTNET]: 'Testnet Snowtrace/'\n}\n\nexport const CHAIN_PARAMS = {\n  [CHAIN_ID.BSC]: {\n    chainId: '0x38',\n    chainName: 'Binance Smart Chain',\n    nativeCurrency: {\n      name: 'bnb',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[CHAIN_ID.BSC],\n    blockExplorerUrls: [BLOCK_EXPLORER[CHAIN_ID.BSC]],\n  },\n  [CHAIN_ID.BSC_TESTNET]: {\n    chainId: '0x61',\n    chainName: 'Binance Smart Chain Testnet',\n    nativeCurrency: {\n      name: 'bnb',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[CHAIN_ID.BSC_TESTNET],\n    blockExplorerUrls: [BLOCK_EXPLORER[CHAIN_ID.BSC_TESTNET]],\n  },\n  [CHAIN_ID.MATIC]: {\n    chainId: '0x89',\n    chainName: 'Matic',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[CHAIN_ID.MATIC],\n    blockExplorerUrls: [BLOCK_EXPLORER[CHAIN_ID.MATIC]],\n  },\n  [CHAIN_ID.MATIC_TESTNET]: {\n    chainId: '0x89',\n    chainName: 'Matic',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[CHAIN_ID.MATIC_TESTNET],\n    blockExplorerUrls: [BLOCK_EXPLORER[CHAIN_ID.MATIC_TESTNET]],\n  },\n  [CHAIN_ID.AVAX]: {\n    chainId: '0xa86a',\n    chainName: 'Avalanche Network',\n    nativeCurrency: {\n      name: 'Avalanche',\n      symbol: 'AVAX',\n      decimals: 9,\n    },\n    rpcUrls: NETWORK_RPC[CHAIN_ID.AVAX],\n    blockExplorerUrls: [BLOCK_EXPLORER[CHAIN_ID.AVAX]],\n  },\n  [CHAIN_ID.AVAX_TESTNET]: {\n    chainId: 'A869',\n    chainName: 'Avalanche FUJI C-Chain',\n    nativeCurrency: {\n      name: 'Avalanche',\n      symbol: 'AVAX',\n      decimals: 9,\n    },\n    rpcUrls: NETWORK_RPC[CHAIN_ID.AVAX_TESTNET],\n    blockExplorerUrls: [BLOCK_EXPLORER[CHAIN_ID.AVAX_TESTNET]],\n  },\n}\n\nexport const networks: ConnectNetworkConfig[] = [\n  // {\n  //   chainId: CHAIN_ID.BSC,\n  //   networkName: \"Build and Build\",\n  //   symbol: NETWORK_LABEL[CHAIN_ID.BSC],\n  //   icon: NETWORK_ICON[CHAIN_ID.BSC],\n  // },\n  // {\n  //   chainId: CHAIN_ID.MATIC,\n  //   networkName: \"Polygon (Matic)\",\n  //   symbol: NETWORK_LABEL[CHAIN_ID.MATIC],\n  //   icon: NETWORK_ICON[CHAIN_ID.MATIC],\n  // },\n  {\n    chainId: CHAIN_ID.AVAX,\n    networkName: \"Avalanche (AVAX)\",\n    symbol: NETWORK_LABEL[CHAIN_ID.AVAX],\n    icon: NETWORK_ICON[CHAIN_ID.AVAX],\n  },\n]","import React from \"react\";\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 38.4 33.5\" {...props}>\n      <path\n        d=\"M29,10.2c-0.7-0.4-1.6-0.4-2.4,0L21,13.5l-3.8,2.1l-5.5,3.3c-0.7,0.4-1.6,0.4-2.4,0L5,16.3\n\t\tc-0.7-0.4-1.2-1.2-1.2-2.1v-5c0-0.8,0.4-1.6,1.2-2.1l4.3-2.5c0.7-0.4,1.6-0.4,2.4,0L16,7.2c0.7,0.4,1.2,1.2,1.2,2.1v3.3l3.8-2.2V7\n\t\tc0-0.8-0.4-1.6-1.2-2.1l-8-4.7c-0.7-0.4-1.6-0.4-2.4,0L1.2,5C0.4,5.4,0,6.2,0,7v9.4c0,0.8,0.4,1.6,1.2,2.1l8.1,4.7\n\t\tc0.7,0.4,1.6,0.4,2.4,0l5.5-3.2l3.8-2.2l5.5-3.2c0.7-0.4,1.6-0.4,2.4,0l4.3,2.5c0.7,0.4,1.2,1.2,1.2,2.1v5c0,0.8-0.4,1.6-1.2,2.1\n\t\tL29,28.8c-0.7,0.4-1.6,0.4-2.4,0l-4.3-2.5c-0.7-0.4-1.2-1.2-1.2-2.1V21l-3.8,2.2v3.3c0,0.8,0.4,1.6,1.2,2.1l8.1,4.7\n\t\tc0.7,0.4,1.6,0.4,2.4,0l8.1-4.7c0.7-0.4,1.2-1.2,1.2-2.1V17c0-0.8-0.4-1.6-1.2-2.1L29,10.2z\"\n        fill=\"#8247E5\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import BigNumber from 'bignumber.js'\nimport tokens from './tokens'\nimport { PotConfig } from './types'\n\nconst pots: PotConfig[] = [\n  {\n    potAddress: \"0xd41cb3aF183E56E70a388BF80308206bD033250F\",\n    potId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.musashi,\n    potLabel: 'MUSASHI X CAKE',\n    potBannerPath: \"/images/musashixcake.png\",\n    isNew: true,\n    prizeAmount: new BigNumber(57000),   // to be deleted when contract is available\n    totalDeposit: new BigNumber(2000),  // to be deleted when contract is available\n    expiryDate: \"date here\"  // to be deleted when contract is available\n  },\n  {\n    potAddress: \"0x12Be0868A6a8e57F8aD2014B8a184D937aB1D9c5\",\n    potId: 1,\n    stakingToken: tokens.cake,\n    earningToken: tokens.musashi,\n    potLabel: 'MUSASHI X CAKE',\n    potBannerPath: \"/images/musashixcake.png\",\n    isClosed: true,\n    prizeAmount: new BigNumber(57000),   // to be deleted when contract is available\n    totalDeposit: new BigNumber(2000),  // to be deleted when contract is available\n    expiryDate: \"date here\"  // to be deleted when contract is available\n  }\n]\n\nexport default pots\n\n\n// 0x4F3AeAd88A7d4EdD559aF5545aD165DfE6A05Bff\n// 0xb40300C8b068F981Ee8Da06bcCe3115FBBE0aA28\n// 0xf636cfe9a6b8599b9cd911D659F808a742d7385f\n// 0x130c9b59119Aa16c02B7aD8cECCdbd7836781098\n","import BigNumber from 'bignumber.js'\nimport { CHAIN_ID, CHAIN_ID_ENUM } from 'config/constants/chains'\nimport tokens from './tokens'\nimport { MultiPotConfig } from './types'\n\nconst potsMulti: MultiPotConfig[] = [\n  {\n    potAddress: {\n      [CHAIN_ID_ENUM.BSC] : \"\",\n      [CHAIN_ID_ENUM.AVAX] : \"0xF7f23A4a1d96595b7D798fE0981847e2486C48b6\"\n    },\n    potId: 0,\n    stakingToken: tokens.time,\n    earningToken: tokens.time,\n    potLabel: 'TIME POOL',\n    potBannerPath: \"/images/musashi-general-pool-img.png\",\n    isNew: true\n  },\n]\n\nexport default potsMulti\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { FC } from 'react'\nimport { SvgProps } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n  43114?: string\n  43113?: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  stakingTImage: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface VaultConfig {\n  vaultId: number\n  stakingToken: Token\n  earningTokens: { main: Token, extra?: Token }\n  contractAddress: Address\n  vaultTImage: string\n  sortOrder?: number\n  isFinished?: boolean\n}\n\nexport interface MaximizerConfig {\n  maximizerId: number\n  stakingToken: Token\n  earningTokens: { main: Token, extra?: Token }\n  contractAddress: Address\n  maximiserTImage: string\n  sortOrder?: number\n  isFinished?: boolean\n}\n\nexport interface PotConfig {\n  potAddress\n  potId: number\n  stakingToken: Token\n  earningToken: Token\n  potLabel: string\n  potBannerPath: string\n  isNew?: boolean\n  isClosed?: boolean\n  prizeAmount: BigNumber   // to be deleted when contract is available\n  totalDeposit: BigNumber   // to be deleted when contract is available\n  expiryDate: string  // to be deleted when contract is available\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n\nexport interface ConnectNetworkConfig {\n  chainId: number;\n  networkName: string;\n  symbol: string;\n  icon: FC<SvgProps>;\n}\n\nexport interface MultiPotConfig {\n  potAddress: Address | undefined\n  potId: number\n  stakingToken: Token | undefined\n  earningToken: Token | undefined\n  potLabel: string\n  potBannerPath: string\n  isNew?: boolean\n  isClosed?: boolean\n}\n\nexport interface MultiPoolConfig {\n  poolId: number\n  stakingToken: Token\n  earningTokens: { main: Token, extra?: Token }\n  contractAddress: Address\n  stakingTImage: string\n  sortOrder?: number\n  isFinished?: boolean\n}","import { useEffect, useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useSelector } from 'react-redux'\nimport { ethers } from 'ethers'\nimport { minBy, orderBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport Nfts from 'config/constants/nfts'\nimport { CHAIN_ID } from 'config/constants/chains'\nimport useSwitchNetwork from 'hooks/useSelectNetwork'\nimport { State, NodeRound, ReduxNodeLedger, NodeLedger, ReduxNodeRound } from './types'\nimport { fetchWalletNfts } from './collectibles'\nimport { parseBigNumberObj } from './predictions/helpers'\nimport { fetchUserNetwork } from './network'\n\n// Network\nexport const useNetworkChainId = (): number => {\n  const chainId = useSelector((state: State) => state.network.data.chainId)\n  return chainId\n}\n\nexport const useNetworkChainIdFromUrl = (): boolean => {\n  const chainIdFromUrl = useSelector((state: State) => state.network.data.chainIdFromUrl)\n  return chainIdFromUrl\n}\n\nexport const useUpdateNetwork = () => {\n  const dispatch = useAppDispatch()\n  const { chainId, account } = useActiveWeb3React()\n  const appChainId = useNetworkChainId()\n  const chainIdFromUrl = useNetworkChainIdFromUrl()\n  const { switchNetwork } = useSwitchNetwork()\n  useEffect(() => {\n    if (chainIdFromUrl) {\n      switchNetwork(appChainId)\n    } else {\n      dispatch(fetchUserNetwork(chainId, account, appChainId))\n    }\n    // Load initial vault state in update netowrk to stop mount re-render\n    // dispatch(setVaultsLoad(false))\n  }, [chainId, account, appChainId, chainIdFromUrl, switchNetwork, dispatch])\n}\n\n// /!\\\n// Don't add anything here. These hooks will be moved the the predictions folder\n\n// Predictions\nexport const useGetRounds = () => {\n  const rounds = useSelector((state: State) => state.predictions.rounds)\n  return Object.keys(rounds).reduce((accum, epoch) => {\n    return {\n      ...accum,\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\n    }\n  }, {}) as { [key: string]: NodeRound }\n}\n\nexport const useGetRound = (epoch: number) => {\n  const round = useSelector((state: State) => state.predictions.rounds[epoch])\n  return parseBigNumberObj<ReduxNodeRound, NodeRound>(round)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\n  const bets = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][epoch]) {\n    return null\n  }\n\n  return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\n}\n\nexport const useGetIsClaimable = (epoch) => {\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\n  return claimableStatuses[epoch] || false\n}\n\n/**\n * Used to get the range of rounds to poll for\n */\nexport const useGetEarliestEpoch = () => {\n  return useSelector((state: State) => {\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\n    return earliestRound?.epoch\n  })\n}\n\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\n}\n\nexport const useGetRewardRate = () => {\n  const rewardRate = useSelector((state: State) => state.predictions.rewardRate)\n  return rewardRate / 100\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetLedgerByRoundId = (account: string, roundId: string) => {\n  const ledgers = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!ledgers[account]) {\n    return null\n  }\n\n  if (!ledgers[account][roundId]) {\n    return null\n  }\n\n  return ledgers[account][roundId]\n}\n\nexport const useGetLastOraclePrice = () => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return useMemo(() => {\n    return ethers.BigNumber.from(lastOraclePrice)\n  }, [lastOraclePrice])\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more reliable\n  const mergedResponse = graphResponse.map((graphRound, index) => {\n    const nodeRound = nodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          finalNumber: nodeRound.finalNumber.toString(),\n          startTime: nodeRound.startTime,\n          status: nodeRound.status,\n          id: graphRound.id,\n          ticketPrice: graphRound.ticketPrice,\n          totalTickets: graphRound.totalTickets,\n          totalUsers: graphRound.totalUsers,\n          winningTickets: graphRound.winningTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteries = async (): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries {\n          lotteries(first: 100, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('zap/selectCurrency')\nexport const switchCurrencies = createAction<void>('zap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('zap/typeInput')\nexport const replaceZapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n}>('zap/replaceZapState')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  Field,\n  replaceZapState,\n  selectCurrency,\n  switchCurrencies,\n  typeInput\n} from './actions'\n\nexport interface ZapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n}\n\nconst initialState: ZapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n}\n\nexport default createReducer<ZapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceZapState,\n      (state, { payload: { typedValue, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport vaultsReducer from './vaults'\nimport zap from './zap/reducer'\nimport maximizerReducer from './maximizers'\nimport networkReducer from './network'\nimport multiPoolsReducer from './multiPool'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    vaults: vaultsReducer,\n    maximizers: maximizerReducer,\n    network: networkReducer,\n    multiPools: multiPoolsReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n    zap\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://bsc.musashi.app'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 300000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useMemo } from 'react'\nimport { useActiveWeb3ReactV2 } from 'hooks/useActiveWeb3React'\nimport { getErc20TokenContract, getJackpotContract } from 'utils/contractHelperMulti'\nimport { getContract } from 'utils'\nimport erc20 from 'config/abi/erc20.json'\nimport poolAvaxAbi from 'config/abi/pool_avax_abi.json'\nimport jackpotAvaxAbi from 'config/abi/jackpot_abi_avax.json'\n\nexport const useContract = (abi: any, address: string | undefined, withSignerIfPossible = true) => {\n  const { library, account } = useActiveWeb3ReactV2()\n\n  return useMemo(() => {\n    if (!address || address === '0x0000000000000000000000000000000000000000' || !abi || !library) return null\n    try {\n      return getContract(address, abi, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, abi, library, withSignerIfPossible, account])\n}\n\nexport const useERC20 = (address: string) => {\n  return useContract(erc20, address)\n}\nexport const useJackpotWithCheck = (address: string) => {\n  return useContract(jackpotAvaxAbi, address)\n}\n\nexport const useStakingContractWithCheck = (address: string) => {\n  return useContract(poolAvaxAbi, address)\n}\n\nexport const useErc20TokenContract = (address: string, chainId: number, signer = true) => {\n  const { library } = useActiveWeb3ReactV2()\n  const withSigner = useMemo(() => getErc20TokenContract(address, chainId, library.getSigner()), [address, library, chainId])\n  const noSigner = useMemo(() => getErc20TokenContract(address, chainId, undefined), [address, chainId])\n  return signer ? withSigner : noSigner\n}\n\nexport const useJackpotContract = (address: string, chainId: number, signer = true) => {\n  const { library } = useActiveWeb3ReactV2()\n  const withSigner = useMemo(() => getJackpotContract(address, chainId, library.getSigner()), [address, library, chainId])\n  const noSigner = useMemo(() => getJackpotContract(address, chainId, undefined), [address, chainId])\n  return signer ? withSigner : noSigner\n}","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team, PotConfig, VaultConfig, MaximizerConfig, MultiPoolConfig } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n    key: string\n    data?: {\n      [key: string]: string | number\n    }\n  }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Pot extends PotConfig {\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface AutoVaultFees {\n  performanceFee: number\n}\n\nexport interface AutoVaultUser {\n  userShares: BigNumber\n  userAmount: BigNumber\n  allowance: BigNumber\n  stakingTokenBalance: BigNumber\n  pendingReward: BigNumber\n}\n\nexport interface AutoVault extends VaultConfig {\n  totalShares?: BigNumber\n  pricePerFullShare?: string\n  totalTokenInVault?: string\n  totalPendingHarvest?: string\n  isAutoVault?: boolean\n  fees?: AutoVaultFees\n  userData?: AutoVaultUser\n}\n\nexport interface Maximizer extends MaximizerConfig {\n  totalStaked?: BigNumber\n  isMaximizer?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n    pendingRewardPlatform: BigNumber\n  }\n}\n\nexport interface MultiPool extends MultiPoolConfig {\n  totalTokenInVault?: string\n  userData?: MultiPoolUser\n}\n\nexport interface MultiPoolUser {\n  userAmount: BigNumber\n  allowance: BigNumber\n  stakingTokenBalance: BigNumber\n  pendingReward: BigNumber\n}\n\nexport interface Network {\n  chainId: number\n  chainIdFromUrl?: boolean\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface PotsState {\n  data: Pot[]\n  userDataLoaded: boolean\n}\n\nexport interface AutoVaultState {\n  data: AutoVault[]\n  userDataLoaded: boolean\n}\n\nexport interface MaximizersState {\n  data: Maximizer[]\n  userDataLoaded: boolean\n}\n\nexport interface MultiPoolsState {\n  data: MultiPool[]\n  userDataLoaded: boolean\n}\n\nexport interface NetworkState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: Network\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n  pots: PotsState\n  vaults: AutoVaultState\n  maximizers: MaximizersState\n  network: NetworkState\n  multiPools: MultiPoolsState\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","export default {\n  stakingContr: {\n    97: '',\n    56: '0x024Ece00965833Ea0D096A03f25E9b07e80DD88A'\n  },\n  zapContr: {\n    97: '',\n    56: '0x7E00443a75eE3EB6F8227FA1f35AE390F1a77B3F'\n  },\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n    43114: '0x82F3931352d0d757Bb1Bb022cC683B75B53F5ebF'\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  referralContr: {\n    56: '0xB3d5c4D7027b53f66458477899976C202264336A',\n    97: '',\n  },\n  treasuryContr: {\n    56: '0x4616dccBC40692326060c511ACD9A2f196045F21',\n    97: '',\n  },\n\n  wonderlandStakingContr: {\n    56: '',\n    97: '',\n    43114: '0x4456B87Af11e87E329AB7d7C7A246ed1aC2168B9'\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = (path=\"\") => {\n  const { login } = useAuth(path)\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { languageList } from 'config/localization/languages'\nimport useAuth from 'hooks/useAuth'\nimport useWalletModalV2 from 'components/ConnectWallet/useWalletModal'\nimport { BLOCK_EXPLORER, BLOCK_EXPLORER_NAME } from 'config/constants/chains'\nimport { useNetworkChainId } from 'state/hooks'\n\nconst ConnectWalletButton = (props) => {\n  const { t, currentLanguage, setLanguage } = useTranslation()\n  const { login, logout } = useAuth()\n  const { account } = props\n  const chainId = useNetworkChainId()\n  const { onPresentAccountModal } = useWalletModal(login, logout, account, {\n    copyText   : t(\"Copy Address\"),\n    logoutText : t(\"Logout\"),\n    linkText   : t(\"View on BscScan\"),\n    copiedText : t(\"Copied\")\n  })\n  const { onPresentAccountModal: onPresentAccountModalV2 } = useWalletModalV2(login, logout, account, {\n    linkText   : t(\"View on %explorerName%\", { explorerName: BLOCK_EXPLORER_NAME[chainId] }),\n    explorerLinkText : `${BLOCK_EXPLORER[chainId]}address/${account}`\n  })\n  const address = account ? `${account.substring(0, 4)}...${account.substring(account.length - 4)}` : null\n\n  return (\n    <Button style={{ backgroundColor: '#910101' }} onClick={onPresentAccountModalV2} {...props}>\n      {address}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import React from \"react\";\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Modal, Button, Text } from '@pancakeswap/uikit'\nimport { networks } from 'config/constants/chains'\n\ninterface ConnectNetworkModalProps {\n  switchNetwork: (chainId: number) => void\n  onDismiss?: () => void\n  chainId: number\n}\n\nconst NetworkButton = styled(Button)`\n  margin-bottom: 10px;\n  background-color: #910101;\n  width: 100%;\n`\n\nconst ConnectNetworkModal: React.FC<ConnectNetworkModalProps> = ({ switchNetwork, onDismiss, chainId }) => {\n  const { t } = useTranslation()\n\n  const handleSwitchNetwork = (networkChainId) => {\n    switchNetwork(networkChainId)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Select a Network')} onDismiss={onDismiss}>\n      {networks.map((network) => (\n        <NetworkButton disabled={network.chainId === chainId} onClick={() => handleSwitchNetwork(network.chainId)}>\n          <network.icon width=\"22px\" mr=\"10px\" alignmentBaseline='baseline' />\n          <Text fontWeight={600} color=\"text\" mr=\"16px\" textAlign=\"start\">\n            {network.symbol}\n          </Text>\n        </NetworkButton>\n      ))}\n    </Modal>\n  )\n}\n\nexport default ConnectNetworkModal","import React from \"react\";\nimport { useModal } from \"@pancakeswap/uikit\";\nimport ConnectNetworkModal from \"./Modals/ConnectNetworkModal\";\n\ninterface ReturnType {\n  onPresentNetworkModal: () => void;\n}\n\nconst useNetworkModal = (switchNetwork: (chainId: number) => void, chainId: number): ReturnType => {\n  const [onPresentNetworkModal] = useModal(<ConnectNetworkModal switchNetwork={switchNetwork} chainId={chainId} />);\n  return { onPresentNetworkModal };\n};\n\nexport default useNetworkModal;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints, Button } from '@pancakeswap/uikit'\nimport { NETWORK_LABEL, CHAIN_ID } from 'config/constants/chains'\nimport { ArrowDropDownSmall } from 'components/Svg'\nimport BinanceChainIcon from 'components/ConnectNetwork/icons/BinanceChain'\nimport AvalancheChainIcon from 'components/ConnectNetwork/icons/AvalancheChain'\nimport useNetworkModal from './ConnectNetwork/useNetworkModal'\n\ninterface ConnectNetworkProps {\n  chainId: number;\n  switchNetwork: (chainId: number) => void;\n}\n\nconst StyledConnectNetworkButton = styled(Button)`\n  background-color: #910101;\n  border-radius: 23.5px;\n`\n\nexport const NETWORK_ICON: { [key: number]: any } = {\n  [CHAIN_ID.BSC]: <BinanceChainIcon width=\"18px\" height=\"18px\" mr=\"5px\" />,\n  [CHAIN_ID.BSC_TESTNET]: <BinanceChainIcon width=\"18px\" height=\"18px\" mr=\"5px\" />,\n  // [CHAIN_ID.MATIC]: <PolygonChainIcon width=\"18px\" height=\"18px\" mr=\"5px\" />,\n  [CHAIN_ID.AVAX]: <AvalancheChainIcon width=\"18px\" height=\"18px\" mr=\"5px\" />,\n};\n\nconst ConnectNetworkButton: React.FC<ConnectNetworkProps> = ({ chainId, switchNetwork }) => {\n  const { isXl, isMd } = useMatchBreakpoints();\n  const { onPresentNetworkModal } = useNetworkModal(switchNetwork, chainId);\n\n  return (\n    <StyledConnectNetworkButton\n      size=\"sm\"\n      fontSize={isMd || isXl ? \"16px\" : \"14px\"}\n      onClick={() => {\n        onPresentNetworkModal();\n      }}\n    >\n      {NETWORK_ICON[chainId]} {NETWORK_LABEL[chainId]}\n      <ArrowDropDownSmall />\n    </StyledConnectNetworkButton>\n  )\n}\n\nexport default ConnectNetworkButton","import React from \"react\";\nimport styled, { CSSProperties } from 'styled-components'\nimport { Text, Dropdown, Button, LanguageIcon, Language } from \"@pancakeswap/uikit\";\n\ninterface Props {\n  currentLang: string;\n  langs: Language[];\n  setLang: (lang: Language) => void;\n  styleProps?: CSSProperties;\n}\n\nconst Wrapper = styled.div`\n  border: 1px solid black;\n`\n\nconst LangSelector: React.FC<Props> = ({ currentLang, langs, setLang, styleProps }) => (\n  <Dropdown\n    target={\n      <Button style={styleProps} variant=\"text\" startIcon={<LanguageIcon className=\"white\" width=\"24px\" />}>\n        <Text className=\"text-white text-nowrap\">{currentLang?.toUpperCase()}</Text>\n      </Button>\n    }\n  >\n    {langs.map((lang) => (\n      <Button\n        key={lang.locale}\n        onClick={() => setLang(lang)}\n        className=\"lang-btn\"\n      >\n        {lang.language}\n      </Button>\n    ))}\n  </Dropdown>\n);\n\nexport default React.memo(LangSelector, (prev, next) => prev.currentLang === next.currentLang);\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport useActiveWeb3React, { useActiveWeb3ReactV2 } from 'hooks/useActiveWeb3React'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport AccountWalletButton from 'components/AccountWalletButton'\nimport ConnectNetworkButton from 'components/ConnectNetworkButton'\nimport useSelectNetwork from 'hooks/useSelectNetwork'\nimport { useTranslation } from 'contexts/Localization'\nimport { languageList } from 'config/localization/languages'\nimport LangSelector from '../LangSelector'\n\nconst StyledI = styled.i`\n  color: white;\n`\nconst StyledImg = styled.img`\n  @media only screen and (max-width: 767px) {\n    visibility: hidden;\n  }\n`\n\nconst Menu = () => {\n  const { account } = useWeb3React()\n  const { chainId } = useActiveWeb3ReactV2()\n\n  const [showMenu, setshowMenu] = useState(false)\n\n  const toggleMenu = () => {\n    setshowMenu(!showMenu)\n  }\n\n  useEffect(() => {\n    // const elementId = document.getElementById('navbar')\n    // document.addEventListener('scroll', () => {\n    //   if (window.scrollY > 170) {\n    //     elementId.classList.add('is-sticky')\n    //   } else {\n    //     elementId.classList.remove('is-sticky')\n    //   }\n    // })\n    // window.scrollTo(0, 0)\n  }, [])\n\n  const { t, setLanguage, currentLanguage } = useTranslation()\n\n  const { switchNetwork } = useSelectNetwork()\n\n  return (\n    <>\n      <div id='navbar' className='navbar-area'>\n        <div className='raimo-responsive-nav'>\n          <div className='container'>\n            <div className='raimo-responsive-menu'>\n              <div role='presentation' onClick={() => toggleMenu()} className='hamburger-menu'>\n                {showMenu ? (\n                  <StyledI className='bx bx-x' />\n                ) : (\n                  <StyledI className='bx bx-menu' />\n                )}\n              </div>\n              <div className='logo'>\n                <a href='https://bsc.musashi.app/'>\n                  <StyledImg src='/images/musashi-logo.png' alt='logo'/>\n                </a>\n              </div>\n              <div className='responsive-others-option'>\n                <div className='d-flex align-items-center'>\n                  <div className='option-item'>\n                    <LangSelector currentLang={currentLanguage.code} langs={languageList} setLang={setLanguage} styleProps={{ \"paddingLeft\": \"10px\" }} />\n                  </div>\n                  <div className='option-item'>\n                    {!account ? <ConnectWalletButton /> : <AccountWalletButton account={account} />}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <nav className={showMenu ? 'show navbar navbar-expand-md navbar-light' : 'navbar navbar-expand-md navbar-light hide-menu'}>\n          <div className='container'>\n            <a href='https://bsc.musashi.app/' className='navbar-brand' style={{ minWidth: 'fit-content' }}>\n              <img src='/images/musashi-logo.png' alt='logo' style={{ minWidth: 'fit-content' }} />\n            </a>\n            <div className='collapse navbar-collapse mean-menu'>\n              <ul className='navbar-nav'>\n                <li className='nav-item'>\n                  <Link to=\"/pot\" className='nav-link'>{t(\"Pot\")}</Link>\n                </li>\n                <li className='nav-item'>\n                  <Link to=\"/pools\" className='nav-link'>{t(\"Pool\")}</Link>\n                </li>\n                {/* <li className='nav-item'>\n                  <Link to=\"/bridge\" className='nav-link'>{t(\"Bridge\")}</Link>\n                </li>\n                <li className='nav-item'>\n                  <Link to=\"/zap\" className='nav-link'>{t(\"Zap\")}</Link>\n                </li>\n                <li className='nav-item'>\n                  <Link to=\"/referral\" className='nav-link'>{t(\"Referral\")}</Link>\n                </li> */}\n              </ul>\n              <div className='others-option'>\n                <div className='d-flex align-items-center'>\n                  <div className='option-item'>\n                    <LangSelector currentLang={currentLanguage.code} langs={languageList} setLang={setLanguage} />\n                  </div>\n                  <div className='option-item'>\n                    <ConnectNetworkButton chainId={chainId} switchNetwork={switchNetwork} />\n                  </div>\n                  <div className='option-item' style={{ marginLeft: '10px' }}>\n                    {!account ? <ConnectWalletButton style={{ whiteSpace: 'nowrap' }} /> : <AccountWalletButton account={account} />}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\n\nconst FooterPanel = styled.div`\n  width: 100%;\n  display: flex;\n  background-color: black;\n  color: white;\n  flex-direction: row;\n  flex-wrap: wrap;\n  flex-flow: nowrap;\n  padding-top: 30px;\n  padding-bottom: 30px;\n  column-gap: 100px;\n`\n\nconst Label = styled.div`\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 0em;\n  text-align: center;\n`\n\nconst CopyrightLabel = styled.div`\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 18px;\n  letter-spacing: 0em;\n  text-align: center;\n  padding-top: 5px;\n`\n\nconst LeftArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst RightArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 20;\n`\n\nconst SocialPanel = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-top: 10px;\n  justify-content: center;\n  column-gap: 25px;\n`\n\nconst MenuPanel = styled.div`\n  display: flex;\n  flex-direction: row;\n  color: white;\n  column-gap: 100px;\n  font-size: 16px;\n`\n\nconst DescriptionPanel = styled.div`\n  display: flex;\n  color: white;\n  padding-top: 45px;\n  font-weight: 500;\n`\n\nconst Background = styled.div`\n  background-color: black;\n`\n\nconst StyledNavLink = styled(Link)`\n  text-decoration : none;\n  color : white;\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <Background className=\"footer-layout\">\n      <div className=\"container\">\n        <FooterPanel className=\"footer-panel\">\n          <LeftArea className=\"left-area\">\n            <img width={85} src=\"/logo-white.png\" alt=\"logo\" />\n            <CopyrightLabel>&copy; MUSASHI {currentYear}</CopyrightLabel>\n            <SocialPanel>\n              <a className=\"text-white\" href=\"https://facebook.com\" target=\"_BLANK\" rel=\"noopener noreferrer\">\n                <i className=\"bx bxl-facebook\" />\n              </a>\n              <a className=\"text-white\" href=\"https://twitter.com\" target=\"_BLANK\" rel=\"noopener noreferrer\">\n                <i className=\"bx bxl-twitter\" />\n              </a>\n            </SocialPanel>\n          </LeftArea>\n\n          <RightArea>\n            <MenuPanel className=\"menu-panel\">\n              <Link to=\"/pot\" className=\"footer-nav-text\">{t(\"POT\")}</Link>\n              <Link to=\"/pools\" className=\"footer-nav-text\">{t(\"POOL\")}</Link>\n              {/* <Link to=\"/bridge\" className=\"footer-nav-text\">{t(\"BRIDGE\")}</Link>\n              <Link to=\"/zap\" className=\"footer-nav-text\">{t(\"ZAP\")}</Link>\n              <Link to=\"/referral\" className=\"footer-nav-text\">{t(\"REFERRAL\")}</Link> */}\n            </MenuPanel>\n\n            <DescriptionPanel>\n              {t(\"Musashi Finance envisions to implement the Musashi Miyamoto philosophy in the decentralized blockchain world, planning to become one of the famous yield aggregator platform that providing most effective yield farming return to user that wish to contribute liquidity to the decentralized finance industries.\")}\n            </DescriptionPanel>\n          </RightArea>\n        </FooterPanel>\n      </div>\n    </Background>\n  );\n}\n\nexport default Footer\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <img src='/images/loading.gif' alt='logo' />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\n// max-width: 690px; at line 34\n// box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15) at line 30, 43\nexport const StyledRightCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  border-radius: 5px;\n  background: transparent;\n  box-shadow: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin: 0 8px 24px;\n    display: flex;\n    flex-direction: column;\n    align-self: baseline;\n    position: relative;\n    color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n    border-radius: 5px;\n    background: transparent;\n    box-shadow: none;\n  }\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 15px 12px 16px;\n  }\n`\n\nexport const StyledRightCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledRightCard\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { useTranslation } from 'contexts/Localization'\n\ntype Time = {\n  days   : number,\n  hours  : number,\n  minutes: number,\n  seconds: number\n};\n\nconst Wrapper = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\nconst MobileWrapper = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst CountdownTimer: React.FC<Time> = ({ days, hours, minutes, seconds }) => {\n    // const secStr = zeroPad(seconds)\n    // const secArr = b.split(\"\");\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <div className='tokens-area pb-50'>\n        <div className='container'>\n          <div className='row justify-content-center align-items-center'>\n              <Wrapper className='tokens-content'>\n                <div id='countdown'>\n                  <ul>\n                    <li>\n                      <span id='days' className=\"text-white pot-detail-countdown\">{days}</span><div className=\"text-white text-size-25px\"><strong>{t(\"DAYS\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='hours' className=\"text-white pot-detail-countdown\">{hours}</span><div className=\"text-white text-size-25px\"><strong>{t(\"HR\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='minutes' className=\"text-white pot-detail-countdown\">{minutes}</span><div className=\"text-white text-size-25px\"><strong>{t(\"MIN\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='seconds' className=\"text-white pot-detail-countdown\">{zeroPad(seconds)}</span><div className=\"text-white text-size-25px\"><strong>{t(\"SEC\")}</strong></div>\n                    </li>\n                  </ul>\n                </div>\n              </Wrapper>\n              <MobileWrapper className='mobile-pot-detail-countdown-content'>\n                <div id='countdown'>\n                  <ul>\n                    <li>\n                      <span id='days' className=\"text-white pot-detail-countdown\">{days}</span><div className=\"text-white text-size-17px\"><strong>{t(\"DAYS\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='hours' className=\"text-white pot-detail-countdown\">{hours}</span><div className=\"text-white text-size-17px\"><strong>{t(\"HR\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='minutes' className=\"text-white pot-detail-countdown\">{minutes}</span><div className=\"text-white text-size-17px\"><strong>{t(\"MIN\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='seconds' className=\"text-white pot-detail-countdown\">{zeroPad(seconds)}</span><div className=\"text-white text-size-17px\"><strong>{t(\"SEC\")}</strong></div>\n                    </li>\n                  </ul>\n                </div>\n              </MobileWrapper>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CountdownTimer;\n","import React, { useRef } from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { Token, PotConfig } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport Countdown from 'react-countdown'\nimport CountdownTimer from './CountdownTimer'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  // margin: auto;\n  padding: 10px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 0px;\n  }\n`\n\nconst StyledRightCardHeader: React.FC<{\n  // earningToken: Token\n  // stakingToken: Token\n  // isAutoVault?: boolean\n  // isFinished?: boolean\n  // isStaking?: boolean\n\n  end\n  onLockButtonChange\n  isEnded\n  onIsEndedChange\n  restartCounter\n  isDefault ?: boolean\n}> = ({ end, onLockButtonChange, isEnded, onIsEndedChange, restartCounter, isDefault = true }) => {\n  const { t } = useTranslation()\n  const background = isDefault ? 'bubblegum' : 'cardHeader'\n  const isFinished = false\n  // const getHeadingPrefix = () => {\n  //   if (isAutoVault) {\n  //     // vault\n  //     return t('Auto')\n  //   }\n  //   if (isCakePool) {\n  //     // manual cake\n  //     return t('Manual')\n  //   }\n  //   // all other pools\n  //   return t('Earn')\n  // }\n\n  // const getSubHeading = () => {\n  //   if (isAutoVault) {\n  //     return t('Automatic restaking')\n  //   }\n  //   if (isCakePool) {\n  //     return t('Earn CAKE, stake CAKE')\n  //   }\n  //   return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  // }\n\n  const handleLockButtonChange = () => {\n    onIsEndedChange(true)\n    onLockButtonChange(true)\n  }\n\n  const detailCountdownRef = useRef(null)\n  if (detailCountdownRef.current) {\n    // console.log((detailCountdownRef.current.isCompleted())? 'compl':'x compl')\n    // console.log((detailCountdownRef.current.isStopped())? 'stop':'x stop')\n    // console.log((detailCountdownRef.current.isStarted())? 'start':'x start')\n\n    const handleCountdownStart = () => detailCountdownRef.current.start()\n    if (restartCounter === true) {\n      if (detailCountdownRef.current.isStarted() === false && detailCountdownRef.current.isCompleted() === false) {\n        handleCountdownStart()\n        // console.log('potdetail run handleCountdownStart')\n      }\n    }\n    if (detailCountdownRef.current.isCompleted()) {\n      if (isEnded === false) {\n        onIsEndedChange(true)\n      }\n    } else if (detailCountdownRef.current.isStarted()) {\n      if (isEnded === true) {\n        onIsEndedChange(false)\n      }\n    }\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background} style={{ background: 'transparent', borderRadius: '5px' }}>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexDirection=\"column\">\n          <Countdown onComplete={() => {handleLockButtonChange()}} date={end} renderer={({ days, hours, minutes, seconds }) => <CountdownTimer\n            days={days}\n            hours={hours}\n            minutes={minutes}\n            seconds={seconds}\n          />} ref={detailCountdownRef} />\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledRightCardHeader","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\n// max-width: 690px; at line 34\n// box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15) at line 30, 43\nexport const DepositBannerStyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  border-radius: 5px;\n  background: transparent;\n  box-shadow: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin: 0 8px 24px;\n    display: flex;\n    flex-direction: column;\n    align-self: baseline;\n    position: relative;\n    color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n    border-radius: 5px;\n    background: transparent;\n    box-shadow: none;\n  }\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 15px 12px 16px;\n  }\n`\n\nexport const DepositBannerStyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n  min-width: 287px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 480px;\n  }\n`\n\nexport default DepositBannerStyledCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useUserDepositedBalance = (potAddress: string, account: string) => {\n  const jackpotContract = useJackpotContract(potAddress)\n\n  const handleUserDepositedBalance = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const result = await jackpotContract.player(account)\n      // const receipt = await tx.wait()\n      return result.deposit\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return false\n    }\n  }, [jackpotContract, account])\n\n  return { onUserDepositedBalance: handleUserDepositedBalance }\n}\n\n// uint deposit;\n// uint deposit_timestamp;\n// uint last_claim_block;\n// uint reward_debt;","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: 660000,\n}\n\nexport const depositPot = async (jackpotContract, amount) => {\n  // const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  // if (pid === 0) {\n  //   const tx = await masterChefContract.enterStaking(value, options)\n  //   const receipt = await tx.wait()\n  //   return receipt.status\n  // }\n  const tx = await jackpotContract.deposit(amount)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n// depositAndSetUpline\nexport const depositPotUpline = async (jackpotContract, amount, address) => {\n  // const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  // if (pid === 0) {\n  //   const tx = await masterChefContract.enterStaking(value, options)\n  //   const receipt = await tx.wait()\n  //   return receipt.status\n  // }\n  const tx = await jackpotContract.depositAndSetUpline(amount, address)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const withdrawPot = async (jackpotContract, amount) => {\n  // const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  // if (pid === 0) {\n  //   const tx = await masterChefContract.leaveStaking(value, options)\n  //   const receipt = await tx.wait()\n  //   return receipt.status\n  // }\n\n  const tx = await jackpotContract.withdraw(amount)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const claimPot = async (jackpotContract) => {\n  const tx = await jackpotContract.claim()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n// export const harvestFarm = async (masterChefContract, pid) => {\n//   if (pid === 0) {\n//     const tx = await await masterChefContract.leaveStaking('0', options)\n//     const receipt = await tx.wait()\n//     return receipt.status\n//   }\n\n//   const tx = await masterChefContract.deposit(pid, '0', options)\n//   const receipt = await tx.wait()\n//   return receipt.status\n// }\n","import { useCallback } from 'react'\nimport { depositPot } from 'utils/calls'\nimport { useMasterchef, useJackpotContractSigned } from 'hooks/useContract'\nimport BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst useDepositPots = (potAddress: string, decimals) => {\n  // const masterChefContract = useMasterchef()\n  const jackpotContract = useJackpotContractSigned(potAddress)\n\n  // new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString()\n  const handleDeposit = useCallback(\n    async (amount: string) => {\n      const txHash = await depositPot(jackpotContract, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n      console.info(txHash)\n      return txHash\n    },\n    [decimals, jackpotContract],\n  )\n\n  return { onDeposit: handleDeposit }\n}\n\nexport default useDepositPots\n","import { useCallback } from 'react'\nimport { withdrawPot } from 'utils/calls'\nimport { useMasterchef, useJackpotContractSigned } from 'hooks/useContract'\nimport BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst useWithdrawPots = (potAddress: string, decimals) => {\n  // const masterChefContract = useMasterchef()\n  const jackpotContract = useJackpotContractSigned(potAddress)\n\n  const handleWithdraw = useCallback(\n    async (amount: string) => {\n      const txHash = await withdrawPot(jackpotContract, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n      console.info(txHash)\n      return txHash\n    },\n    [decimals, jackpotContract],\n  )\n\n  return { onWithdraw: handleWithdraw }\n}\n\nexport default useWithdrawPots\n","import { useCallback } from 'react'\nimport { claimPot } from 'utils/calls'\nimport { useMasterchef, useJackpotContractSigned } from 'hooks/useContract'\n// import BigNumber from 'bignumber.js'\n// import { BIG_TEN } from 'utils/bigNumber'\n\nconst useClaimPots = (potAddress: string) => {\n  // const masterChefContract = useMasterchef()\n  const jackpotContract = useJackpotContractSigned(potAddress)\n\n  const handleClaim = useCallback(\n    async () => {\n      const txHash = await claimPot(jackpotContract)\n      console.info(txHash)\n      return txHash\n    },\n    [jackpotContract],\n  )\n\n  return { onClaim: handleClaim }\n}\n\nexport default useClaimPots\n","import { useCallback } from 'react'\nimport { depositPotUpline } from 'utils/calls'\nimport { useMasterchef, useJackpotContractSigned } from 'hooks/useContract'\nimport BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst useUplineDepositPots = (potAddress: string, decimals) => {\n  // const masterChefContract = useMasterchef()\n  const jackpotContract = useJackpotContractSigned(potAddress)\n\n  // new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString()\n  const handleUplineDeposit = useCallback(\n    async (amount: string, address: string) => {\n      const txHash = await depositPotUpline(jackpotContract, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), address)\n      console.info(txHash)\n      return txHash\n    },\n    [decimals, jackpotContract],\n  )\n\n  return { onUplineDeposit: handleUplineDeposit }\n}\n\nexport default useUplineDepositPots\n","import React, { useState, useEffect } from 'react';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { useTranslation } from 'contexts/Localization'\n\ntype Time = {\n  hours  : string,\n  minutes: string,\n  seconds: string\n};\n\nconst CountdownTimer: React.FC<Time> = ({ hours, minutes, seconds }) => {\n    // const secStr = zeroPad(seconds)\n    // const secArr = b.split(\"\");\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <div className='tokens-area pb-50'>\n        <div className='container'>\n          <div className='row justify-content-center align-items-center'>\n              <div className='penalty-content'>\n                <div id='countdown'>\n                  <ul>\n                    \n                    <li>\n                      <span id='hours' className=\"text-white pot-detail-countdown\">{hours}</span><div className=\"text-white\"><strong>{t(\"HR\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='minutes' className=\"text-white pot-detail-countdown\">{minutes}</span><div className=\"text-white\"><strong>{t(\"MIN\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='seconds' className=\"text-white pot-detail-countdown\">{zeroPad(seconds)}</span><div className=\"text-white\"><strong>{t(\"SEC\")}</strong></div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CountdownTimer;\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport Countdown from 'react-countdown'\nimport useRefresh from 'hooks/useRefresh'\nimport { Card, CardBody, Flex, Text, CardRibbon, CardHeader, Heading, CardFooter, Box, Button, Input, MetamaskIcon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { registerToken } from 'utils/wallet'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getFullDisplayBalanceFull } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport tokens from 'config/constants/tokens'\nimport { PotConfig } from '../../../config/constants/types'\nimport Column, { AutoColumn } from '../../../components/Layout/Column'\nimport { AutoRow, RowBetween } from '../../../components/Layout/Row'\nimport { StyledRightCard, StyledRightCardInner } from './TimerCard/StyledRightCard'\nimport StyledRightCardHeader from './TimerCard/StyledRightCardHeader'\nimport { DepositBannerStyledCard, DepositBannerStyledCardInner } from './DepositBannerStyledCard'\nimport { Input as NumericalInput } from '../../../components/CurrencyInputPanel/NumericalInput'\nimport { useMasterchefSpecial, useERC20 } from \"../../../hooks/useContract\";\nimport { useUserBalance } from \"../hooks/useUserBalance\"\nimport { useUserDepositedBalance } from \"../hooks/useUserDepositedBalance\"\nimport { useApprovePot } from \"../hooks/useApprove\"\nimport { useCheckApprovePot } from \"../hooks/useCheckApprove\"\nimport useDepositPots from \"../hooks/useDepositPots\"\nimport useWithdrawPots from \"../hooks/useWithdrawPots\"\nimport useToast from \"../../../hooks/useToast\"\nimport { useUserReferral } from \"../hooks/useUserReferral\"\nimport { useUserClaimable } from \"../hooks/useUserClaimable\"\nimport useClaimPots from \"../hooks/useClaimPots\"\nimport { useUserContractReferral } from \"../hooks/useUserContractReferral\"\nimport useUplineDepositPots from \"../hooks/useDepositPotsUpline\"\nimport { useUserWithdrawPenalty } from \"../hooks/useUserWithdrawPenalty\"\nimport CountdownTimer from './PenaltyTimer/CountdownTimer'\n\n// import CardActions from './CardActions'\n\nconst CardsWrapper = styled.div<{ singleCard: boolean }>`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-bottom: 32px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ singleCard }) => (singleCard ? '1fr' : '1fr 1fr')};\n    justify-items: ${({ singleCard }) => (singleCard ? 'center' : 'unset')};\n  }\n`\n\nconst Wrapper = styled(CardHeader) <{ isFinished?: boolean; background?: string }>`\n  background: transparent;\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  z-index: 1;\n  margin-bottom: -240px;\n`\nconst PotDepositHeading = styled(Heading).attrs({ as: 'h3' })`\n  font-size: 25px;\n  text-align: center;\n  color: #FFFFFF;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\n\nconst PotPrizeHeading = styled(Heading).attrs({ as: 'h1' })`\n  font-size: 25px;\n  text-align: center;\n  color: #910101;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\nconst PotPrizeHeadingText = styled(Text)`\n  font-size: 16px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 18px;\n  }\n`\n\nconst CardAutoColumn = styled(AutoColumn)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst DepositButton = styled(Button)`\n  background-color: #000000;\n  border-radius: 5px;\n  font-size: 25px;\n`\n\nconst TotalDepositText = styled(Text)`\n  font-size: 25px;\n  color: #FFFFFF;\n  font-weight: bold;\n`\nconst UserBalanceText = styled(Text)`\n  font-size: 16px;\n  color: #FFFFFF;\n  font-weight: bold;\n`\n\nconst DepositAmountInput = styled(Input).attrs({\n  placeholderTextColor: \"#000000\"\n})`\n  text-align: center;\n  color: #98A1B9;\n  box-shadow: none;\n  background: #FFFFFF;\n  width: 100%;\n  padding-left: 3rem;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 1px #910101, 0px 0px 0px 4px rgb(145 1 1 / 60%) !important;\n  }\n\n  ::placeholder {\n    color: #910101;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 80%;\n  }\n`\nconst DepositWithdrawInputGroup = styled.div`\n  max-width: 432px;\n`\n\nconst DepositWithdrawalBtnGroup = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n`\nconst DepositWithdrawalBtn = styled(Button)`\n  background: none;\n  border-radius: 5px;\n  font-size: 16px;\n  color: #FFFFFF;\n  box-shadow: none;\n  font-weight: bold;\n  padding: 0 2px 0 2px;\n  word-break: keep-all;\n`\nconst BackBtn = styled(Button)`\n  background: none;\n  border-radius: 5px;\n  font-size: 20px;\n  color: #FFFFFF;\n  box-shadow: none;\n  font-weight: bold;\n  padding: 0 2px 0 2px;\n`\nconst ClaimBox = styled(Box)`\n  min-height: 108.8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst VerticalDivider = styled.div`\n  border-left: 3px solid white;\n  margin: 10px 25px;\n  height: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 70px;\n  }\n`\nconst PrizeTotalDepositFlex = styled(Flex)`\n  flex-direction: row;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\nconst PrizeTotalDepositItemFlex = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\nconst PrizeTotalDepositImg = styled.img`\n  max-width: 50%;\n  min-width: 70.81px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 100%;\n  }\n`\n\nconst MaxButton = styled(Button)`\n  // font-size: 25px;\n  color: #910101;\n  // position: absolute;\n  // top: 30%;\n  // right: -5%;\n  // transform: translate(-50%, -50%);\n\n  padding-left: 10px;\n  padding-right: 10px;\n  background: #F9F9F9;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 1px #910101, 0px 0px 0px 4px rgb(145 1 1 / 60%) !important;\n  }\n`\n// const MaxButtonWrapper = styled.div`\n//   position: absolute;\n//   right: 20px;\n//   // top: 30%;\n//   // right: -5%;\n//   // transform: translate(-50%, -50%);\n\n//   ${({ theme }) => theme.mediaQueries.md} {\n//     right: 70px;\n//   }\n// `\n\nconst PotDepositBanner: React.FC<{ pot: PotConfig; potData; account: string; potPrizeTotalDepositData }> = ({ pot, potData, account, potPrizeTotalDepositData }) => {\n  // const [userInfo, setUserInfo] = useState('')\n  // const [cakeInfo, setCakeInfo] = useState('')\n  const { potAddress = \"\", stakingToken = undefined, earningToken = undefined } = { ...pot }\n  // let {totalDeposit} = potData\n  const { sessionId } = potData\n  const sessionIdStr = (sessionId) ? new BigNumber(sessionId.toString()).plus(10000).toString() : \"\"\n\n  const tokenInit = {\n    symbol: \"\",\n    address: \"\",\n    decimals: 0\n  }\n  const stakingTokenSymbolDecimal = stakingToken || tokenInit\n  const earningTokenSymbolDecimal = earningToken || tokenInit\n\n  const { userInfoData, cakeInfoData, potTotalDepositData, potTotalRewardData } = potPrizeTotalDepositData\n  const userInfo = userInfoData\n  const cakeInfo = cakeInfoData\n  const potTotalDeposit = potTotalDepositData\n  const potTotalReward = potTotalRewardData\n\n  const { t } = useTranslation()\n  let totalDepositFormatted = t(\"Loading...\")\n  let totalReward = t(\"Loading...\")\n  let { end } = potData\n  let userBalanceFormatted = t(\"Loading...\")\n  let userDepositedBalanceFormatted = t(\"Loading...\")\n  let restartCounter = false\n  let endDateStr = ''\n  // const [restartCounter, setrestartCounter] = useState(false)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  // const earningTokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const stakingTokenAddress = stakingToken && stakingToken.address ? getAddress(stakingToken.address) : ''\n  const earningTokenAddress = earningToken && earningToken.address ? getAddress(earningToken.address) : ''\n\n\n  if (!end) {\n    end = Date.now()\n  } else {\n    end = end.toNumber() * 1000\n    restartCounter = true\n    endDateStr = new Date(end).toLocaleString()\n    // if (restartCounter === false) {\n    //   setrestartCounter(true)\n    // }\n    // console.log({end})\n  }\n\n  const { fastRefresh } = useRefresh()\n  const { slowRefresh } = useRefresh()\n\n  const { toastSuccess, toastError } = useToast()\n  const tokenContract = useERC20(stakingTokenAddress)\n  const { onUserBalance: handleUserBalance } = useUserBalance(tokenContract, account)\n  const { onUserDepositedBalance: handleUserDepositedBalance } = useUserDepositedBalance(potAddress, account)\n  const { onApprove: handleApprove } = useApprovePot(tokenContract, potAddress)\n  const { onCheckApprove: handleCheckApprove } = useCheckApprovePot(tokenContract, potAddress, account)\n  const { onDeposit: handleDeposit } = useDepositPots(potAddress, stakingTokenSymbolDecimal.decimals)\n  const { onWithdraw: handleWithdraw } = useWithdrawPots(potAddress, stakingTokenSymbolDecimal.decimals)\n  const { onUserReferral: handleUserReferral } = useUserReferral(account)\n  const { onUserClaimable: handleUserClaimable } = useUserClaimable(potAddress)\n  const { onClaim: handleClaim } = useClaimPots(potAddress)\n  const { onUserContractReferral: handleUserContractReferral } = useUserContractReferral()\n  const { onUplineDeposit: handleUplineDeposit } = useUplineDepositPots(potAddress, stakingTokenSymbolDecimal.decimals)\n  const { onUserWithdrawPenalty: handleUserWithdrawPenalty } = useUserWithdrawPenalty(potAddress, account)\n\n  // let allowance\n  // const checkAllowance = async () => {\n  //   const result = await tokenContract.allowance(account, potAddress)\n  //   allowance = new BigNumber(result.toString())\n  //   console.log(`ALLOWANCE: ${allowance}`)\n  //   alert(allowance)\n  // }\n\n  const accountRef = useRef(account)\n  const [userBalance, setUserBalance] = useState(new BigNumber(\"0\"))\n  const [UserDepositedBalance, setUserDepositedBalance] = useState(new BigNumber(\"0\"))\n  const [amount, setAmount] = useState(\"\")\n  const [allowance, setAllowance] = useState(new BigNumber(\"0\"))\n  const allowanceRef = useRef(allowance)\n  const [depositOrWithdraw, setDepositOrWithdraw] = useState(\"deposit\")\n  const [lockButton, setLockButton] = useState(false)\n  const [inAction, setInAction] = useState(false)\n  const [isEnded, setIsEnded] = useState(false)\n  const [isApproved, setIsApproved] = useState(() => {\n    // checkAllowance()\n    // return account && allowance && allowance.isGreaterThan(0)\n    return false\n  });\n  const isApprovedRef = useRef(isApproved)\n  const [claimable, setClaimable] = useState(new BigNumber(\"0\"))\n  const [refAddress, setRefAddress] = useState(null)\n  const [isSetUpline, setIsSetUpline] = useState(false)\n  const [penaltyInfo, setPenaltyInfo] = useState<[boolean, BigNumber, BigNumber]>([false, new BigNumber(Date.now()), new BigNumber(\"0\")])  // [has_penalty, penalty_until, penalty_rate]\n\n  const handleLockButtonChange = (lock: boolean) => {\n    setLockButton(lock)\n  }\n\n  const handleIsEndedChange = (ended: boolean) => {\n    setIsEnded(ended)\n  }\n\n  // const baseUrl = `${process.env.REACT_APP_MUSASHIBO_LINK}/api/referral/get-referral-code`\n  useEffect(() => {\n    const getReferral = async () => {\n      const result = await handleUserReferral()\n      // console.log({result})\n      if (result) {\n        const refAdd = result.ref_address\n        setRefAddress(refAdd)\n        // console.log(`refAdd: ${refAdd}`)\n\n        // check if have assigned upline\n        if (refAddress && refAddress !== null) {\n          const uplineAdd = await handleUserContractReferral(account)\n          // console.log(uplineAdd)\n          if (uplineAdd !== \"0x0000000000000000000000000000000000000000\") {\n            setIsSetUpline(true)\n            // console.log('NOT USE UPLINE DEPOSIT')\n          } else {\n            setIsSetUpline(false)\n            // console.log('USE UPLINE DEPOSIT')\n          }\n        }\n      }\n    }\n    getReferral()\n\n    const getPenalty = async () => {\n      const result = await handleUserWithdrawPenalty()\n      if (result) {\n        // console.log(result)\n        // console.log(result[1])\n        // console.log(result[2])\n        // console.log(result[2].toString())\n        // console.log(BIG_TEN.pow(tokens.musashi.decimals))\n        // console.log(new BigNumber(result[1].toString()).toString())\n        // console.log(new BigNumber(result[2].toString()))\n        // console.log(new BigNumber(result[2].toString()).div(BIG_TEN.pow(tokens.musashi.decimals)).toString())\n        const milliTime = new BigNumber(result[1].toString()).toNumber() * 1000\n        let penaltyUntil\n        if ((milliTime) <= (Date.now())) {\n          // console.log(`${milliTime} < ${Date.now()}`)\n          penaltyUntil = new BigNumber(Date.now())\n        } else {\n          // console.log(`${milliTime} > ${Date.now()}`)\n          penaltyUntil = new BigNumber(milliTime.toString())\n          // console.log(penaltyUntil.toNumber())\n        }\n        setPenaltyInfo([result[0], penaltyUntil, new BigNumber(result[2].toString()).div(BIG_TEN.pow(tokens.musashi.decimals))])\n      }\n    }\n    getPenalty()\n  }, [account, handleUserContractReferral, handleUserReferral, handleUserWithdrawPenalty, refAddress])\n\n  useEffect(() => {\n    // console.log(\"To Top...\")\n    window.scrollTo(0, 0)\n  }, [])\n\n  useEffect(() => {\n    const checkApprove = async () => {\n      const result = await handleCheckApprove()\n      // if (result.isGreaterThan(0)) {\n      //   setAllowance(result)\n      // }\n      setAllowance(result)\n      allowanceRef.current = result\n      // console.log(`CHECK APPROVE FOR ACC: ${account}, allowance:${result.toString()}, is approved? ${account && allowanceRef.current && allowanceRef.current.isGreaterThan(0)}`)\n      // console.log(`IS APPROVED RESULT: account = ${account} && allowance = ${allowanceRef.current.toString()} && GT = ${allowanceRef.current.isGreaterThan(0)}`)\n      setIsApproved(account && allowanceRef.current && allowanceRef.current.isGreaterThan(0))\n      isApprovedRef.current = (account && allowanceRef.current && allowanceRef.current.isGreaterThan(0))\n    }\n\n    if (account) {\n      if (account !== accountRef.current) {\n        // console.log('SWITCHED ACC')\n        // console.log(`${account} vs ${accountRef.current}`)\n        setIsApproved(false)\n        isApprovedRef.current = false\n      }\n      accountRef.current = account\n      // console.log(`isapproved: ${isApproved}`)\n      if (isApprovedRef.current === false) {\n        // console.log(\"run another useeffect checkapprove\")\n        checkApprove()\n      }\n    } else {\n      // console.log(\"NO ACCOUNT!!!\")\n      setUserBalance(new BigNumber(\"0\"))\n      setIsApproved(false)\n      isApprovedRef.current = false\n    }\n  }, [account, handleCheckApprove])\n\n  const pancakeChef = useMasterchefSpecial()\n\n  useEffect(() => {\n    const getBalance = async () => {\n      const result = await handleUserBalance()\n      const resultBN = new BigNumber(result.toString())\n      if (resultBN.isNaN() === false) {\n        setUserBalance(resultBN)\n      }\n      // console.log(`result: ${result}`)\n    }\n\n    const getUserDepositedBalance = async () => {\n      const result = await handleUserDepositedBalance()\n      const resultBN = new BigNumber(result.toString())\n      if (resultBN.isNaN() === false) {\n        setUserDepositedBalance(resultBN)\n      }\n      // console.log(`result: ${result}`)\n    }\n\n    const getUserClaimable = async () => {\n      const result = await handleUserClaimable()\n      setClaimable(new BigNumber(result.toString()))\n    }\n\n    const getData = async () => {\n      if (account) {\n        getBalance()\n        getUserDepositedBalance()\n        getUserClaimable()\n      }\n    }\n    getData()\n    // const intervalId = setInterval(() => {\n    //   // console.log('RUN interval')\n    //   getData();\n    // }, 10000);\n    // return () => clearInterval(intervalId);\n  }, [account, handleUserBalance, handleUserDepositedBalance, pancakeChef, potAddress, fastRefresh, handleUserClaimable])\n\n  // if (totalDeposit && cakeInfo && userInfo)\n  // {\n  //   totalDeposit = new BigNumber(totalDeposit.toString())\n  //   totalDepositFormatted = getFullDisplayBalance(totalDeposit, 18, 4)\n  //   const totalDepositedStake = new BigNumber(userInfo.toString())\n  //   const reward = new BigNumber(cakeInfo.toString())\n  //   const result = totalDepositedStake.minus(totalDeposit).plus(reward)\n  //   if (result.isPositive()) {\n  //     totalReward = getFullDisplayBalance(result,18,4)\n  //   }\n  // }\n\n  if (potTotalDeposit && cakeInfo && userInfo) {\n    totalDepositFormatted = getFullDisplayBalance(potTotalDeposit, 18, 4)\n\n    if (potTotalReward.isPositive() && potTotalReward.isNaN() === false) {\n      totalReward = getFullDisplayBalance(potTotalReward, 18, 4)\n    }\n  }\n\n  userBalanceFormatted = getFullDisplayBalanceFull(userBalance, 18, 4)\n  userDepositedBalanceFormatted = getFullDisplayBalanceFull(UserDepositedBalance, 18, 4)\n  // console.log(`isEnded: ${isEnded}, isApprove: ${isApproved}`)\n  if (isEnded === true && isApproved === true && depositOrWithdraw === \"deposit\") {\n    if (lockButton === false) {\n      setLockButton(true)\n      // console.log(`pot ended`)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"withdraw\" && UserDepositedBalance.isLessThanOrEqualTo(new BigNumber(\"0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n      // console.log(`lock withdraw`)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"deposit\" && userBalance.isLessThanOrEqualTo(new BigNumber(\"0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"deposit\" && new BigNumber(amount).isNaN()) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"deposit\" && new BigNumber(amount).isLessThan(new BigNumber(\"10.0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"claim\" && claimable.isLessThanOrEqualTo(new BigNumber(\"0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (inAction === false && lockButton === true) {\n    setLockButton(false)\n  }\n\n  // const allowance = new BigNumber(allowanceAsString)\n  // const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      // <StakeAction\n      //   stakedBalance={stakedBalance}\n      //   tokenBalance={tokenBalance}\n      //   tokenName={farm.lpSymbol}\n      //   pid={pid}\n      //   addLiquidityUrl={addLiquidityUrl}\n      // />\n      depositOrWithdraw === \"deposit\" ?\n        <DepositButton mt=\"8px\" width=\"100%\" disabled={lockButton} onClick={onClickDeposit}>\n          {t(`DEPOSIT`)}\n        </DepositButton>\n        :\n        depositOrWithdraw === \"withdraw\" ?\n          <DepositButton mt=\"8px\" width=\"100%\" maxWidth=\"432px\" disabled={lockButton} onClick={onClickWithdraw}>\n            {t(`WITHDRAW`)}\n          </DepositButton>\n          :\n          <DepositButton mt=\"8px\" width=\"100%\" disabled={lockButton} onClick={onClickClaim}>\n            {t(`CLAIM`)}\n          </DepositButton>\n\n      // depositOrWithdraw === \"deposit\"? t(`DEPOSIT ${stakingToken.symbol}`) : t(`WITHDRAW ${stakingToken.symbol}`)\n    ) : (\n      <DepositButton mt=\"8px\" width=\"100%\" disabled={lockButton} onClick={onClickApprove}>\n        {t('Approve')}\n      </DepositButton>\n    )\n  }\n\n  // const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  // const accountHasStakedBalance = stakedBalance.gt(0)\n\n  const onClickApprove = async () => {\n    setInAction(true)\n    setLockButton(true)\n    try {\n      const status = await handleApprove()\n      if (status) {\n        toastSuccess(\n          t(`Approve Success`),\n          t(`Your wallet has been approved successfully`),\n        )\n        setIsApproved(true)\n      } else {\n        toastError(\n          t(`Approve Failed`),\n          t(`Wallet approval failed, please try again`)\n        )\n        setIsApproved(false)\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const onClickDeposit = async () => {\n    const setToast = (status: boolean) => {\n      if (status) {\n        toastSuccess(\n          t(`Deposit Success`),\n          t(`Deposited successfully`),\n        )\n      } else {\n        toastError(\n          t(`Deposit Failed`),\n          t(`Deposit failed, please try again`)\n        )\n      }\n    }\n    setInAction(true)\n    setLockButton(true)\n    try {\n      if (isEnded === true) {\n        toastError(\n          t(`Deposit Failed`),\n          t(`The pot is closed now`)\n        )\n      } else if (refAddress && refAddress !== null) {\n        // console.log(`Has refAddress:${refAddress}`)\n        if (isSetUpline === true) {\n          // console.log(\"True isSetUpline -> handleDeposit\")\n          const status = await handleDeposit(amount)\n          setToast(status)\n        } else {\n          // console.log(\"False isSetUpline -> handleUplineDeposit\")\n          const status = await handleUplineDeposit(amount, refAddress)\n          setToast(status)\n        }\n      } else {\n        // console.log(`No refAddress:${refAddress}  -> handleDeposit`)\n        const status = await handleDeposit(amount)\n        setToast(status)\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const onClickWithdraw = async () => {\n    setInAction(true)\n    setLockButton(true)\n    try {\n      const status = await handleWithdraw(amount)\n      if (status) {\n        toastSuccess(\n          t(`Withdraw Success`),\n          t(`Withdraw successfully`),\n        )\n      } else {\n        toastError(\n          t(`Withdraw Failed`),\n          t(`Withdraw failed, please try again`)\n        )\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const onClickClaim = async () => {\n    setInAction(true)\n    setLockButton(true)\n    try {\n      const status = await handleClaim()\n      if (status) {\n        toastSuccess(\n          t(`Claim Success`),\n          t(`Claim successfully`),\n        )\n      } else {\n        toastError(\n          t(`Claim Failed`),\n          t(`Claim failed, please try again`)\n        )\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const setMaxValue = () => {\n    if (depositOrWithdraw === 'deposit') {\n      setAmount(userBalanceFormatted)\n    } else\n      if (depositOrWithdraw === 'withdraw') {\n        setAmount(userDepositedBalanceFormatted)\n      }\n  }\n\n  const withdrawPenaltyCountdownRef = useRef(null)\n  const handleWithdrawPenaltyCountdownStart = () => withdrawPenaltyCountdownRef.current.start()\n  if (withdrawPenaltyCountdownRef.current) {\n    // console.log((withdrawPenaltyCountdownRef.current.isCompleted())? 'compl':'x compl')\n    // console.log((withdrawPenaltyCountdownRef.current.isStopped())? 'stop':'x stop')\n    // console.log((withdrawPenaltyCountdownRef.current.isStarted())? 'start':'x start')\n\n    // const handleCountdownStart = () => withdrawPenaltyCountdownRef.current.start()\n    if (withdrawPenaltyCountdownRef.current.isStarted() === false && withdrawPenaltyCountdownRef.current.isCompleted() === false) {\n      handleWithdrawPenaltyCountdownStart()\n    }\n  }\n\n  return (\n    <AutoRow justify='center' style={{ padding: '20px 2rem', background: 'url(/images/deposit-banner.png?v=1)' }}>\n      <AutoRow>\n        <CardAutoColumn justify=\"space-between\">\n          <DepositWithdrawalBtnGroup>\n            <Link to=\"/pot\">\n              <BackBtn width=\"100%\">\n                <img src=\"/images/back-vector.png\" alt=\"\" />\n                <span style={{ width: '5px' }} />\n                {t(`BACK`)}\n              </BackBtn>\n            </Link>\n          </DepositWithdrawalBtnGroup>\n          <CardBody p=\"0px 24px 0px 24px\">\n            <PrizeTotalDepositFlex mt=\"13px\">\n              <PrizeTotalDepositItemFlex>\n                <PrizeTotalDepositImg src=\"/images/pot-detail-prize-icon.png\" alt=\"prize-icon\" />\n                <Flex flexDirection=\"column\" justifyContent=\"center\">\n                  <PotPrizeHeading color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <PotPrizeHeadingText color=\"#FFFFFF\" textAlign={['center', null, null, 'center']} fontWeight=\"bold\" >{t(\"PRIZE\")}</PotPrizeHeadingText>\n                  </PotPrizeHeading>\n                  <PotPrizeHeading color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <Text color=\"#FFFFFF\" fontSize=\"25px\" textAlign={['center', null, null, 'left']} fontWeight=\"bold\" >{t(`${totalReward} ${stakingTokenSymbolDecimal.symbol}`)}</Text>\n                  </PotPrizeHeading>\n                </Flex>\n              </PrizeTotalDepositItemFlex>\n              <VerticalDivider />\n              <PrizeTotalDepositItemFlex>\n                <PrizeTotalDepositImg src=\"/images/pot-detail-deposit-icon.png\" alt=\"deposit-icon\" />\n                <Flex flexDirection=\"column\" justifyContent=\"center\">\n                  <PotPrizeHeading color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <PotPrizeHeadingText color=\"#FFFFFF\" textAlign={['center', null, null, 'center']} fontWeight=\"bold\" >{t(\"TOTAL DEPOSIT\")}</PotPrizeHeadingText>\n                  </PotPrizeHeading>\n                  <PotPrizeHeading color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <Text color=\"#FFFFFF\" fontSize=\"25px\" textAlign={['center', null, null, 'left']} fontWeight=\"bold\" >{t(`${totalDepositFormatted} ${stakingTokenSymbolDecimal.symbol}`)}</Text>\n                  </PotPrizeHeading>\n                </Flex>\n              </PrizeTotalDepositItemFlex>\n            </PrizeTotalDepositFlex>\n          </CardBody>\n          <Box style={{ margin: 'auto' }}>\n            <DepositWithdrawalBtnGroup>\n              <Box mt=\"1rem\" className=\"text-center\">\n                <DepositWithdrawalBtnGroup>\n                  <DepositWithdrawalBtn className={depositOrWithdraw === 'deposit' ? \"pot-action-selected\" : \"\"} width=\"100%\" onClick={() => setDepositOrWithdraw(\"deposit\")}>\n                    {t(`Deposit`)}\n                  </DepositWithdrawalBtn>\n                  <span style={{ width: '10px', color: '#FFFFFF', fontWeight: 'bold' }} >|</span>\n                  <DepositWithdrawalBtn className={depositOrWithdraw === 'withdraw' ? \"pot-action-selected\" : \"\"} width=\"100%\" onClick={() => setDepositOrWithdraw(\"withdraw\")}>\n                    {t(`Withdraw`)}\n                  </DepositWithdrawalBtn>\n                  <span style={{ width: '10px', color: '#FFFFFF', fontWeight: 'bold' }} >|</span>\n                  <DepositWithdrawalBtn className={depositOrWithdraw === 'claim' ? \"pot-action-selected\" : \"\"} width=\"100%\" onClick={() => setDepositOrWithdraw(\"claim\")}>\n                    {t(`Claim`)}\n                  </DepositWithdrawalBtn>\n                </DepositWithdrawalBtnGroup>\n              </Box>\n            </DepositWithdrawalBtnGroup>\n          </Box>\n        </CardAutoColumn>\n        <CardAutoColumn justify=\"space-between\">\n          <StyledRightCard\n          // isFinished={isFinished && potId !== 0}\n          // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n          >\n            <StyledRightCardInner style={{ background: 'transparent' }}>\n              <Flex alignItems=\"center\" justifyContent=\"center\">\n                <TotalDepositText>#{sessionIdStr}</TotalDepositText>\n              </Flex>\n              <StyledRightCardHeader\n                // pot={pot}\n                end={end}\n                onLockButtonChange={handleLockButtonChange}\n                isEnded={isEnded}\n                onIsEndedChange={handleIsEndedChange}\n                restartCounter={restartCounter}\n              // potId={potId}\n              // stakingToken={stakingToken}\n              // potLabel={potLabel}\n              // prizeAmount={prizeAmount}\n              // totalDeposit={totalDeposit}\n              // expiryDate={expiryDate}\n              // isFinished={isFinished && potId !== 0}\n              />\n            </StyledRightCardInner>\n            {endDateStr !== '' && <Flex alignItems=\"center\" justifyContent=\"center\">\n              <UserBalanceText>{t('Ends %date%', { date: endDateStr })}</UserBalanceText>\n            </Flex>}\n          </StyledRightCard>\n        </CardAutoColumn>\n      </AutoRow>\n      <AutoRow>\n        <CardAutoColumn justify=\"space-between\">\n          <DepositBannerStyledCard\n          // isFinished={isFinished && potId !== 0}\n          // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n          >\n            <DepositBannerStyledCardInner style={{ background: 'transparent' }}>\n              {depositOrWithdraw === \"deposit\" || depositOrWithdraw === \"withdraw\" ?\n                <CardBody p=\"24px 24px 0px 24px\">\n                  <Flex flexDirection=\"column\">\n                    <PotDepositHeading color='body' scale=\"lg\">\n                      {depositOrWithdraw === \"deposit\" ? t(`DEPOSIT`) : t(`WITHDRAW`)} {` ${stakingTokenSymbolDecimal.symbol}`}\n                    </PotDepositHeading>\n                  </Flex>\n                  <Flex justifyContent=\"center\" alignItems=\"center\">\n                    <DepositWithdrawInputGroup className=\"input-group mb-3\">\n                      <DepositAmountInput className=\"form-control\" type=\"text\" scale=\"lg\" placeholder={t(\"Enter Amount\")} value={amount} placeholderTextColor=\"red\" onChange={event => setAmount(event.target.value)} />\n                      <MaxButton className=\"btn\" variant=\"text\" id=\"button-addon2\" onClick={() => setMaxValue()}>{t(\"MAX\")}</MaxButton>\n                    </DepositWithdrawInputGroup>\n                  </Flex>\n                  <Box className=\"text-center\">\n                    <TotalDepositText>\n                      {t(`${userDepositedBalanceFormatted} ${stakingTokenSymbolDecimal.symbol}`)}\n                    </TotalDepositText>\n                    <UserBalanceText>\n                      {t(\"Balance\")}: {userBalanceFormatted} {stakingTokenSymbolDecimal.symbol}\n                    </UserBalanceText>\n                  </Box>\n                  <Box mt=\"1rem\" className=\"text-center\">\n                    {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n                    {/* {depositOrWithdraw === \"deposit\"?\n                    <DepositButton width=\"100%\" onClick={checkAllowance}>\n                      {t(`DEPOSIT`)}\n                    </DepositButton>\n                    :\n                    <DepositButton width=\"100%\">\n                      {t(`WITHDRAW`)}\n                    </DepositButton>\n                  } */}\n                    {/* {depositOrWithdraw === \"deposit\" && <Flex justifyContent=\"center\" flexDirection=\"column\" mt=\"1rem\">\n                    <UserBalanceText>{t(\"*Minimum 10 %tokenSymbol%\", { tokenSymbol: stakingTokenSymbolDecimal.symbol})}</UserBalanceText>\n                  </Flex>} */}\n                    {depositOrWithdraw === \"withdraw\" && <Flex justifyContent=\"center\" flexDirection=\"column\" mt=\"1rem\">\n                      <UserBalanceText>{t(\"Early withdrawal within 72 hours will need to incur %penaltyRate%% fee.\", { penaltyRate: penaltyInfo[2].toNumber() * 100 })}</UserBalanceText>\n                      {UserDepositedBalance.gt(new BigNumber(\"0\")) && <Countdown date={penaltyInfo[1].toNumber()} daysInHours ref={withdrawPenaltyCountdownRef} onComplete={handleWithdrawPenaltyCountdownStart} renderer={({ formatted: { hours, minutes, seconds } }) => <CountdownTimer\n                        hours={hours}\n                        minutes={minutes}\n                        seconds={seconds}\n                      />} />}\n                    </Flex>}\n                  </Box>\n                </CardBody>\n                :\n                <CardBody p=\"24px 24px 0px 24px\">\n                  <Flex flexDirection=\"column\">\n                    <PotDepositHeading color='body' scale=\"lg\">\n                      {t(`CLAIM`)}{` ${earningTokenSymbolDecimal.symbol}`}\n                    </PotDepositHeading>\n                  </Flex>\n                  <ClaimBox className=\"text-center\">\n                    <TotalDepositText>\n                      {t(`${getFullDisplayBalanceFull(claimable, 18, 4)} ${earningTokenSymbolDecimal.symbol}`)}\n                    </TotalDepositText>\n                  </ClaimBox>\n                  {account && isMetaMaskInScope && earningTokenAddress && (\n                    <Flex justifyContent=\"center\">\n                      <Button\n                        variant=\"text\"\n                        p=\"0\"\n                        height=\"auto\"\n                        onClick={() => registerToken(earningTokenAddress, earningTokenSymbolDecimal.symbol, earningTokenSymbolDecimal.decimals)}\n                      >\n                        <Text color=\"#FFFFFF\" fontSize=\"13px\">\n                          {t('Add %asset% to Metamask', { asset: earningTokenSymbolDecimal.symbol })}\n                        </Text>\n                        <MetamaskIcon ml=\"4px\" />\n                      </Button>\n                    </Flex>\n                  )}\n                  <Box mt=\"1rem\" className=\"text-center\">\n                    {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n                    {/* {depositOrWithdraw === \"deposit\"?\n                    <DepositButton width=\"100%\" onClick={checkAllowance}>\n                      {t(`DEPOSIT`)}\n                    </DepositButton>\n                    :\n                    <DepositButton width=\"100%\">\n                      {t(`WITHDRAW`)}\n                    </DepositButton>\n                  } */}\n                  </Box>\n                </CardBody>\n              }\n            </DepositBannerStyledCardInner>\n          </DepositBannerStyledCard>\n        </CardAutoColumn>\n      </AutoRow>\n    </AutoRow>\n  )\n}\n\n\nexport default PotDepositBanner\n\n\n// return (\n//   <CardsWrapper singleCard={false}>\n//         <StyledCard\n//           // isFinished={isFinished && potId !== 0}\n//           // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n//         >\n//           <StyledCardInner>\n//             <StyledCardHeader\n//               potId={potId}\n//               currency1={currency1}\n//               currency2={currency2}\n//               currency1Name={currency1Name}\n//               currency2Name={currency2Name}\n//               prizeAmount={prizeAmount}\n//               totalDeposit={totalDeposit}\n//               expiryDate={expiryDate}\n//               // isFinished={isFinished && potId !== 0}\n//             />\n//             <CardBody>\n//               <Flex mt=\"24px\" flexDirection=\"column\">\n//                 TODO\n//               </Flex>\n//             </CardBody>\n//             <CardFooter pot={pot} account={account} />\n//           </StyledCardInner>\n//         </StyledCard>\n//         <StyledCard\n//           // isFinished={isFinished && potId !== 0}\n//           // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n//         >\n//           <StyledCardInner>\n//             <StyledCardHeader\n//               potId={potId}\n//               currency1={currency1}\n//               currency2={currency2}\n//               currency1Name={currency1Name}\n//               currency2Name={currency2Name}\n//               prizeAmount={prizeAmount}\n//               totalDeposit={totalDeposit}\n//               expiryDate={expiryDate}\n//               // isFinished={isFinished && potId !== 0}\n//             />\n//             <CardBody>\n//               <Flex mt=\"24px\" flexDirection=\"column\">\n//                 TODO\n//               </Flex>\n//             </CardBody>\n//             <CardFooter pot={pot} account={account} />\n//           </StyledCardInner>\n//         </StyledCard>\n//   </CardsWrapper>\n// )\n","import { useCallback, useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nexport const useUserReferral = (_address: string) => {\n  const handleUserReferral = useCallback(async () => {\n    try {\n      const baseUrl = `${process.env.REACT_APP_MUSASHIBO_LINK}/api/referral/get-referral-code`\n\n      const response = await axios.get(baseUrl, {\n        params: {\n            address: _address\n        }\n      })\n      const {data} = await response?.data\n      return data\n    } catch (e) {\n      return {}\n    }\n  }, [_address])\n\n  return { onUserReferral: handleUserReferral }\n}","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useUserBalance = (tokenContract: Contract, account: string) => {\n  const handleUserBalance = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const balance = await tokenContract.balanceOf(account)\n      // const receipt = await tx.wait()\n      return balance\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return false\n    }\n  }, [tokenContract, account])\n\n  return { onUserBalance: handleUserBalance }\n}","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePot = (tokenContract: Contract, potAddress) => {\n  const jackpotContract = useJackpotContract(potAddress)\n  const handleApprove = useCallback(async () => {\n    try {\n      // console.log(`jackpotContract.address: ${jackpotContract.address}`)\n      const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [tokenContract, jackpotContract])\n\n  return { onApprove: handleApprove }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useCheckApprovePot = (tokenContract: Contract, potAddress, account) => {\n  const jackpotContract = useJackpotContract(potAddress)\n  const handleCheckApprove = useCallback(async () => {\n    try {\n      const result = await tokenContract.allowance(account, potAddress)\n      const allowance = new BigNumber(result.toString())\n      return allowance\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      // const receipt = await tx.wait()\n      // return receipt.status\n    } catch (e) {\n      return new BigNumber(\"0\")\n    }\n  }, [tokenContract, account, potAddress])\n\n  return { onCheckApprove: handleCheckApprove }\n}","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract, useJackpotContractSigned } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useUserClaimable = (potAddress: string) => {\n  const jackpotContract = useJackpotContractSigned(potAddress)\n\n  const handleUserClaimable = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const result = await jackpotContract.getClaimable()\n      // const receipt = await tx.wait()\n      return result\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return 0\n    }\n  }, [jackpotContract])\n\n  return { onUserClaimable: handleUserClaimable }\n}\n\n// uint deposit;\n// uint deposit_timestamp;\n// uint last_claim_block;\n// uint reward_debt;","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract, useReferralContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useUserContractReferral = () => {\n  const referralContract = useReferralContract()\n\n  const handleUserContractReferral = useCallback(async (address: string) => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const result = await referralContract.getUplineOf(address)\n      // const receipt = await tx.wait()\n      return result\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return null\n    }\n  }, [referralContract])\n\n  return { onUserContractReferral: handleUserContractReferral }\n}\n\n// uint deposit;\n// uint deposit_timestamp;\n// uint last_claim_block;\n// uint reward_debt;","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useUserWithdrawPenalty = (potAddress: string, account: string) => {\n  const jackpotContract = useJackpotContract(potAddress)\n\n  const handleUserWithdrawPenalty = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const result = await jackpotContract.getPlayerWithdrawPenalty(account)\n      // const receipt = await tx.wait()\n      return result\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return false\n    }\n  }, [jackpotContract, account])\n\n  return { onUserWithdrawPenalty: handleUserWithdrawPenalty }\n}\n\n// uint deposit;\n// uint deposit_timestamp;\n// uint last_claim_block;\n// uint reward_debt;","import React, { useMemo } from 'react'\n\nexport const DOTS = '...'\n\nconst range = (start, end) => {\n    const length = end - start + 1\n    return Array.from({ length }, (_, idx) => idx + start)\n}\n\nexport const usePagination = ({\n    totalCount,\n    pageSize = 10,\n    siblingCount = 1,\n    currentPage\n}) => {\n    const paginationRange = useMemo(() => {\n        let returnArr = []\n        const totalPageCount = Math.ceil(totalCount / pageSize)\n\n        // page count = siblingCount + 1st page + last page + current page _ 2 DOTS\n        const totalPageNumbers = siblingCount + 5\n\n        // if the pages number < page number wanted to show, return range of [1...totalPageCount]\n        if (totalPageNumbers >= totalPageCount) {\n            returnArr = range(1, totalPageCount);\n            return returnArr\n        }\n\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\n        const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount)\n\n        // Not showing dots if there is only 1 position left\n        const shouldShowLeftDots = leftSiblingIndex > 2\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2\n\n        const firstPageIndex = 1\n        const lastPageIndex = totalPageCount\n\n        if (!shouldShowLeftDots && shouldShowRightDots) {\n            const leftItemCount = 3+ 2 * siblingCount\n            const leftRange = range(1, leftItemCount)\n            returnArr = [...leftRange, DOTS, totalPageCount]\n            return returnArr\n        }\n\n        if (shouldShowLeftDots && !shouldShowRightDots) {\n            const rightItemCount = 3 + 2 * siblingCount\n            const rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount)\n            returnArr = [firstPageIndex, DOTS, ...rightRange]\n            return returnArr\n        }\n\n        if (shouldShowLeftDots && shouldShowRightDots) {\n            const middleRange = range(leftSiblingIndex, rightSiblingIndex)\n            returnArr = [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\n            return returnArr\n        }\n        return returnArr\n    }, [currentPage, pageSize, siblingCount, totalCount])\n\n    return paginationRange\n}","import React, {useEffect, useState, useRef } from 'react'\nimport classnames from 'classnames'\nimport { usePagination, DOTS } from 'hooks/usePagination'\n\nconst Pagination: React.FC<{\n    onPageChange; totalCount; siblingCount ?: number; currentPage; pageSize; className; useWhite\n}> = ({ onPageChange, totalCount, siblingCount=1, currentPage, pageSize, className, useWhite }) => {\n    const paginationRange = usePagination({\n        currentPage, totalCount, siblingCount, pageSize \n    })\n\n    if (currentPage === 0 || paginationRange.length < 2) {\n        return null\n    }\n\n    const onNext = () => {\n        onPageChange(currentPage + 1);\n    }\n    const onPrevious = () => {\n        onPageChange(currentPage - 1);\n    }\n\n    const lastPage = paginationRange[paginationRange.length - 1]\n    return (\n        <ul className=\"pagination-container\" style={{marginBottom: '0px', marginTop: '1rem', paddingLeft: '0px'}}>\n            <li className={classnames(useWhite? 'pagination-item-white' : 'pagination-item', { disabled: currentPage === 1 })} role=\"presentation\" onClick={onPrevious} >\n                <div className=\"arrow left\" role=\"button\" tabIndex={0} aria-label=\"Previous\" onKeyPress={onPrevious} />\n                {/* <div className=\"arrow left\" role=\"button\" tabIndex={0} aria-label=\"Previous\" onKeyPress={onPrevious} onClick={onPrevious} /> */}\n            </li>\n            {paginationRange.map(pageNumber => {\n                if (pageNumber === DOTS) {\n                    return <li className={useWhite? \"pagination-item-white dots\" : \"pagination-item dots\"}>&#8230;</li>\n                }\n\n                return (\n                    <li className={classnames(useWhite? 'pagination-item-white' : 'pagination-item', { selected: pageNumber === currentPage })} role=\"presentation\" onClick={() => onPageChange(pageNumber)} >\n                        <div role=\"button\" tabIndex={0} onKeyPress={() => false} >{pageNumber}</div>\n                        {/* <div role=\"button\" tabIndex={0} onKeyPress={() => false} onClick={() => onPageChange(pageNumber)}>{pageNumber}</div> */}\n                    </li>\n                )\n            })}\n            <li className={classnames(useWhite? 'pagination-item-white' : 'pagination-item', { disabled: currentPage === lastPage })} role=\"presentation\" onClick={onNext} >\n                <div className=\"arrow right\" role=\"button\" tabIndex={0} aria-label=\"Next\" onKeyPress={onNext} />\n                {/* <div className=\"arrow right\" role=\"button\" tabIndex={0} aria-label=\"Next\" onKeyPress={onNext} onClick={onNext} /> */}\n            </li>\n        </ul>\n    )\n}\n\nexport default Pagination","import { ChainId, Currency, currencyEquals, JSBI, Price, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BUSD, CAKE, MUS } from '../config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = BUSD[ChainId.MAINNET]\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [\n        chainId && wrapped && currencyEquals(WETH[chainId], wrapped) ? undefined : currency,\n        chainId ? WETH[chainId] : undefined,\n      ],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WETH[chainId] : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WETH[chainId])) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WETH[chainId])\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WETH[chainId])\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WETH[chainId]).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WETH[chainId])\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const currentChaindId = chainId || ChainId.MAINNET\n  const cakeBusdPrice = useBUSDPrice(CAKE[currentChaindId])\n  return cakeBusdPrice\n}\n\nexport const useMusBusdPrice = (): Price | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const currentChaindId = chainId || ChainId.MAINNET\n  const musBusdPrice = useBUSDPrice(MUS[currentChaindId])\n  return musBusdPrice\n}\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 440px;\n  min-width: 230px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 3px 10px rgba(25, 19, 38, 0.15);\n  border-radius: 5px;\n  background: none;\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 16px;\n    // min-width 440px;\n    min-width: 470px;\n    max-width: 490px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\n// max-width: 690px; at line 34\n// box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15) at line 30, 43\nexport const StyledRightCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 440px;\n  margin: 0 0px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  border-radius: 5px;\n  background: transparent;\n  box-shadow: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 690px;\n    min-width: 690px;\n    margin: 0 8px 24px;\n    display: flex;\n    flex-direction: column;\n    align-self: baseline;\n    position: relative;\n    color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n    border-radius: 5px;\n    background: transparent;\n    box-shadow: none;\n  }\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 15px 12px 16px;\n    max-width: 440px;\n  }\n`\n\nexport const StyledRightCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledRightCard\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { Token, PotConfig } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nconst Wrapper = styled(CardHeader) <{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  padding: 15px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n  }\n`\nconst PotWinnerHeading = styled(Heading).attrs({ as: 'h3' })`\n    font-size: 25px !important;\n    text-align: center;\n    color: #FFFFFF;\n    padding-bottom: 0px;\n    margin-bottom: 0px;\n\n    ${({ theme }) => theme.mediaQueries.md} {\n      font-size: 30px;\n    }\n  `\n\nconst StyledRightCardHeader: React.FC<{\n  // earningToken: Token\n  // stakingToken: Token\n  // isAutoVault?: boolean\n  // isFinished?: boolean\n  // isStaking?: boolean\n\n  pot: PotConfig\n  isDefault?: boolean\n}> = ({ pot, isDefault = true }) => {\n  const { t } = useTranslation()\n  const background = isDefault ? 'bubblegum' : 'cardHeader'\n  const isFinished = false\n\n  // const getHeadingPrefix = () => {\n  //   if (isAutoVault) {\n  //     // vault\n  //     return t('Auto')\n  //   }\n  //   if (isCakePool) {\n  //     // manual cake\n  //     return t('Manual')\n  //   }\n  //   // all other pools\n  //   return t('Earn')\n  // }\n\n  // const getSubHeading = () => {\n  //   if (isAutoVault) {\n  //     return t('Automatic restaking')\n  //   }\n  //   if (isCakePool) {\n  //     return t('Earn CAKE, stake CAKE')\n  //   }\n  //   return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  // }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background} style={{ background: '#525252', borderRadius: '5px 5px 0 0' }}>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexDirection=\"column\">\n          <PotWinnerHeading color='body' scale=\"lg\">\n            {t(`DEPOSIT LIST`)}\n          </PotWinnerHeading>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledRightCardHeader\n\n// return (\n//   <Wrapper isFinished={isFinished} background={background} style={{ background: 'black', borderRadius: '5px' }}>\n\n//     <Flex alignItems=\"center\" justifyContent=\"space-between\">\n//       <Flex flexDirection=\"column\">\n//         <Countdown date={Date.now() + 80000000000} renderer={CountdownTimer} />\n//         <PotPairHeading color='body' scale=\"lg\">\n//           {`${currency1Name} x ${currency2Name}`}\n//         </PotPairHeading>\n//         <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{`$${prizeAmount} PRIZE`}</Text>\n//       </Flex>\n//     </Flex>\n//   </Wrapper>\n// )\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, LinkExternal } from '@pancakeswap/uikit'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { BASE_BSC_SCAN_URL } from 'config'\n\nconst MText = styled(Text)`\n  color: #FFFFFF;\n  font-size: 13px;\n  font-weight: bold;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 16px;\n  }\n`\nconst AddressRowFixed = styled(RowFixed)`\n  margin-right: 15px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 0px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\n\nfunction WinnerList({ address, amount, symbol, date, txId }: { address: string; amount: string, symbol: string, date: string, txId: string }) {\n  const { t } = useTranslation()\n\n  // const d = Date.parse('2021-08-19T03:54:30.000Z')\n  // console.log({d})\n  // console.log(new Date(d).toLocaleString())\n\n  const dateFormat: Intl.DateTimeFormatOptions = {\n    month: '2-digit', // numeric, 2-digit, long, short, narrow\n    day: 'numeric', // numeric, 2-digit\n    year: 'numeric', // numeric, 2-digit\n    hour: '2-digit', // numeric, 2-digit\n    minute: 'numeric', // numeric, 2-digit\n    second: 'numeric', // numeric, 2-digit\n  }\n  const dateMs = Date.parse(date)\n  const dateStr = new Date(dateMs).toLocaleString(undefined, dateFormat)\n\n  return (\n    <RowBetween>\n      <AddressRowFixed>\n        <MText>\n          {`${address}`}\n        </MText>\n      </AddressRowFixed>\n      <RowFixed>\n        <LinkExternal color=\"white\" external href={`${BASE_BSC_SCAN_URL}/tx/${txId}`}>\n          <MText >\n            {`${amount} ${symbol}`}\n          </MText>\n        </LinkExternal>\n      </RowFixed>\n      <DateRowFixed>\n        <MText>\n          {`${dateStr}`}\n        </MText>\n      </DateRowFixed>\n    </RowBetween>\n  )\n}\n\nexport default WinnerList\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { CmsModal, Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  content: string\n  onDismiss?: () => void\n  // TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\nconst MModal = styled(CmsModal)`\n  border: none;\n  max-width: 70vh;\n  max-height: 70vh;\n  \n  h2 {\n    color: white;\n  }\n  svg {\n    fill: white;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 500px;\n  }\n`\n\nconst LearnMoreModal: React.FC<BountyModalProps> = ({ content, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={11} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  return (\n    <MModal title={t('Learn More')} onDismiss={onDismiss} headerBackground='#910101'>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <div style={{color: 'black'}} dangerouslySetInnerHTML={{ __html: content}} />\n      </Flex>\n    </MModal>\n  )\n}\n\nexport default LearnMoreModal\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport useRefresh from 'hooks/useRefresh'\nimport { CardBody, Flex, Text, CardRibbon, CardHeader, Heading, CardFooter, useModal, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Pagination from 'components/Pagination/Pagination'\nimport {getFullDisplayBalance, getFullDisplayBalanceFull} from 'utils/formatBalance'\nimport { useCakeBusdPrice, useMusBusdPrice } from 'hooks/useBUSDPrice'\nimport tokens from 'config/constants/tokens'\nimport { PotConfig } from '../../../../config/constants/types'\nimport { AutoColumn } from '../../../../components/Layout/Column'\nimport { AutoRow, RowBetween, RowFixed } from '../../../../components/Layout/Row'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport { StyledRightCard, StyledRightCardInner } from './StyledRightCard'\nimport StyledRightCardHeader from './StyledRightCardHeader'\nimport WinnerList from './WinnerList'\nimport {useMasterchefSpecial} from \"../../../../hooks/useContract\";\nimport {shortenAddress} from \"../../../../utils\";\nimport LearnMoreModal from \"../LearnMoreModal\"\nimport { useCmsContent } from \"../../hooks/useCmsContent\"\nimport { useUserDepositedBalance } from \"../../hooks/useUserDepositedBalance\"\nimport { usePotDepositList } from \"../../hooks/usePotDepositList\"\nimport { usePotSponsorship } from \"../../hooks/usePotSponsorship\"\n\nconst CardsWrapper = styled.div<{ singleCard: boolean }>`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-bottom: 32px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ singleCard }) => (singleCard ? '1fr' : '1fr 1fr')};\n    justify-items: ${({ singleCard }) => (singleCard ? 'center' : 'unset')};\n  }\n`\n\nconst Wrapper = styled(CardHeader) <{ isFinished?: boolean; background?: string }>`\n  background: transparent;\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  z-index: 1;\n  margin-bottom: -240px;\n`\n// const PotInfoHeading = styled(Heading).attrs({ as: 'h3' })`\n//   font-size: 25px;\n//   text-align: center;\n\n//   ${({ theme }) => theme.mediaQueries.md} {\n//     font-size: 25px;\n//   }\n// `\n\nconst PotInfoText = styled(Text)`\n  font-size: 16px;\n  font-weight: bold;\n  color: #FFFFFF;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 22px;\n  }\n`\nconst PotRewardInfoText = styled(Text)`\n  font-size: 11px;\n  font-weight: bold;\n  color: #FFFFFF;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 17px;\n  }\n`\n\n// const PotPrizeHeading = styled(Heading).attrs({ as: 'h1' })`\n//   font-size: 25px;\n//   text-align: center;\n//   color: #910101;\n\n//   ${({ theme }) => theme.mediaQueries.md} {\n//     font-size: 25px;\n//   }\n// `\n\nconst CardAutoColumn = styled(AutoColumn)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst MText = styled(Text)`\n  color: #FFFFFF;\n  font-size: 18px !important;\n  font-weight: bold;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\nconst PotDetailCardBody = styled(CardBody)`\n  padding: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\nconst DepositListCardBody = styled(CardBody)`\n  padding: 24px 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\nconst MRowFixed = styled(RowFixed)`\n  margin-right: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 90px;\n  }\n`\n\nconst LearnMoreButton = styled(Button)`\n  background-color: #000000;\n`\n\ntype cmsBaseObj = {\n  content: string,\n  language: string,\n  page: string,\n  key: string\n}\ntype cmsObj = {\n  banner?: cmsBaseObj,\n  jackpot?: cmsBaseObj\n}\n\nconst PotDetailWinnerCard: React.FC<{ pot: PotConfig; potData; account: string; potPrizeTotalDepositData }> = ({pot, potData, account, potPrizeTotalDepositData}) => {\n  // const [userInfo, setUserInfo] = useState('')\n  // const [cakeInfo, setCakeInfo] = useState('')\n  const { potAddress = \"\", stakingToken = undefined } = { ...pot }\n  const { fastRefresh, slowRefresh } = useRefresh()\n  const {totalDeposit, sessionId} = potData\n  const sessionIdStr = (sessionId)? new BigNumber(sessionId.toString()).plus(10000).toString() : \"\"\n  // const {deposits} = potData\n  // let depositList = []\n  // if (deposits) {\n  //   depositList = deposits.data\n  // }\n  // let winnerList = []\n  // let winAmount = []\n  // if (winners) {\n  //   winnerList = winners[2]\n  //   winAmount = winners[3]\n  // }\n\n  const tokenInit = {\n    symbol: \"\",\n    address: \"\",\n    decimals: 0\n  }\n  const stakingTokenSymbolDecimal = stakingToken || tokenInit\n\n  const { userInfoData, cakeInfoData, potTotalDepositData, potTotalRewardData  } = potPrizeTotalDepositData\n  const userInfo = userInfoData\n  const cakeInfo = cakeInfoData\n\n  const {t, currentLanguage} = useTranslation()\n  let totalDepositFormatted = t(\"Loading...\")\n  let totalReward = t(\"Loading...\")\n  let totalSponsorshipFormatted = t(\"Loading...\")\n\n  let winnerFormatted = t(\"Loading...\")\n  let musPoolFormatted = t(\"Loading...\")\n  let referralFormatted = t(\"Loading...\")\n  let devPoolFormatted = t(\"Loading...\")\n  let participantFormatted = t(\"Loading...\")\n\n  let winnerFiatFormatted = t(\"Loading...\")\n  let musPoolFiatFormatted = t(\"Loading...\")\n  let referralFiatFormatted = t(\"Loading...\")\n  let devPoolFiatFormatted = t(\"Loading...\")\n  let participantFiatFormatted = t(\"Loading...\")\n\n  const cakePriceBusd = useCakeBusdPrice()\n  const cakePriceBusdNum = cakePriceBusd ? +cakePriceBusd.toFixed(4) : 0\n  const musPriceBusd = useMusBusdPrice()\n  const musPriceBusdNum = musPriceBusd ? +musPriceBusd.toFixed(4) : 0\n\n  const [userProbability, setUserProbability] = useState(new BigNumber(\"0\"))\n  const [potTotalSponsorship, setPotTotalSponsorship] = useState(new BigNumber(\"0\"))\n  const [depositListCurrentPage, setDepositListCurrentPage] = useState(1)\n  const [depositListMax, setDepositListMax] = useState(0)\n  const [depositListA, setDepositListA] = useState([])\n  const baseUrl = `${process.env.REACT_APP_DOMAIN_LINK}jackpot/${potAddress}/deposits`\n\n  const { onCmsContent: handleCmsContent } = useCmsContent(\"jackpot\", currentLanguage.locale)\n  const [cmsContent, setCmsContent] = useState(() => {\n    const init: cmsObj = {\n      jackpot: {\n        content: \"\",\n        language: \"\",\n        page: \"\",\n        key: \"\"\n      }\n    }\n    return init\n  })\n  const [onLearnMore] = useModal(<LearnMoreModal content={cmsContent.jackpot.content} />)\n\n  const potTotalDeposit = potTotalDepositData\n  const potTotalReward = potTotalRewardData\n\n  const pancakeChef = useMasterchefSpecial()\n\n  const { onUserDepositedBalance: handleUserDepositedBalance } = useUserDepositedBalance(potAddress, account)\n  const { onPotDepositList: handlePotDepositList } = usePotDepositList(depositListCurrentPage, potAddress)\n\n  const { onPotSponsorship: handlePotSponsorship } = usePotSponsorship(sessionIdStr)\n\n\n  const calculateRewardsContribution = () => {\n    // in token\n    const winner = potTotalReward.times(0.35)\n    const musPool = potTotalReward.times(0.20)\n    const referral = potTotalReward.times(0.05)\n    const devPool = potTotalReward.times(0.10)\n    const participant = potTotalReward.times(0.30)\n\n    // in fiat\n    const winnerFiat = winner.times(cakePriceBusdNum)\n    const musPoolFiat = musPool.times(cakePriceBusdNum)\n    const referralFiat = referral.times(cakePriceBusdNum)\n    const devPoolFiat = devPool.times(cakePriceBusdNum)\n    const participantFiat = participant.times(cakePriceBusdNum)\n\n    // from fiat to token\n    const musPoolToMus = (musPriceBusdNum > 0)? musPoolFiat.div(musPriceBusdNum) : new BigNumber(\"0\")\n    const referralToMus = (musPriceBusdNum > 0)? referralFiat.div(musPriceBusdNum) : new BigNumber(\"0\")\n    const participantToMus = (musPriceBusdNum > 0)? participantFiat.div(musPriceBusdNum) : new BigNumber(\"0\")\n\n    winnerFormatted = getFullDisplayBalanceFull(winner, 18, 4)\n    musPoolFormatted = getFullDisplayBalanceFull(musPoolToMus, 18, 4)\n    referralFormatted = getFullDisplayBalanceFull(referralToMus, 18, 4)\n    devPoolFormatted = getFullDisplayBalanceFull(devPool, 18, 4)\n    participantFormatted = getFullDisplayBalanceFull(participantToMus, 18, 4)\n\n    winnerFiatFormatted = getFullDisplayBalanceFull(winnerFiat, 18, 2)\n    musPoolFiatFormatted = getFullDisplayBalanceFull(musPoolFiat, 18, 2)\n    referralFiatFormatted = getFullDisplayBalanceFull(referralFiat, 18, 2)\n    devPoolFiatFormatted = getFullDisplayBalanceFull(devPoolFiat, 18, 2)\n    participantFiatFormatted = getFullDisplayBalanceFull(participantFiat, 18, 2)\n  }\n\n  useEffect(() => {\n    const getCms = async() => {\n      const result = await handleCmsContent()\n      if (Object.keys(result).length > 0) {\n        setCmsContent(result)\n      }\n    }\n    getCms()\n  }, [handleCmsContent])\n\n  useEffect(() => {\n    const calculateWinRate = async (totalDepositBN: BigNumber) => {\n      const result = await handleUserDepositedBalance()\n      const userDepositedBalanceBN = new BigNumber(result.toString())\n      const winRate = (userDepositedBalanceBN.div(totalDepositBN)).times(100)\n      // if (Number.isNaN(winRate) === false) {\n      //   setUserProbability(winRate)\n      // }\n      if (winRate.isNaN() === false && winRate.isFinite() === true) {\n        setUserProbability(winRate)\n      }\n    }\n\n    const getDepositList = async () => {\n      const depositListResult = await handlePotDepositList()\n      if (depositListResult) {\n        setDepositListA(depositListResult.data)\n        setDepositListMax(depositListResult.max)\n      }\n    }\n    const getSponsorship = async () => {\n      const sponsorshipResult = await handlePotSponsorship()\n      if (sponsorshipResult) {\n        const sponsorshipResultAmountBN = new BigNumber(sponsorshipResult.amount).times(BIG_TEN.pow(18))\n        if (sponsorshipResultAmountBN.isNaN() === false) {\n          setPotTotalSponsorship(sponsorshipResultAmountBN)\n        }\n      }\n    }\n    getDepositList()\n    getSponsorship()\n    calculateWinRate(potTotalDeposit)\n  },[pancakeChef, potAddress, fastRefresh, handleUserDepositedBalance, handlePotDepositList, handlePotSponsorship, potTotalDeposit])\n\n  // if (totalDeposit && cakeInfo && userInfo)\n  // {\n  //   totalDeposit = new BigNumber(totalDeposit.toString())\n  //   totalDepositFormatted = getFullDisplayBalance(totalDeposit, 18, 4)\n  //   const totalDepositedStake = new BigNumber(userInfo.toString())\n  //   const reward = new BigNumber(cakeInfo.toString())\n  //   const result = totalDepositedStake.minus(totalDeposit).plus(reward)\n\n  //   if (result.isPositive()) {\n  //     totalReward = getFullDisplayBalance(result,18,4)\n  //   }\n  //   // else {\n  //   //   console.log('negative')\n  //   // }\n  // }\n  if (potTotalDeposit && cakeInfo && userInfo)\n  {\n    totalDepositFormatted = getFullDisplayBalance(potTotalDeposit, 18, 4)\n    totalSponsorshipFormatted = getFullDisplayBalance(potTotalSponsorship, 18, 4)\n\n    if (potTotalReward.isPositive() && potTotalReward.isNaN() === false) {\n      totalReward = getFullDisplayBalance(potTotalReward,18,4)\n      calculateRewardsContribution()\n    }\n  }\n\n  const amountFormat = (amount: string) => {\n    const amountArr = amount.split(\".\")\n    amountArr[1] = amountArr[1].substr(0, 4)\n    const formattedAmount = amountArr.join(\".\")\n    return formattedAmount\n  }\n\n  return (\n      <AutoRow justify='center' style={{padding: '20px 2rem', background: '#000000'}}>\n        <CardAutoColumn justify=\"space-between\">\n          <StyledCard\n              // isFinished={isFinished && potId !== 0}\n              // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n          >\n            <StyledCardInner style={{background: 'none'}}>\n              <PotDetailCardBody>\n                <Flex flexDirection=\"column\">\n                  <AutoColumn style={{padding: '0 0px'}}>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotInfoText>\n                          {t('Total Deposit')}\n                        </PotInfoText>\n                      </RowFixed>\n                      <RowFixed>\n                        <PotInfoText>\n                          {`${totalDepositFormatted} ${stakingTokenSymbolDecimal.symbol}`}\n                        </PotInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed />\n                      <RowFixed>\n                        <PotInfoText style={{fontSize: '17px'}}>{`(~$${getFullDisplayBalance(potTotalDeposit.times(cakePriceBusdNum), 18, 2)})`}</PotInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    {potTotalSponsorship.gt(0) === true && <><RowBetween>\n                      <RowFixed>\n                        <PotInfoText>\n                          {t('Total Sponsorship')}\n                        </PotInfoText>\n                      </RowFixed>\n                      <RowFixed style={{marginLeft: '10px'}}>\n                        <PotInfoText>\n                          {`${totalSponsorshipFormatted} ${stakingTokenSymbolDecimal.symbol}`}\n                        </PotInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed />\n                      <RowFixed>\n                        <PotInfoText style={{fontSize: '17px'}}>{`(~$${getFullDisplayBalance(potTotalSponsorship.times(cakePriceBusdNum), 18, 2)})`}</PotInfoText>\n                      </RowFixed>\n                    </RowBetween></>}\n                    <RowBetween>\n                      <RowFixed>\n                        <PotInfoText>\n                          {t('Total Rewards')}\n                        </PotInfoText>\n                      </RowFixed>\n                      <RowFixed>\n                        <PotInfoText>\n                          {`${totalReward} ${stakingTokenSymbolDecimal.symbol}`}\n                        </PotInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed />\n                      <RowFixed>\n                        <PotInfoText style={{fontSize: '17px'}}>{`(~$${getFullDisplayBalance(potTotalReward.times(cakePriceBusdNum), 18, 2)})`}</PotInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotInfoText>\n                          {t('Your Probability')}\n                        </PotInfoText>\n                      </RowFixed>\n                      <RowFixed>\n                        <PotInfoText>\n                          {`${userProbability.toFixed(4)} %`}\n                        </PotInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                  </AutoColumn>\n                  <AutoColumn style={{padding: '0 0px', marginTop: '10px'}}>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotRewardInfoText style={{textDecoration: 'underline'}}>\n                          {t('Rewards Contribution')}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          35% {t('Winner')}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          {`${winnerFormatted} ${stakingTokenSymbolDecimal.symbol} (~$${winnerFiatFormatted})`}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          20% {t(`MUS Pool`)}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          {`${musPoolFormatted} ${tokens.musashi.symbol} (~$${musPoolFiatFormatted})`}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          5% {t('Referral')}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          {`${referralFormatted} ${tokens.musashi.symbol} (~$${referralFiatFormatted})`}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          10% {t(`Dev Pool`)}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          {`${devPoolFormatted} ${stakingTokenSymbolDecimal.symbol} (~$${devPoolFiatFormatted})`}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <RowFixed>\n                        <PotRewardInfoText>\n                          30% {t('All Participant')}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                      <RowFixed style={{marginLeft: '5px'}}>\n                        <PotRewardInfoText>\n                          {`${participantFormatted} ${tokens.musashi.symbol} (~$${participantFiatFormatted})`}\n                        </PotRewardInfoText>\n                      </RowFixed>\n                    </RowBetween>\n                  </AutoColumn>\n                </Flex>\n                <Flex justifyContent=\"center\" alignItems=\"center\">\n                  <LearnMoreButton onClick={onLearnMore}>\n                    <MText bold color=\"textSubtle\" mt=\"6px\" style={{textDecoration: \"underline\"}}>\n                      {t('Learn more')}\n                    </MText>\n                  </LearnMoreButton>\n                </Flex>\n              </PotDetailCardBody>\n            </StyledCardInner>\n          </StyledCard>\n        </CardAutoColumn>\n        <CardAutoColumn justify=\"space-between\">\n          <StyledRightCard\n              // isFinished={isFinished && potId !== 0}\n              // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n          >\n            <StyledRightCardInner>\n              <StyledRightCardHeader\n                  pot={pot}\n                  // potId={potId}\n                  // stakingToken={stakingToken}\n                  // potLabel={potLabel}\n                  // prizeAmount={prizeAmount}\n                  // totalDeposit={totalDeposit}\n                  // expiryDate={expiryDate}\n                  // isFinished={isFinished && potId !== 0}\n              />\n              <DepositListCardBody style={{background: '#333333', overflow: 'auto'}}>\n                <Flex flexDirection=\"column\">\n                  <AutoColumn style={{padding: '0 16px'}}>\n                    <RowBetween>\n                      <RowFixed>\n                        <MText>\n                          {t(`Address`)}\n                        </MText>\n                      </RowFixed>\n                      <MRowFixed>\n                        <MText>\n                          {t(`Amount`)}\n                        </MText>\n                      </MRowFixed>\n                      <DateRowFixed>\n                        <MText>\n                          {t(`Date`)}\n                        </MText>\n                      </DateRowFixed>\n                    </RowBetween>\n                    {depositListA.map((deposit, i) =>\n                        <WinnerList key={deposit.tx_id} address={shortenAddress(deposit.player)} amount={amountFormat(deposit.amount)} symbol={stakingToken.symbol} date={deposit.created_at} txId={deposit.tx_id}/>\n                    )}\n                  </AutoColumn>\n                  <Pagination className=\"pagination-bar\" currentPage={depositListCurrentPage} totalCount={depositListMax * 10} pageSize={10} onPageChange={page => setDepositListCurrentPage(page)} useWhite />\n                </Flex>\n              </DepositListCardBody>\n            </StyledRightCardInner>\n          </StyledRightCard>\n        </CardAutoColumn>\n      </AutoRow>\n  )\n}\n\n// getFullDisplayBalanceFull(new BigNumber(deposit.amount.toString()),18,4)\nexport default PotDetailWinnerCard\n\n\n// return (\n//   <CardsWrapper singleCard={false}>\n//         <StyledCard\n//           // isFinished={isFinished && potId !== 0}\n//           // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n//         >\n//           <StyledCardInner>\n//             <StyledCardHeader\n//               potId={potId}\n//               currency1={currency1}\n//               currency2={currency2}\n//               currency1Name={currency1Name}\n//               currency2Name={currency2Name}\n//               prizeAmount={prizeAmount}\n//               totalDeposit={totalDeposit}\n//               expiryDate={expiryDate}\n//               // isFinished={isFinished && potId !== 0}\n//             />\n//             <CardBody>\n//               <Flex mt=\"24px\" flexDirection=\"column\">\n//                 TODO\n//               </Flex>\n//             </CardBody>\n//             <CardFooter pot={pot} account={account} />\n//           </StyledCardInner>\n//         </StyledCard>\n//         <StyledCard\n//           // isFinished={isFinished && potId !== 0}\n//           // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n//         >\n//           <StyledCardInner>\n//             <StyledCardHeader\n//               potId={potId}\n//               currency1={currency1}\n//               currency2={currency2}\n//               currency1Name={currency1Name}\n//               currency2Name={currency2Name}\n//               prizeAmount={prizeAmount}\n//               totalDeposit={totalDeposit}\n//               expiryDate={expiryDate}\n//               // isFinished={isFinished && potId !== 0}\n//             />\n//             <CardBody>\n//               <Flex mt=\"24px\" flexDirection=\"column\">\n//                 TODO\n//               </Flex>\n//             </CardBody>\n//             <CardFooter pot={pot} account={account} />\n//           </StyledCardInner>\n//         </StyledCard>\n//   </CardsWrapper>\n// )\n","import { useCallback, useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nexport const useCmsContent = (_page: string, _locale: string) => {\n  const handleCmsContent = useCallback(async () => {\n    try {\n      const baseUrl = `${process.env.REACT_APP_MUSASHIBO_LINK}/api/frontend/get-content`\n\n      const response = await axios.get(baseUrl, {\n        params: {\n          page    : _page,\n          language: _locale\n        }\n      })\n\n      const {data} = await response?.data\n      return data\n    } catch (e) {\n      return {}\n    }\n  }, [_locale, _page])\n\n  return { onCmsContent: handleCmsContent }\n}","import { useCallback, useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nexport const usePotSponsorship = (_sessionId: string) => {\n  const handlePotSponsorship = useCallback(async () => {\n    try {\n      const baseUrl = `${process.env.REACT_APP_MUSASHIBO_LINK}/api/sponsorship/get-sponsor`\n\n      const response = await axios.get(baseUrl, {\n        params: {\n          session_id    : _sessionId\n        }\n      })\n\n      const {data} = await response?.data\n      return data\n    } catch (e) {\n      return {}\n    }\n  }, [_sessionId])\n\n  return { onPotSponsorship: handlePotSponsorship }\n}","import { useCallback, useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nexport const usePotDepositList = (_page: number, _address: string) => {\n  const handlePotDepositList = useCallback(async () => {\n    try {\n      const baseUrl = `${process.env.REACT_APP_DOMAIN_LINK}/jackpot/${_address}/deposits/${_page}`\n\n      const response = await axios.get(baseUrl)\n\n      const {data, max} = await response?.data\n      return {\n        \"data\": data,\n        \"max\": max\n      }\n    } catch (e) {\n      return {}\n    }\n  }, [_address, _page])\n\n  return { onPotDepositList: handlePotDepositList }\n}","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 440px;\n  min-width: 230px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 3px 10px rgba(25, 19, 38, 0);\n  border-radius: 5px;\n  background: none;\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 16px;\n    min-width 645px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 16px;\n    min-width 680px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { Token, PotConfig } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nconst Wrapper = styled(CardHeader) <{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  padding-top: 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n  }\n`\n\nconst TrophyImg = styled.img`\n  max-width: 50%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 100%;\n  }\n`\n\nconst StyledRightCardHeader: React.FC<{\n  // earningToken: Token\n  // stakingToken: Token\n  // isAutoVault?: boolean\n  // isFinished?: boolean\n  // isStaking?: boolean\n\n  pot: PotConfig\n  isDefault?: boolean\n}> = ({ pot, isDefault = true }) => {\n  const { t } = useTranslation()\n  const background = isDefault ? 'bubblegum' : 'cardHeader'\n  const isFinished = false\n\n  // const getHeadingPrefix = () => {\n  //   if (isAutoVault) {\n  //     // vault\n  //     return t('Auto')\n  //   }\n  //   if (isCakePool) {\n  //     // manual cake\n  //     return t('Manual')\n  //   }\n  //   // all other pools\n  //   return t('Earn')\n  // }\n\n  // const getSubHeading = () => {\n  //   if (isAutoVault) {\n  //     return t('Automatic restaking')\n  //   }\n  //   if (isCakePool) {\n  //     return t('Earn CAKE, stake CAKE')\n  //   }\n  //   return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  // }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background} style={{ background: 'transparent', borderRadius: '5px 5px 0 0' }}>\n        <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n          <TrophyImg src=\"/images/trophy.png\" width=\"auto\" height=\"auto\" alt=\"\" />\n        </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledRightCardHeader\n\n// return (\n//   <Wrapper isFinished={isFinished} background={background} style={{ background: 'black', borderRadius: '5px' }}>\n\n//     <Flex alignItems=\"center\" justifyContent=\"space-between\">\n//       <Flex flexDirection=\"column\">\n//         <Countdown date={Date.now() + 80000000000} renderer={CountdownTimer} />\n//         <PotPairHeading color='body' scale=\"lg\">\n//           {`${currency1Name} x ${currency2Name}`}\n//         </PotPairHeading>\n//         <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{`$${prizeAmount} PRIZE`}</Text>\n//       </Flex>\n//     </Flex>\n//   </Wrapper>\n// )\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, LinkExternal } from '@pancakeswap/uikit'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { BASE_BSC_SCAN_URL } from 'config'\n\nconst MText = styled(Text)`\n  color: #000000;\n  font-size: 13px !important;\n  font-weight: bold;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 18px !important;\n  }\n`\nconst AddressRowFixed = styled(RowFixed)`\n  margin-right: 10px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 0px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\n\nfunction LastWinnerList({ sessionId, address, amount, symbol, date, txId }: { sessionId: string, address: string; amount: string, symbol: string, date: number, txId: string }) {\n  const { t } = useTranslation()\n\n  // const dateStr = new Date(date).toLocaleString()\n  // can use new Intl.DateTimeFormat(locale, options).format(date) as well\n  const dateFormat: Intl.DateTimeFormatOptions = {\n    month: '2-digit', // numeric, 2-digit, long, short, narrow\n    day: 'numeric', // numeric, 2-digit\n    year: 'numeric', // numeric, 2-digit\n    hour: '2-digit', // numeric, 2-digit\n    minute: 'numeric', // numeric, 2-digit\n    second: 'numeric', // numeric, 2-digit\n  }\n  const dateStr = new Date(date * 1000).toLocaleString(undefined, dateFormat)\n\n  return (\n    <RowBetween>\n      <AddressRowFixed>\n        <MText>\n          {`#${sessionId}`}\n        </MText>\n      </AddressRowFixed>\n      <AddressRowFixed>\n        <MText>\n          {`${address}`}\n        </MText>\n      </AddressRowFixed>\n      <RowFixed>\n        <LinkExternal external href={`${BASE_BSC_SCAN_URL}/tx/${txId}`}>\n          <MText >\n            {`${amount} ${symbol}`}\n          </MText>\n        </LinkExternal>\n      </RowFixed>\n      <DateRowFixed>\n        <MText>\n          {`${dateStr}`}\n        </MText>\n      </DateRowFixed>\n    </RowBetween>\n  )\n}\n\nexport default LastWinnerList\n","import { useCallback, useEffect, useState, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { useErc20TokenContract, useERC20 } from 'hooks/useContractMulti'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useAccountTokenBalance = (chainId: number, account: string, tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const tokenContract = useErc20TokenContract(tokenAddress, chainId)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await tokenContract.balanceOf(account)\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, tokenContract])\n\n  return balance\n}\n\nexport const useAccountTokenBalanceCallback = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const balanceRef = useRef(balance)\n  const tokenContract = useERC20(tokenAddress)\n\n  const handleAccountTokenBalance = useCallback(async (account: string) => {\n    try {\n      const fetchBalance = async () => {\n        const res = await tokenContract.balanceOf(account)\n        setBalance(new BigNumber(res.toString()))\n        balanceRef.current = new BigNumber(res.toString())\n      }\n\n      if (account && tokenContract) {\n        fetchBalance()\n      }\n\n      return balanceRef.current\n    } catch (e) {\n      return new BigNumber(\"0\")\n    }\n  }, [tokenContract])\n\n  return { onAccountTokenBalance : handleAccountTokenBalance }\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js'\nimport React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport useRefresh from 'hooks/useRefresh'\nimport Pagination from 'components/Pagination/Pagination'\nimport { CardBody, Flex, Text, CardRibbon, CardHeader, Heading, CardFooter, Card, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport {getFullDisplayBalance} from 'utils/formatBalance'\nimport { PotConfig } from '../../../../config/constants/types'\nimport { AutoColumn } from '../../../../components/Layout/Column'\nimport { AutoRow, RowBetween, RowFixed } from '../../../../components/Layout/Row'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport StyledCardHeader from './StyledCardHeader'\nimport LastWinnerList from './LastWinnerList'\nimport {useMasterchefSpecial} from \"../../../../hooks/useContract\";\nimport {shortenAddress} from \"../../../../utils\";\nimport { usePotWinnerList } from \"../../hooks/usePotWinnerList\"\n\nconst CardsWrapper = styled.div<{ singleCard: boolean }>`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-bottom: 32px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ singleCard }) => (singleCard ? '1fr' : '1fr 1fr')};\n    justify-items: ${({ singleCard }) => (singleCard ? 'center' : 'unset')};\n  }\n`\n\nconst Wrapper = styled(CardHeader) <{ isFinished?: boolean; background?: string }>`\n  background: transparent;\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  z-index: 1;\n  margin-bottom: -240px;\n`\nconst PotInfoHeading = styled(Heading).attrs({ as: 'h3' })`\n  font-size: 25px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\n\nconst PotInfoText = styled(Text)`\n  font-size: 25px;\n  font-weight: bold;\n  color: #FFFFFF;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\nconst MText = styled(Text)`\n  color: #000000;\n  font-weight: bold;\n`\nconst TabText = styled(Text)`\n  color: #262626;\n  font-weight: bold;\n  font-size: 25px;\n`\n\nconst PotPrizeHeading = styled(Heading).attrs({ as: 'h1' })`\n  font-size: 25px;\n  text-align: center;\n  color: #910101;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\n\nconst CardAutoColumn = styled(AutoColumn)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst TabBox = styled(Box)`\n  border-bottom: 3px solid #910101;\n`\nconst MRowFixed = styled(RowFixed)`\n  margin-right: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 90px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\nconst WinnerListCardBody = styled(CardBody)`\n  padding: 24px 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\n\nconst PotDetailLastWinnerList: React.FC<{ pot: PotConfig; potData; account: string }> = ({pot, potData, account}) => {\n  const [userInfo, setUserInfo] = useState('')\n  const [cakeInfo, setCakeInfo] = useState('')\n  const { potAddress = \"\", stakingToken = undefined } = { ...pot }\n  let {totalDeposit} = potData\n  // const {winners} = potData\n  // let winnerList = []\n  // let winAmount = []\n  // let winDate = new BigNumber(\"0\")\n  // if (winners) {\n  //   winnerList = winners[2]\n  //   winAmount = winners[3]\n  //   const winDateNum = new BigNumber(winners[4].toString()).toNumber() * 1000\n  //   winDate = new BigNumber(winDateNum.toString())\n  // }\n  const { sessionId } = potData\n  const lastSessionId = (sessionId)? new BigNumber(sessionId.toString()).plus(10000).minus(1) : \"\"\n  const sessionIdStr = (lastSessionId && lastSessionId.isPositive())? lastSessionId.toString() : \"\"\n\n  const {t} = useTranslation()\n  let totalDepositFormatted = t(\"Loading...\")\n  let totalReward = t(\"Loading...\")\n  const pancakeChef = useMasterchefSpecial()\n\n  const { fastRefresh, slowRefresh } = useRefresh()\n\n  const [winnerListA, setWinnerListA] = useState([])\n  const [winnerListPage, setWinnerListPage] = useState(1)\n  const [winnerListMax, setWinnerListMax] = useState(0)\n  const { onPotWinnerList: handlePotWinnerList } = usePotWinnerList(winnerListPage, potAddress)\n\n  const getData = async() => {\n    const _userInfo = await pancakeChef.userInfo(0, potAddress)\n    const _pendingCake = await pancakeChef.pendingCake(0, potAddress)\n    setUserInfo(_userInfo.amount)\n    setCakeInfo(_pendingCake)\n  }\n\n  useEffect(() => {\n    if (!userInfo || !cakeInfo)\n      getData()\n    else {\n      const intervalId = setInterval(() => {\n        getData();\n      }, 10000);\n      clearInterval(intervalId);\n    }\n  })\n\n  useEffect(() => {\n    const getWinnerList = async () => {\n      const winnerListResult = await handlePotWinnerList()\n      if (winnerListResult && Object.keys(winnerListResult).length > 0) {\n        setWinnerListA(winnerListResult.data)\n        setWinnerListMax(winnerListResult.max)\n      }\n    }\n    getWinnerList()\n  }, [fastRefresh, handlePotWinnerList])\n\n  if (totalDeposit && cakeInfo && userInfo)\n  {\n    totalDeposit = new BigNumber(totalDeposit.toString())\n    totalDepositFormatted = getFullDisplayBalance(totalDeposit, 18, 4)\n    const totalDepositedStake = new BigNumber(userInfo.toString())\n    const reward = new BigNumber(cakeInfo.toString())\n    const result = totalDepositedStake.minus(totalDeposit).plus(reward)\n    totalReward = getFullDisplayBalance(result,18,4)\n  }\n\n  // const winners = [\n  //   {\n  //     \"address\": \"0xf3b...5379\",\n  //     \"amount\": 500\n  //   },\n  //   {\n  //     \"address\": \"0xd547...9616\",\n  //     \"amount\": 1000\n  //   }\n  // ]\n\n  return (\n    <>\n      <AutoRow justify='center' style={{padding: '20px 2rem', background: '#E5E5E5'}}>\n        <AutoColumn>\n          <TabBox>\n              <Flex p='1px'>\n                <TabText>\n                  {t(`WINNER`)}\n                </TabText>\n              </Flex>\n          </TabBox>\n        </AutoColumn>\n      </AutoRow>\n      <AutoRow justify='center' style={{padding: '20px 2rem', background: '#E5E5E5'}}>\n        <CardAutoColumn justify=\"space-between\">\n          <StyledCard\n              // isFinished={isFinished && potId !== 0}\n              // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n          >\n            <StyledCardInner style={{background: 'none'}}>\n              <StyledCardHeader\n                  pot={pot}\n                  // potId={potId}\n                  // stakingToken={stakingToken}\n                  // potLabel={potLabel}\n                  // prizeAmount={prizeAmount}\n                  // totalDeposit={totalDeposit}\n                  // expiryDate={expiryDate}\n                  // isFinished={isFinished && potId !== 0}\n              />\n              <WinnerListCardBody style={{background: '#FFFFFF', overflow: 'auto'}}>\n                <Flex flexDirection=\"column\">\n                  <AutoColumn style={{padding: '0 16px'}}>\n                    <RowBetween>\n                      <RowFixed>\n                        <MText>\n                          {t(`#`)}\n                        </MText>\n                      </RowFixed>\n                      <RowFixed>\n                        <MText>\n                          {t(`Address`)}\n                        </MText>\n                      </RowFixed>\n                      <MRowFixed>\n                        <MText>\n                          {t(`Amount`)}\n                        </MText>\n                      </MRowFixed>\n                      <DateRowFixed>\n                        <MText>\n                          {t(`Date`)}\n                        </MText>\n                      </DateRowFixed>\n                    </RowBetween>\n                    {winnerListA.map((winner, i) =>\n                        <LastWinnerList sessionId={(winner.session + 10000).toString()} address={shortenAddress(winner.address)} amount={getFullDisplayBalance(new BigNumber(winner.winnings.toString()),18,4)} symbol={stakingToken.symbol} date={Number(winner.time)} txId={winner.tx_id}/>\n                    )}\n                  </AutoColumn>\n                  <Pagination className=\"pagination-bar\" currentPage={winnerListPage} totalCount={winnerListMax * 10} pageSize={10} onPageChange={page => setWinnerListPage(page)} useWhite={false} />\n                </Flex>\n              </WinnerListCardBody>\n            </StyledCardInner>\n          </StyledCard>\n        </CardAutoColumn>\n      </AutoRow>\n    </>\n  )\n}\n\n\nexport default PotDetailLastWinnerList\n\n\n// return (\n//   <CardsWrapper singleCard={false}>\n//         <StyledCard\n//           // isFinished={isFinished && potId !== 0}\n//           // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n//         >\n//           <StyledCardInner>\n//             <StyledCardHeader\n//               potId={potId}\n//               currency1={currency1}\n//               currency2={currency2}\n//               currency1Name={currency1Name}\n//               currency2Name={currency2Name}\n//               prizeAmount={prizeAmount}\n//               totalDeposit={totalDeposit}\n//               expiryDate={expiryDate}\n//               // isFinished={isFinished && potId !== 0}\n//             />\n//             <CardBody>\n//               <Flex mt=\"24px\" flexDirection=\"column\">\n//                 TODO\n//               </Flex>\n//             </CardBody>\n//             <CardFooter pot={pot} account={account} />\n//           </StyledCardInner>\n//         </StyledCard>\n//         <StyledCard\n//           // isFinished={isFinished && potId !== 0}\n//           // ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n//         >\n//           <StyledCardInner>\n//             <StyledCardHeader\n//               potId={potId}\n//               currency1={currency1}\n//               currency2={currency2}\n//               currency1Name={currency1Name}\n//               currency2Name={currency2Name}\n//               prizeAmount={prizeAmount}\n//               totalDeposit={totalDeposit}\n//               expiryDate={expiryDate}\n//               // isFinished={isFinished && potId !== 0}\n//             />\n//             <CardBody>\n//               <Flex mt=\"24px\" flexDirection=\"column\">\n//                 TODO\n//               </Flex>\n//             </CardBody>\n//             <CardFooter pot={pot} account={account} />\n//           </StyledCardInner>\n//         </StyledCard>\n//   </CardsWrapper>\n// )\n\n// {winnerList.map((winner, i) =>\n// <LastWinnerList sessionId={sessionIdStr} address={shortenAddress(winner)} amount={getFullDisplayBalance(new BigNumber(winAmount[i].toString()),18,4)} symbol={stakingToken.symbol} date={winDate.toNumber()}/>\n// )}","import { useCallback, useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nexport const usePotWinnerList = (_page: number, _address: string) => {\n  const handlePotWinnerList = useCallback(async () => {\n    try {\n      const baseUrl = `${process.env.REACT_APP_DOMAIN_LINK}/jackpot/${_address}/winners/${_page}`\n\n      const response = await axios.get(baseUrl)\n\n      const {data, max} = await response?.data\n      return {\n        \"data\": data,\n        \"max\": max\n      }\n    } catch (e) {\n      return {}\n    }\n  }, [_address, _page])\n\n  return { onPotWinnerList: handlePotWinnerList }\n}","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { AppBody, AppBodyPot } from 'components/App'\nimport FlexLayout from 'components/Layout/Flex'\nimport {RouteComponentProps, Redirect} from \"react-router-dom\";\nimport { usePots } from 'state/pots/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport {getFullDisplayBalance, getFullDisplayBalanceFull} from 'utils/formatBalance'\nimport { useNetworkChainId } from 'state/hooks'\nimport { useERC20 as useERC20Multi } from 'hooks/useContractMulti'\nimport pots from '../../config/constants/pots'\nimport {useJackpotContract, useERC20, useERC20Unsigned} from \"../../hooks/useContract\";\nimport {usePotData} from \"../../contexts/PotDetail\";\nimport PotDepositBanner from \"./components/PotDepositBanner\";\nimport PotDetailWinnerCard from \"./components/PotDetailWinnerCard\";\nimport PotDetailLastWinnerList from \"./components/PotDetailLastWinnerList\";\nimport useActiveWeb3react from \"../../hooks/useActiveWeb3React\"\nimport { useApprovePot } from \"./hooks/useApprove\"\nimport useToast from \"../../hooks/useToast\"\nimport { usePotTotalDeposit } from \"./hooks/usePotTotalDeposit\"\nimport { useStakingTokenBalance } from \"./hooks/useStakingTokenBalance\"\nimport { usePotPancakeChefInfo } from \"./hooks/usePotPancakeChefInfo\"\n\nconst Banner = () => {\n  return (\n    <>\n      <div className='banner-wrapper-area'>\n        <div className='container'>\n          <div className='row align-items-center m-0'>\n            <div className='col-xl-8 col-lg-6 col-md-12 p-0'>\n              <div className='banner-wrapper-content'>\n                <h1>NO LOSS JACKPOT POOL FOR MUSASHI AND CAKE LOVER</h1>\n                <h4>EVERYONE IS A WINNER BY STAKING INTO THE NO LOSS JACKPOT POOL BY HAVING YIELD PROFIT DISTRIBUTED TO WINNERS AND PARTICIPANTS</h4>\n              </div>\n            </div>\n            <div className='col-xl-4 col-lg-6 col-md-12 p-0'>\n              <div className='banner-wrapper-image'>\n                <img src='/images/decor-img.png' alt='banner' />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n\nconst Pot: (props: RouteComponentProps<{ address: string }>) => JSX.Element = (props: RouteComponentProps<{ address: string }>) => {\n\n  const {\n    match: {\n      params: { address }\n    },\n  } = props\n\n  const { t } = useTranslation()\n  const { account } = useWeb3React() \n  const chainId = useNetworkChainId()\n\n  const contract = useJackpotContract(address)\n  const potData = usePotData(contract, address)\n  const _pot = (pots.filter((pot) => pot.potAddress === address))[0]\n  // console.log(potData)\n\n  const { potAddress = \"\", stakingToken = undefined, isClosed = false} = { ..._pot }\n  const stakingTokenAddress = stakingToken && stakingToken.address ? (stakingToken.address[chainId]) : ''\n  // const tokenContract = useERC20Unsigned(getAddress(stakingTokenAddress))\n  const tokenContract = useERC20Multi(stakingTokenAddress)\n\n  const { onPotTotalDeposit: handlePotTotalDeposit } = usePotTotalDeposit(potAddress)\n  const { onStakingTokenBalance: handleStakingTokenBalance } = useStakingTokenBalance(tokenContract, potAddress)\n  const { onPotPancakeChefInfo: handlePotPancakeChefInfo } = usePotPancakeChefInfo(potAddress)\n\n  const [userInfo, setUserInfo] = useState('')\n  const [cakeInfo, setCakeInfo] = useState('')\n  const [potTotalDeposit, setPotTotalDeposit] = useState(new BigNumber(\"0\"))\n  const [potTotalReward, setPotTotalReward] = useState(new BigNumber(\"0\"))\n  const isClosedRef = useRef(isClosed)\n\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const getData = async () => {\n      const potPancakeChefInfo = await handlePotPancakeChefInfo()\n      setUserInfo(potPancakeChefInfo.userInfo.amount)\n      setCakeInfo(potPancakeChefInfo.pendingCake)\n\n      // jackpot staking token balance\n      const potStakingTokenBalanceResult = await handleStakingTokenBalance()\n      const potStakingTokenBalanceBN = new BigNumber(potStakingTokenBalanceResult.toString())\n\n      const potTotalDepositResult = await handlePotTotalDeposit()\n      const potTotalDepositBN = new BigNumber(potTotalDepositResult.toString())\n      if (potTotalDepositBN.isNaN() === false) {\n        setPotTotalDeposit(potTotalDepositBN)\n      }\n\n      const totalDepositedStake = new BigNumber(potPancakeChefInfo.userInfo.amount.toString())\n      const reward = new BigNumber(potPancakeChefInfo.pendingCake.toString())\n      const result = totalDepositedStake.minus(potTotalDepositBN).plus(reward).plus(potStakingTokenBalanceBN)\n      if (result.isPositive()) {\n        setPotTotalReward(isClosedRef.current === false? result : new BigNumber(\"0\"))\n      }\n    }\n    getData()\n  }, [handlePotPancakeChefInfo, handlePotTotalDeposit, handleStakingTokenBalance, fastRefresh])\n\n  return (\n    <>\n      {(contract === null || typeof _pot === 'undefined' || !_pot) && <Redirect to=\"/pot\" />}\n      <AppBodyPot>\n        <PotDepositBanner\n          pot={_pot}\n          potData={potData}\n          account={account}\n          potPrizeTotalDepositData={{\n            \"userInfoData\": userInfo,\n            \"cakeInfoData\": cakeInfo,\n            \"potTotalDepositData\": potTotalDeposit,\n            \"potTotalRewardData\": potTotalReward\n          }}\n        />\n        <PotDetailWinnerCard pot={_pot} potData={potData} account={account} potPrizeTotalDepositData={{\n            \"userInfoData\": userInfo,\n            \"cakeInfoData\": cakeInfo,\n            \"potTotalDepositData\": potTotalDeposit,\n            \"potTotalRewardData\": potTotalReward\n          }} />\n        <PotDetailLastWinnerList pot={_pot} potData={potData} account={account} />\n      </AppBodyPot>\n    </>\n  )\n}\n\nexport default Pot\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const usePotTotalDeposit = (potAddress: string) => {\n  const jackpotContract = useJackpotContract(potAddress)\n\n  const handlePotTotalDeposit = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const result = await jackpotContract.total_deposit()\n      // const receipt = await tx.wait()\n      return result\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return false\n    }\n  }, [jackpotContract])\n\n  return { onPotTotalDeposit: handlePotTotalDeposit }\n}\n\n// uint deposit;\n// uint deposit_timestamp;\n// uint last_claim_block;\n// uint reward_debt;","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useStakingTokenBalance = (tokenContract: Contract, account: string) => {\n  const handleStakingTokenBalance = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const balance = await tokenContract.balanceOf(account)\n      // const receipt = await tx.wait()\n      return balance\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return false\n    }\n  }, [tokenContract, account])\n\n  return { onStakingTokenBalance: handleStakingTokenBalance }\n}","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\n// import { Token } from 'config/constants/types'\n\nexport const usePotPancakeChefInfo = (potAddress: string) => {\n  const jackpotContract = useJackpotContract(potAddress)\n\n  const handlePotPancakeChefInfo = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      // const result = await jackpotContract.total_deposit()\n      // const receipt = await tx.wait()\n      // return result\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n      const masterChefAddress = getMasterChefAddress()\n      const MasterChefCalls = [\n          {\n            address: masterChefAddress,\n            name: 'userInfo',\n            params: [0, potAddress],\n          },\n          {\n            address: masterChefAddress,\n            name: 'pendingCake',\n            params: [0, potAddress],\n          }\n      ]\n    \n      const [ potRawStakedBalances, potRawEarnings ] = await multicall(masterchefABI, MasterChefCalls)\n      return {\n        'userInfo': potRawStakedBalances,\n        'pendingCake': potRawEarnings\n      }\n    } catch (e) {\n      return {\n        'userInfo': new BigNumber(\"0\"),\n        'pendingCake': new BigNumber(\"0\")\n      }\n    }\n  }, [potAddress])\n\n  return { onPotPancakeChefInfo: handlePotPancakeChefInfo }\n}\n\n// uint deposit;\n// uint deposit_timestamp;\n// uint last_claim_block;\n// uint reward_debt;","import React, { useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { CHAIN_ID } from 'config/constants/chains'\nimport tokens from 'config/constants/tokens'\nimport { useAccountTokenBalanceCallback } from 'hooks/useTokenBalance'\nimport { getErc20TokenContract } from 'utils/contractHelperMulti'\nimport { usePotTotalDeposit } from './usePotTotalDeposit'\n\nexport const usePotTotalRewardTotalDeposit = (potAddress: string, chainId: number) => {\n//   const { onAccountTokenBalance : handleAccountTimeTokenBalance } = useAccountTokenBalanceCallback(tokens.time.address[chainId])\n//   const { onAccountTokenBalance : handleAccountMemoTokenBalance } = useAccountTokenBalanceCallback(tokens.memo.address[chainId])\n  \n  const { onPotTotalDeposit: handlePotTotalDeposit } = usePotTotalDeposit(potAddress, chainId)\n\n  const handlePotTotalRewardTotalDeposit = useCallback(async () => {\n      try {\n        // Avax price calculation: (MemoToken.balance(jackpot) + (TIME in jackpot)) - (Jackpot total deposit)\n        if (chainId === CHAIN_ID.AVAX) {\n          const timeContract = getErc20TokenContract(tokens.time.address[chainId], CHAIN_ID.AVAX)\n          const memoContract = getErc20TokenContract(tokens.memo.address[chainId], CHAIN_ID.AVAX)\n          \n          const timeContractBalance = await timeContract.balanceOf(potAddress)\n          const timeContractBalanceBn = new BigNumber(timeContractBalance.toString())\n          const memoContractBalance = await memoContract.balanceOf(potAddress)\n          const memoContractBalanceBN = new BigNumber(memoContractBalance.toString())\n\n        //   const test = await handleAccountTimeTokenBalance(potAddress)\n        //   const test2 = await handleAccountMemoTokenBalance(potAddress)\n\n          const potTotalDepositResult = await handlePotTotalDeposit()\n          const potTotalDepositBN = new BigNumber(potTotalDepositResult.toString())\n          const prizeBN = memoContractBalanceBN.plus(timeContractBalanceBn).minus(potTotalDepositBN)\n    \n          return {\n            totalReward: prizeBN,\n            totalDeposit: potTotalDepositBN\n          }\n        }\n        return {\n            totalReward: new BigNumber(\"0\"),\n            totalDeposit: new BigNumber(\"0\")\n        }\n      } catch (e) {\n          console.error(e)\n          return false\n      }\n  }, [chainId, potAddress, handlePotTotalDeposit])\n\n  return { onPotTotalRewardTotalDeposit : handlePotTotalRewardTotalDeposit }\n}","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\n// import { useCake, useSousChef, useCakeVaultContract, useJackpotContract } from 'hooks/useContract'\nimport { useJackpotContract } from 'hooks/useContractMulti'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const usePotTotalDeposit = (potAddress: string, chainId: number) => {\n  const jackpotContract = useJackpotContract(potAddress, chainId, false)\n\n  const handlePotTotalDeposit = useCallback(async () => {\n    try {\n      // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const result = await jackpotContract.total_deposit()\n      // const receipt = await tx.wait()\n      return result\n\n      // const calls = nonBnbPots.map((p) => ({\n      //   address: getAddress(p.stakingToken.address),\n      //   name: 'balanceOf',\n      //   params: [account],\n      // }))\n      // const tokenBalancesRaw = await multicall(erc20ABI, calls)\n    } catch (e) {\n      return false\n    }\n  }, [jackpotContract])\n\n  return { onPotTotalDeposit: handlePotTotalDeposit }\n}\n\n// uint deposit;\n// uint deposit_timestamp;\n// uint last_claim_block;\n// uint reward_debt;","import { useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'ethers'\nimport { useJackpotWithCheck } from 'hooks/useContractMulti'\n\n// user deposited balance\nexport const useUserDepositedBalance = (potAddress: string, account: string) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n\n  const handleUserDepositedBalance = useCallback(async () => {\n    try {\n      const result = await jackpotContract.player(account)\n      return result.deposit\n    } catch (e) {\n      return false\n    }\n  }, [jackpotContract, account])\n\n  return { onUserDepositedBalance: handleUserDepositedBalance }\n}\n\n// check pot approval\nexport const useCheckApprovePot = (tokenContract: Contract, potAddress: string, account: string) => {\n\n  const handleCheckApprove = useCallback(async () => {\n    try {\n        const result = await tokenContract.allowance(account, potAddress)\n        const allowance = new BigNumber(result.toString())\n        return allowance\n        // const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n        // const receipt = await tx.wait()\n        // return receipt.status\n      } catch (e) {\n        return new BigNumber(\"0\")\n      }\n  }, [tokenContract, account, potAddress])\n\n  return { onCheckApprove: handleCheckApprove }\n}\n\n// user withdraw penalty\nexport const useUserWithdrawPenalty = (potAddress: string, account: string) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n  const handleUserWithdrawPenalty = useCallback(async () => {\n    try {\n      const result = await jackpotContract.getPlayerWithdrawPenalty(account)\n      return result\n    } catch (e) {\n      return false\n    }\n  }, [jackpotContract, account])\n\n  return { onUserWithdrawPenalty: handleUserWithdrawPenalty }\n}\n\n// c=user claiamable\nexport const useUserClaimable = (potAddress: string) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n  \n  const handleUserClaimable = useCallback(async () => {\n    try {\n      const result = await jackpotContract.getClaimable()\n      const claimable = new BigNumber(result.toString())\n      return claimable\n    } catch (e) {\n      return new BigNumber(\"0\")\n    }\n  }, [jackpotContract])\n\n  return { onUserClaimable: handleUserClaimable }\n}","import { Card, Box } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\n\nexport const StyledCard = styled(Card)<{ \n  isFinished?: boolean;\n  minWidth?: string; minWidthMd?: string; minWidthSm?: string;\n  maxWidth?: string; maxWidthMd?: string; maxWidthSm?: string;\n  margin?: string; marginMd?: string; marginSm?: string\n}>`\n  margin: ${({ margin }) => margin === undefined? '0 8px 24px' : margin};\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  border-radius: 5px;\n  background: transparent;\n  box-shadow: none;\n\n  ${({ minWidth }) =>\n    minWidth &&\n      css`\n        min-width: ${minWidth};\n      `\n  }\n  ${({ maxWidth }) =>\n    maxWidth &&\n      css`\n        max-width: ${maxWidth};\n      `\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin: ${({ marginMd }) => marginMd === undefined? '0 8px 24px' : marginMd};\n    display: flex;\n    flex-direction: column;\n    align-self: baseline;\n    position: relative;\n    color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n    border-radius: 5px;\n    background: transparent;\n    box-shadow: none;\n\n    ${({ minWidthMd }) =>\n      minWidthMd &&\n        css`\n          min-width: ${minWidthMd};\n        `\n    }\n    ${({ maxWidthMd }) =>\n      maxWidthMd &&\n        css`\n          max-width: ${maxWidthMd};\n        `\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: ${({ marginSm }) => marginSm === undefined? '15px 12px 16px' : marginSm};\n    ${({ minWidthSm }) =>\n      minWidthSm &&\n        css`\n          min-width: ${minWidthSm};\n        `\n    }\n    ${({ maxWidthSm }) =>\n      maxWidthSm &&\n        css`\n          max-width: ${maxWidthSm};\n        `\n    }\n  }\n`\n\nexport const StyledCardInner = styled(Box)<{ minWidth?: string; minWidthMd?: string }>`\n  background: transparent;\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  ${({ minWidth }) =>\n    minWidth &&\n    css`\n      min-width: ${minWidth};\n    `\n  }\n\n  ${({ minWidthMd, theme }) => \n    minWidthMd &&\n    theme.mediaQueries.md &&\n    css`\n      min-width: ${minWidthMd};\n    `\n  }\n`","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { useTranslation } from 'contexts/Localization'\n\ntype Time = {\n  days   : number,\n  hours  : number,\n  minutes: number,\n  seconds: number\n};\n\nconst Wrapper = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\nconst MobileWrapper = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst CountdownTimer: React.FC<Time> = ({ days, hours, minutes, seconds }) => {\n    // const secStr = zeroPad(seconds)\n    // const secArr = b.split(\"\");\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <div className='tokens-area pb-50'>\n        <div className='container'>\n          <div className='row justify-content-center align-items-center'>\n              <Wrapper className='tokens-content'>\n                <div id='countdown'>\n                  <ul>\n                    <li>\n                      <span id='days' className=\"text-white pot-detail-countdown\">{days}</span><div className=\"text-white text-size-25px\"><strong>{t(\"DAYS\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='hours' className=\"text-white pot-detail-countdown\">{hours}</span><div className=\"text-white text-size-25px\"><strong>{t(\"HR\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='minutes' className=\"text-white pot-detail-countdown\">{minutes}</span><div className=\"text-white text-size-25px\"><strong>{t(\"MIN\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='seconds' className=\"text-white pot-detail-countdown\">{zeroPad(seconds)}</span><div className=\"text-white text-size-25px\"><strong>{t(\"SEC\")}</strong></div>\n                    </li>\n                  </ul>\n                </div>\n              </Wrapper>\n              <MobileWrapper className='mobile-pot-detail-countdown-content'>\n                <div id='countdown'>\n                  <ul>\n                    <li>\n                      <span id='days' className=\"text-white pot-detail-countdown\">{days}</span><div className=\"text-white text-size-17px\"><strong>{t(\"DAYS\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='hours' className=\"text-white pot-detail-countdown\">{hours}</span><div className=\"text-white text-size-17px\"><strong>{t(\"HR\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='minutes' className=\"text-white pot-detail-countdown\">{minutes}</span><div className=\"text-white text-size-17px\"><strong>{t(\"MIN\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='seconds' className=\"text-white pot-detail-countdown\">{zeroPad(seconds)}</span><div className=\"text-white text-size-17px\"><strong>{t(\"SEC\")}</strong></div>\n                    </li>\n                  </ul>\n                </div>\n              </MobileWrapper>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CountdownTimer;\n","import React, { useRef } from 'react'\nimport { CardHeader, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Countdown from 'react-countdown'\nimport CountdownTimer from './CountdownTimer'\n\nconst Wrapper = styled(CardHeader)`\n  background: transparent;\n  borderRadius: 5px;\n  padding: 10px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 0px;\n  }\n`\n\nconst TimerCard: React.FC<{\n  end\n  onLockButtonChange\n  isEnded\n  onIsEndedChange\n  restartCounter\n}> = ({ end, onLockButtonChange, isEnded, onIsEndedChange, restartCounter }) => {\n  const handleLockButtonChange = () => {\n    onIsEndedChange(true)\n    onLockButtonChange(true)\n  }\n\n  const detailCountdownRef = useRef(null)\n  if (detailCountdownRef.current) {\n    const handleCountdownStart = () => detailCountdownRef.current.start()\n    if (restartCounter === true) {\n      if (detailCountdownRef.current.isStarted() === false && detailCountdownRef.current.isCompleted() === false) {\n        handleCountdownStart()\n      }\n    }\n    if (detailCountdownRef.current.isCompleted()) {\n      if (isEnded === false) {\n        onIsEndedChange(true)\n      }\n    } else if (detailCountdownRef.current.isStarted()) {\n      if (isEnded === true) {\n        onIsEndedChange(false)\n      }\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexDirection=\"column\">\n          <Countdown onComplete={() => {handleLockButtonChange()}} date={end} renderer={({ days, hours, minutes, seconds }) => <CountdownTimer\n            days={days}\n            hours={hours}\n            minutes={minutes}\n            seconds={seconds}\n          />} ref={detailCountdownRef} />\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default TimerCard","import React, { useState, useEffect } from 'react';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { useTranslation } from 'contexts/Localization'\n\ntype Time = {\n  hours  : string,\n  minutes: string,\n  seconds: string\n};\n\nconst PenaltyCountdownTimer: React.FC<Time> = ({ hours, minutes, seconds }) => {\n    // const secStr = zeroPad(seconds)\n    // const secArr = b.split(\"\");\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <div className='tokens-area pb-50'>\n        <div className='container'>\n          <div className='row justify-content-center align-items-center'>\n              <div className='penalty-content'>\n                <div id='countdown'>\n                  <ul>\n                    \n                    <li>\n                      <span id='hours' className=\"text-white pot-detail-countdown\">{hours}</span><div className=\"text-white\"><strong>{t(\"HR\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='minutes' className=\"text-white pot-detail-countdown\">{minutes}</span><div className=\"text-white\"><strong>{t(\"MIN\")}</strong></div>\n                    </li>\n                    <li>\n                      <span id='seconds' className=\"text-white pot-detail-countdown\">{zeroPad(seconds)}</span><div className=\"text-white\"><strong>{t(\"SEC\")}</strong></div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PenaltyCountdownTimer;\n","import React, { useEffect, useState, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { MultiPotConfig } from 'config/constants/types'\nimport Countdown from 'react-countdown'\nimport useRefresh from 'hooks/useRefresh'\nimport { Card, CardBody, Flex, Text, CardRibbon, CardHeader, Heading, CardFooter, Box, Button, Input, MetamaskIcon } from '@pancakeswap/uikit'\nimport Column, { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { useNetworkChainId } from 'state/hooks'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance, getFullDisplayBalanceFull } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { useERC20 } from 'hooks/useContractMulti'\nimport { useAccountTokenBalanceCallback } from 'hooks/useTokenBalance'\nimport { useUserDepositedBalance, useCheckApprovePot, useUserWithdrawPenalty, useUserClaimable } from '../hooks/useUserPotInfo'\nimport { useApprovePot, useDepositPots, useWithdrawPots, useClaimPots } from '../hooks/useUserPotAction'\nimport { StyledCard, StyledCardInner } from './styleds'\nimport TimerCard from './TimerCard'\nimport PenaltyTimerCard from './PenaltyTimerCard/CountdownTimer'\n\ninterface PotHeadingProps {\n  asType: string;\n}\n\nconst PotHeading = styled(Heading).attrs((props: PotHeadingProps) => ({\n  as: props.asType\n})) <PotHeadingProps>`\n  font-size: 25px;\n  text-align: center;\n  color: #FFFFFF;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\nconst PotPrizeHeadingText = styled(Text)`\n  font-size: 16px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 18px;\n  }\n`\n\nconst CardAutoColumn = styled(AutoColumn)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst DepositButton = styled(Button)`\n  background-color: #000000;\n  border-radius: 5px;\n  font-size: 25px;\n`\n\nconst TotalDepositText = styled(Text)`\n  font-size: 25px;\n  color: #FFFFFF;\n  font-weight: bold;\n`\nconst UserBalanceText = styled(Text)`\n  font-size: 16px;\n  color: #FFFFFF;\n  font-weight: bold;\n`\n\nconst DepositAmountInput = styled(Input).attrs({\n  placeholderTextColor: \"#000000\"\n})`\n  text-align: center;\n  color: #98A1B9;\n  box-shadow: none;\n  background: #FFFFFF;\n  width: 100%;\n  padding-left: 3rem;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 1px #910101, 0px 0px 0px 4px rgb(145 1 1 / 60%) !important;\n  }\n\n  ::placeholder {\n    color: #910101;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 80%;\n  }\n`\nconst DepositWithdrawInputGroup = styled.div`\n  max-width: 432px;\n`\n\nconst DepositWithdrawalBtnGroup = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n`\nconst DepositWithdrawalBtn = styled(Button)`\n  background: none;\n  border-radius: 5px;\n  font-size: 16px;\n  color: #FFFFFF;\n  box-shadow: none;\n  font-weight: bold;\n  padding: 0 2px 0 2px;\n  word-break: keep-all;\n`\nconst BackBtn = styled(Button)`\n  background: none;\n  border-radius: 5px;\n  font-size: 20px;\n  color: #FFFFFF;\n  box-shadow: none;\n  font-weight: bold;\n  padding: 0 2px 0 2px;\n`\nconst VerticalDivider = styled.div`\n  border-left: 3px solid white;\n  margin: 10px 25px;\n  height: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 70px;\n  }\n`\nconst PrizeTotalDepositFlex = styled(Flex)`\n  flex-direction: row;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\nconst PrizeTotalDepositItemFlex = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\nconst PrizeTotalDepositImg = styled.img`\n  max-width: 50%;\n  min-width: 70.81px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 100%;\n  }\n`\nconst MaxButton = styled(Button)`\n  color: #910101;\n\n  padding-left: 10px;\n  padding-right: 10px;\n  background: #F9F9F9;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 1px #910101, 0px 0px 0px 4px rgb(145 1 1 / 60%) !important;\n  }\n`\nconst ClaimBox = styled(Box)`\n  min-height: 108.8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PotAction: React.FC<{ pot: MultiPotConfig; potData; account: string; potPrizeTotalDepositData }> = ({ pot, potData, account, potPrizeTotalDepositData }) => {\n  const { potAddress = undefined, stakingToken = undefined, earningToken = undefined } = { ...pot }\n  const { sessionId } = potData\n  const sessionIdStr = (sessionId) ? new BigNumber(sessionId.toString()).plus(10000).toString() : \"\"\n  const { potTotalDepositData, potTotalRewardData } = potPrizeTotalDepositData\n  const potTotalDeposit = potTotalDepositData\n  const potTotalReward = potTotalRewardData\n\n  const { t } = useTranslation()\n  const { fastRefresh } = useRefresh()\n  const { toastSuccess, toastError } = useToast()\n  const chainId = useNetworkChainId()\n  let totalDepositFormatted = t(\"Loading...\")\n  let totalReward = t(\"Loading...\")\n  let { end } = potData\n  let userBalanceFormatted = t(\"Loading...\")\n  let userDepositedBalanceFormatted = t(\"Loading...\")\n  let restartCounter = false\n  let endDateStr = ''\n\n  if (!end) {\n    end = Date.now()\n  } else {\n    end = end.toNumber() * 1000\n    restartCounter = true\n    endDateStr = new Date(end).toLocaleString()\n  }\n\n  const tokenInit = {\n    symbol: \"\",\n    address: \"\",\n    decimals: 0\n  }\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const stakingTokenAddress = stakingToken && stakingToken.address ? (stakingToken.address[chainId]) : ''\n  const earningTokenAddress = earningToken && earningToken.address ? (earningToken.address[chainId]) : ''\n  const finalPotAddress = (potAddress) ? potAddress[chainId] : \"\"\n  const stakingTokenSymbolDecimal = stakingToken || tokenInit\n  const earningTokenSymbolDecimal = earningToken || tokenInit\n\n  const tokenContract = useERC20(stakingTokenAddress)\n  const { onAccountTokenBalance: handleAccountTokenBalance } = useAccountTokenBalanceCallback(stakingTokenAddress)\n  const { onUserDepositedBalance: handleUserDepositedBalance } = useUserDepositedBalance(finalPotAddress, account)\n  const { onCheckApprove: handleCheckApprove } = useCheckApprovePot(tokenContract, finalPotAddress, account)\n  const { onUserWithdrawPenalty: handleUserWithdrawPenalty } = useUserWithdrawPenalty(finalPotAddress, account)\n\n  const { onApprove: handleApprove } = useApprovePot(tokenContract, finalPotAddress)\n  const { onDeposit: handleDeposit } = useDepositPots(finalPotAddress, stakingTokenSymbolDecimal.decimals)\n  const { onWithdraw: handleWithdraw } = useWithdrawPots(finalPotAddress, stakingTokenSymbolDecimal.decimals)\n  const { onUserClaimable: handleUserClaimable } = useUserClaimable(finalPotAddress)\n  const { onClaim: handleClaim } = useClaimPots(finalPotAddress)\n\n  const accountRef = useRef(account)\n  const [userBalance, setUserBalance] = useState(new BigNumber(\"0\"))\n  const [UserDepositedBalance, setUserDepositedBalance] = useState(new BigNumber(\"0\"))\n  const [amount, setAmount] = useState(\"\")\n  const [allowance, setAllowance] = useState(new BigNumber(\"0\"))\n  const allowanceRef = useRef(allowance)\n  const [depositOrWithdraw, setDepositOrWithdraw] = useState(\"deposit\")\n  const [lockButton, setLockButton] = useState(false)\n  const [inAction, setInAction] = useState(false)\n  const [isEnded, setIsEnded] = useState(false)\n  const [isApproved, setIsApproved] = useState(false)\n  const isApprovedRef = useRef(isApproved)\n  const [penaltyInfo, setPenaltyInfo] = useState<[boolean, BigNumber, BigNumber]>([false, new BigNumber(Date.now()), new BigNumber(\"0\")])  // [has_penalty, penalty_until, penalty_rate]\n  const [claimable, setClaimable] = useState(new BigNumber(\"0\"))\n\n  const handleLockButtonChange = (lock: boolean) => {\n    setLockButton(lock)\n  }\n\n  const handleIsEndedChange = (ended: boolean) => {\n    setIsEnded(ended)\n  }\n\n  useEffect(() => {\n    const getPenalty = async () => {\n      const result = await handleUserWithdrawPenalty()\n      if (result) {\n        // console.log(result)\n        // console.log(result[1])\n        // console.log(result[2])\n        // console.log(result[2].toString())\n        // console.log(BIG_TEN.pow(tokens.musashi.decimals))\n        // console.log(new BigNumber(result[1].toString()).toString())\n        // console.log(new BigNumber(result[2].toString()))\n        // console.log(new BigNumber(result[2].toString()).div(BIG_TEN.pow(tokens.musashi.decimals)).toString())\n        const milliTime = new BigNumber(result[1].toString()).toNumber() * 1000\n        let penaltyUntil\n        if ((milliTime) <= (Date.now())) {\n          // console.log(`${milliTime} < ${Date.now()}`)\n          penaltyUntil = new BigNumber(Date.now())\n        } else {\n          // console.log(`${milliTime} > ${Date.now()}`)\n          penaltyUntil = new BigNumber(milliTime.toString())\n          // console.log(penaltyUntil.toNumber())\n        }\n        setPenaltyInfo([result[0], penaltyUntil, new BigNumber(result[2].toString()).div(BIG_TEN.pow(earningTokenSymbolDecimal.decimals))])\n      }\n    }\n    getPenalty()\n  }, [handleUserWithdrawPenalty, earningTokenSymbolDecimal.decimals])\n\n  useEffect(() => {\n    // console.log(\"To Top...\")\n    window.scrollTo(0, 0)\n  }, [])\n\n  useEffect(() => {\n    const checkApprove = async () => {\n      const result = await handleCheckApprove()\n      setAllowance(result)\n      allowanceRef.current = result\n      setIsApproved(account && allowanceRef.current && allowanceRef.current.isGreaterThan(0))\n      isApprovedRef.current = (account && allowanceRef.current && allowanceRef.current.isGreaterThan(0))\n    }\n\n    if (account) {\n      if (account !== accountRef.current) {\n        // console.log('SWITCHED ACC')\n        // console.log(`${account} vs ${accountRef.current}`)\n        setIsApproved(false)\n        isApprovedRef.current = false\n      }\n      accountRef.current = account\n      // console.log(`isapproved: ${isApproved}`)\n      if (isApprovedRef.current === false) {\n        // console.log(\"run another useeffect checkapprove\")\n        checkApprove()\n      }\n    } else {\n      // console.log(\"NO ACCOUNT!!!\")\n      setUserBalance(new BigNumber(\"0\"))\n      setIsApproved(false)\n      isApprovedRef.current = false\n    }\n  }, [account, handleCheckApprove])\n\n  useEffect(() => {\n    const getBalance = async () => {\n      const result = await handleAccountTokenBalance(account)\n      const resultBN = new BigNumber(result.toString())\n      if (resultBN.isNaN() === false) {\n        setUserBalance(resultBN)\n      }\n      // console.log(`result: ${result}`)\n    }\n\n    const getUserDepositedBalance = async () => {\n      const result = await handleUserDepositedBalance()\n      const resultBN = new BigNumber(result.toString())\n      if (resultBN.isNaN() === false) {\n        setUserDepositedBalance(resultBN)\n      }\n      // console.log(`result: ${result}`)\n    }\n\n    const getUserClaimable = async () => {\n      const result = await handleUserClaimable()\n      setClaimable(result)\n    }\n\n    if (account) {\n      getBalance()\n      getUserDepositedBalance()\n      getUserClaimable()\n    }\n  }, [handleAccountTokenBalance, handleUserDepositedBalance, handleUserClaimable, account, potAddress, fastRefresh])\n\n  if (potTotalDeposit) {\n    totalDepositFormatted = getFullDisplayBalance(potTotalDeposit, stakingTokenSymbolDecimal.decimals, 4)\n\n    if (potTotalReward.isPositive() && potTotalReward.isNaN() === false) {\n      totalReward = getFullDisplayBalance(potTotalReward, earningTokenSymbolDecimal.decimals, 4)\n    }\n  }\n  userBalanceFormatted = getFullDisplayBalanceFull(userBalance, stakingTokenSymbolDecimal.decimals, 4)\n  userDepositedBalanceFormatted = getFullDisplayBalanceFull(UserDepositedBalance, stakingTokenSymbolDecimal.decimals, 4)\n\n  // handling button lock\n  if (isEnded === true && isApproved === true && depositOrWithdraw === \"deposit\") {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"withdraw\" && UserDepositedBalance.isLessThanOrEqualTo(new BigNumber(\"0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"deposit\" && userBalance.isLessThanOrEqualTo(new BigNumber(\"0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"deposit\" && new BigNumber(amount).isNaN()) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"deposit\" && new BigNumber(amount).isLessThan(new BigNumber(\"0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (isApproved === true && inAction === false && depositOrWithdraw === \"claim\" && claimable.isLessThanOrEqualTo(new BigNumber(\"0\"))) {\n    if (lockButton === false) {\n      setLockButton(true)\n    }\n  } else if (inAction === false && lockButton === true) {\n    setLockButton(false)\n  }\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      // <StakeAction\n      //   stakedBalance={stakedBalance}\n      //   tokenBalance={tokenBalance}\n      //   tokenName={farm.lpSymbol}\n      //   pid={pid}\n      //   addLiquidityUrl={addLiquidityUrl}\n      // />\n      depositOrWithdraw === \"deposit\" ?\n        <DepositButton mt=\"8px\" width=\"100%\" disabled={lockButton} onClick={onClickDeposit}>\n          {t(`DEPOSIT`)}\n        </DepositButton>\n        :\n        depositOrWithdraw === \"withdraw\" ?\n          <DepositButton mt=\"8px\" width=\"100%\" maxWidth=\"432px\" disabled={lockButton} onClick={onClickWithdraw}>\n            {t(`WITHDRAW`)}\n          </DepositButton>\n          :\n          <DepositButton mt=\"8px\" width=\"100%\" disabled={lockButton} onClick={onClickClaim}>\n            {t(`CLAIM`)}\n          </DepositButton>\n\n      // depositOrWithdraw === \"deposit\"? t(`DEPOSIT ${stakingToken.symbol}`) : t(`WITHDRAW ${stakingToken.symbol}`)\n    ) : (\n      <DepositButton mt=\"8px\" width=\"100%\" disabled={lockButton} onClick={onClickApprove}>\n        {t('Approve')}\n      </DepositButton>\n    )\n  }\n\n  const onClickApprove = async () => {\n    setInAction(true)\n    setLockButton(true)\n    try {\n      const status = await handleApprove()\n      if (status) {\n        toastSuccess(\n          t(`Approve Success`),\n          t(`Your wallet has been approved successfully`),\n        )\n        setIsApproved(true)\n      } else {\n        toastError(\n          t(`Approve Failed`),\n          t(`Wallet approval failed, please try again`)\n        )\n        setIsApproved(false)\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const onClickDeposit = async () => {\n    const setToast = (status: boolean) => {\n      if (status) {\n        toastSuccess(\n          t(`Deposit Success`),\n          t(`Deposited successfully`),\n        )\n      } else {\n        toastError(\n          t(`Deposit Failed`),\n          t(`Deposit failed, please try again`)\n        )\n      }\n    }\n    setInAction(true)\n    setLockButton(true)\n    try {\n      if (isEnded === true) {\n        toastError(\n          t(`Deposit Failed`),\n          t(`The pot is closed now`)\n        )\n      } else {\n        const status = await handleDeposit(amount)\n        setToast(status)\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const onClickWithdraw = async () => {\n    setInAction(true)\n    setLockButton(true)\n    try {\n      const status = await handleWithdraw(amount)\n      if (status) {\n        toastSuccess(\n          t(`Withdraw Success`),\n          t(`Withdraw successfully`),\n        )\n      } else {\n        toastError(\n          t(`Withdraw Failed`),\n          t(`Withdraw failed, please try again`)\n        )\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const onClickClaim = async () => {\n    setInAction(true)\n    setLockButton(true)\n    try {\n      const status = await handleClaim()\n      if (status) {\n        toastSuccess(\n          t(`Claim Success`),\n          t(`Claim successfully`),\n        )\n      } else {\n        toastError(\n          t(`Claim Failed`),\n          t(`Claim failed, please try again`)\n        )\n      }\n    } catch (e) {\n      toastError(\n        t(`Transaction Rejected`),\n        t(`Please try again`)\n      )\n    }\n    setInAction(false)\n    setLockButton(false)\n  }\n\n  const setMaxValue = () => {\n    if (depositOrWithdraw === 'deposit') {\n      setAmount(userBalanceFormatted)\n    } else\n      if (depositOrWithdraw === 'withdraw') {\n        setAmount(userDepositedBalanceFormatted)\n      }\n  }\n\n  const withdrawPenaltyCountdownRef = useRef(null)\n  const handleWithdrawPenaltyCountdownStart = () => withdrawPenaltyCountdownRef.current.start()\n  if (withdrawPenaltyCountdownRef.current) {\n    // console.log((withdrawPenaltyCountdownRef.current.isCompleted())? 'compl':'x compl')\n    // console.log((withdrawPenaltyCountdownRef.current.isStopped())? 'stop':'x stop')\n    // console.log((withdrawPenaltyCountdownRef.current.isStarted())? 'start':'x start')\n\n    // const handleCountdownStart = () => withdrawPenaltyCountdownRef.current.start()\n    if (withdrawPenaltyCountdownRef.current.isStarted() === false && withdrawPenaltyCountdownRef.current.isCompleted() === false) {\n      handleWithdrawPenaltyCountdownStart()\n    }\n  }\n\n  return (\n    <AutoRow justify='center' style={{ padding: '20px 2rem', background: 'url(/images/deposit-banner.png?v=1)' }}>\n      <AutoRow>\n        <CardAutoColumn justify=\"space-between\">\n          <DepositWithdrawalBtnGroup>\n            <Link to=\"/pot\">\n              <BackBtn width=\"100%\">\n                <img src=\"/images/back-vector.png\" alt=\"\" />\n                <span style={{ width: '5px' }} />\n                {t(`BACK`)}\n              </BackBtn>\n            </Link>\n          </DepositWithdrawalBtnGroup>\n          <CardBody p=\"0px 24px 0px 24px\">\n            <PrizeTotalDepositFlex mt=\"13px\">\n              <PrizeTotalDepositItemFlex>\n                <PrizeTotalDepositImg src=\"/images/pot-detail-prize-icon.png\" alt=\"prize-icon\" />\n                <Flex flexDirection=\"column\" justifyContent=\"center\">\n                  <PotHeading asType=\"h1\" color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <PotPrizeHeadingText color=\"#FFFFFF\" textAlign={['center', null, null, 'center']} fontWeight=\"bold\" >{t(\"PRIZE\")}</PotPrizeHeadingText>\n                  </PotHeading>\n                  <PotHeading asType=\"h1\" color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <Text color=\"#FFFFFF\" fontSize=\"25px\" textAlign={['center', null, null, 'left']} fontWeight=\"bold\" >{t(`${totalReward} ${stakingTokenSymbolDecimal.symbol}`)}</Text>\n                  </PotHeading>\n                </Flex>\n              </PrizeTotalDepositItemFlex>\n              <VerticalDivider />\n              <PrizeTotalDepositItemFlex>\n                <PrizeTotalDepositImg src=\"/images/pot-detail-deposit-icon.png\" alt=\"deposit-icon\" />\n                <Flex flexDirection=\"column\" justifyContent=\"center\">\n                  <PotHeading asType=\"h1\" color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <PotPrizeHeadingText color=\"#FFFFFF\" textAlign={['center', null, null, 'center']} fontWeight=\"bold\" >{t(\"TOTAL DEPOSIT\")}</PotPrizeHeadingText>\n                  </PotHeading>\n                  <PotHeading asType=\"h1\" color='body' scale=\"lg\" style={{ marginBottom: '0px' }}>\n                    <Text color=\"#FFFFFF\" fontSize=\"25px\" textAlign={['center', null, null, 'left']} fontWeight=\"bold\" >{t(`${totalDepositFormatted} ${stakingTokenSymbolDecimal.symbol}`)}</Text>\n                  </PotHeading>\n                </Flex>\n              </PrizeTotalDepositItemFlex>\n            </PrizeTotalDepositFlex>\n          </CardBody>\n          <Box style={{ margin: 'auto' }}>\n            <DepositWithdrawalBtnGroup>\n              <Box mt=\"1rem\" className=\"text-center\">\n                <DepositWithdrawalBtnGroup>\n                  <DepositWithdrawalBtn className={depositOrWithdraw === 'deposit' ? \"pot-action-selected\" : \"\"} width=\"100%\" onClick={() => setDepositOrWithdraw(\"deposit\")}>\n                    {t(`Deposit`)}\n                  </DepositWithdrawalBtn>\n                  <span style={{ width: '10px', color: '#FFFFFF', fontWeight: 'bold' }} >|</span>\n                  <DepositWithdrawalBtn className={depositOrWithdraw === 'withdraw' ? \"pot-action-selected\" : \"\"} width=\"100%\" onClick={() => setDepositOrWithdraw(\"withdraw\")}>\n                    {t(`Withdraw`)}\n                  </DepositWithdrawalBtn>\n                  <span style={{ width: '10px', color: '#FFFFFF', fontWeight: 'bold' }} >|</span>\n                  <DepositWithdrawalBtn className={depositOrWithdraw === 'claim' ? \"pot-action-selected\" : \"\"} width=\"100%\" onClick={() => setDepositOrWithdraw(\"claim\")}>\n                    {t(`Claim`)}\n                  </DepositWithdrawalBtn>\n                </DepositWithdrawalBtnGroup>\n              </Box>\n            </DepositWithdrawalBtnGroup>\n          </Box>\n        </CardAutoColumn>\n        <CardAutoColumn justify=\"space-between\">\n          <StyledCard>\n            <StyledCardInner>\n              <Flex alignItems=\"center\" justifyContent=\"center\">\n                <TotalDepositText>#{sessionIdStr}</TotalDepositText>\n              </Flex>\n              <TimerCard\n                end={end}\n                onLockButtonChange={handleLockButtonChange}\n                isEnded={isEnded}\n                onIsEndedChange={handleIsEndedChange}\n                restartCounter={restartCounter}\n              />\n            </StyledCardInner>\n            {endDateStr !== '' && <Flex alignItems=\"center\" justifyContent=\"center\">\n              <UserBalanceText>{t('Ends %date%', { date: endDateStr })}</UserBalanceText>\n            </Flex>}\n          </StyledCard>\n        </CardAutoColumn>\n      </AutoRow>\n      <AutoRow>\n        <CardAutoColumn justify=\"space-between\">\n          <StyledCard>\n            <StyledCardInner minWidth=\"287px\" minWidthMd='480px'>\n              {depositOrWithdraw === \"deposit\" || depositOrWithdraw === \"withdraw\" ?\n                <CardBody p=\"24px 24px 0px 24px\">\n                  <Flex flexDirection=\"column\">\n                    <PotHeading asType=\"h3\" color='body' scale=\"lg\">\n                      {depositOrWithdraw === \"deposit\" ? t(`DEPOSIT`) : t(`WITHDRAW`)} {` ${stakingTokenSymbolDecimal.symbol}`}\n                    </PotHeading>\n                  </Flex>\n                  <Flex justifyContent=\"center\" alignItems=\"center\">\n                    <DepositWithdrawInputGroup className=\"input-group mb-3\">\n                      <DepositAmountInput className=\"form-control\" type=\"text\" scale=\"lg\" placeholder={t(\"Enter Amount\")} value={amount} placeholderTextColor=\"red\" onChange={event => setAmount(event.target.value)} />\n                      <MaxButton className=\"btn\" variant=\"text\" id=\"button-addon2\" onClick={() => setMaxValue()}>{t(\"MAX\")}</MaxButton>\n                    </DepositWithdrawInputGroup>\n                  </Flex>\n                  <Box className=\"text-center\">\n                    <TotalDepositText>\n                      {t(`${userDepositedBalanceFormatted} ${stakingTokenSymbolDecimal.symbol}`)}\n                    </TotalDepositText>\n                    <UserBalanceText>\n                      {t(\"Balance\")}: {userBalanceFormatted} {stakingTokenSymbolDecimal.symbol}\n                    </UserBalanceText>\n                  </Box>\n                  <Box mt=\"1rem\" className=\"text-center\">\n                    {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n                    {/* {depositOrWithdraw === \"deposit\" && <Flex justifyContent=\"center\" flexDirection=\"column\" mt=\"1rem\">\n                    <UserBalanceText>{t(\"*Minimum 10 %tokenSymbol%\", { tokenSymbol: stakingTokenSymbolDecimal.symbol})}</UserBalanceText>\n                  </Flex>} */}\n                    {depositOrWithdraw === \"withdraw\" && <Flex justifyContent=\"center\" flexDirection=\"column\" mt=\"1rem\">\n                      <UserBalanceText>{t(\"Early withdrawal within 72 hours will need to incur %penaltyRate%% fee.\", { penaltyRate: penaltyInfo[2].toNumber() * 100 })}</UserBalanceText>\n                      {UserDepositedBalance.gt(new BigNumber(\"0\")) && <Countdown date={penaltyInfo[1].toNumber()} daysInHours ref={withdrawPenaltyCountdownRef} onComplete={handleWithdrawPenaltyCountdownStart} renderer={({ formatted: { hours, minutes, seconds } }) => <PenaltyTimerCard\n                        hours={hours}\n                        minutes={minutes}\n                        seconds={seconds}\n                      />} />}\n                    </Flex>}\n                  </Box>\n                </CardBody>\n                :\n                <CardBody p=\"24px 24px 0px 24px\">\n                  <Flex flexDirection=\"column\">\n                    <PotHeading asType=\"h3\" color='body' scale=\"lg\">\n                      {t(`CLAIM`)}{` ${earningTokenSymbolDecimal.symbol}`}\n                    </PotHeading>\n                  </Flex>\n                  <ClaimBox className=\"text-center\">\n                    <TotalDepositText>\n                      {t(`${getFullDisplayBalanceFull(claimable, earningTokenSymbolDecimal.decimals, 4)} ${earningTokenSymbolDecimal.symbol}`)}\n                    </TotalDepositText>\n                  </ClaimBox>\n                  {account && isMetaMaskInScope && earningTokenAddress && (\n                    <Flex justifyContent=\"center\">\n                      <Button\n                        variant=\"text\"\n                        p=\"0\"\n                        height=\"auto\"\n                        onClick={() => registerToken(earningTokenAddress, earningTokenSymbolDecimal.symbol, earningTokenSymbolDecimal.decimals)}\n                      >\n                        <Text color=\"#FFFFFF\" fontSize=\"13px\">\n                          {t('Add %asset% to Metamask', { asset: earningTokenSymbolDecimal.symbol })}\n                        </Text>\n                        <MetamaskIcon ml=\"4px\" />\n                      </Button>\n                    </Flex>\n                  )}\n                  <Box mt=\"1rem\" className=\"text-center\">\n                    {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n                  </Box>\n                </CardBody>\n              }\n            </StyledCardInner>\n          </StyledCard>\n        </CardAutoColumn>\n      </AutoRow>\n    </AutoRow>\n  )\n}\n\nexport default PotAction\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useJackpotWithCheck } from 'hooks/useContractMulti'\nimport { depositPot, withdrawPot, claimPot } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nexport const useApprovePot = (tokenContract: Contract, potAddress: string) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.approve(jackpotContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [tokenContract, jackpotContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useDepositPots = (potAddress: string, decimals) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n\n  // new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString()\n  const handleDeposit = useCallback(\n    async (amount: string) => {\n      console.log(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n      const txHash = await depositPot(jackpotContract, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n      console.info(txHash)\n      return txHash\n    },\n    [decimals, jackpotContract],\n  )\n  \n  return { onDeposit: handleDeposit }\n}\n\nexport const useWithdrawPots = (potAddress: string, decimals) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n\n  const handleWithdraw = useCallback(\n    async (amount: string) => {\n      const txHash = await withdrawPot(jackpotContract, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n      console.info(txHash)\n      return txHash\n    },\n    [decimals, jackpotContract],\n  )\n  \n  return { onWithdraw: handleWithdraw }\n}\n\nexport const useClaimPots = (potAddress: string) => {\n  // const masterChefContract = useMasterchef()\n  const jackpotContract = useJackpotWithCheck(potAddress)\n\n  const handleClaim = useCallback(\n    async () => {\n      const txHash = await claimPot(jackpotContract)\n      console.info(txHash)\n      return txHash\n    },\n    [jackpotContract],\n  )\n\n  return { onClaim: handleClaim }\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, LinkExternal } from '@pancakeswap/uikit'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useNetworkChainId } from 'state/hooks'\nimport { BLOCK_EXPLORER } from 'config/constants/chains'\n\nconst MText = styled(Text)`\n  color: #FFFFFF;\n  font-size: 13px;\n  font-weight: bold;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 16px;\n  }\n`\nconst AddressRowFixed = styled(RowFixed)`\n  margin-right: 15px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 0px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\n\nfunction DepositListRow({ address, amount, symbol, date, txId }: { address: string; amount: string, symbol: string, date: string, txId: string }) {\n  const { t } = useTranslation()\n  const chainId = useNetworkChainId()\n\n  // const d = Date.parse('2021-08-19T03:54:30.000Z')\n  // console.log({d})\n  // console.log(new Date(d).toLocaleString())\n\n  const dateFormat: Intl.DateTimeFormatOptions = {\n    month: '2-digit', // numeric, 2-digit, long, short, narrow\n    day: 'numeric', // numeric, 2-digit\n    year: 'numeric', // numeric, 2-digit\n    hour: '2-digit', // numeric, 2-digit\n    minute: 'numeric', // numeric, 2-digit\n    second: 'numeric', // numeric, 2-digit\n  }\n  // const dateMs = Date.parse(date)\n  const dateStr = new Date(+date * 1000).toLocaleString(undefined, dateFormat)\n\n  return (\n    <RowBetween>\n      <AddressRowFixed>\n        <MText>\n          {`${address}`}\n        </MText>\n      </AddressRowFixed>\n      <RowFixed>\n        {/* <LinkExternal color=\"white\" external href={`${BLOCK_EXPLORER[chainId]}/tx/${txId}`}> */}\n          <MText >\n            {`${amount} ${symbol}`}\n          </MText>\n        {/* </LinkExternal> */}\n      </RowFixed>\n      <DateRowFixed>\n        <MText>\n          {`${dateStr}`}\n        </MText>\n      </DateRowFixed>\n    </RowBetween>\n  )\n}\n\nexport default DepositListRow\n","import { useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'ethers'\nimport multicall from 'utils/multicallMulti'\nimport jackpotAvaxAbi from 'config/abi/jackpot_abi_avax.json'\nimport { useJackpotWithCheck } from 'hooks/useContractMulti'\n\nconst paginationOnPageNumber = (array: Array<any>, pageSize: number, pageNumber: number) => {\n  return array.slice((pageNumber - 1) * pageSize, pageNumber * pageSize)\n}\nconst calculatePagesCount = (pageSize: number, totalCount: number) => {\n  // we suppose that if we have 0 items we want 1 empty page\n  return totalCount < pageSize ? 1 : Math.ceil(totalCount / pageSize);\n};\n\nexport const usePotDepositList = (potAddress: string, pageSize = 10, pageNumber: number, chainId: number) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n\n  const handlePotDepositList = useCallback(async () => {\n    try {\n      // total count\n      const result = await jackpotContract.deposit_id()\n      const totalCountBN = new BigNumber(result.toString())\n      const totalCount = (totalCountBN.isNaN() === false)? totalCountBN.toNumber() : 0\n\n      // enumeration\n      const depositIdArr = Array.from(Array(totalCount).keys())\n\n      // get ids based on page number\n      const currentPageIdsArr = paginationOnPageNumber(depositIdArr, pageSize, pageNumber)\n\n      // multicall for ids\n      const calls = currentPageIdsArr.map((id) => ({\n        address: (jackpotContract.address),\n        name: 'deposit_log',\n        params: [id],\n      }))\n\n      const depositIdInfo = await multicall(chainId, jackpotAvaxAbi, calls)\n        // 0: address: account\n        // 1: uint256: session_id\n        // 2: uint256: amount\n        // 3: uint256: timestamp\n        // 4: uint256: block_no\n      const processedDepositIdInfo = [\n        ...depositIdInfo.map((id, index) => ({\n          tx_id: index,\n          player: depositIdInfo[index][0],\n          sessionId: new BigNumber(depositIdInfo[index][1].toString()).toJSON(),\n          amount: new BigNumber(depositIdInfo[index][2].toString()).toJSON(),\n          created_at: new BigNumber(depositIdInfo[index][3].toString()).toJSON(),\n          block_no: new BigNumber(depositIdInfo[index][4].toString()).toJSON()\n        })),\n      ]\n      const revProcessedDepositIdInfo = processedDepositIdInfo.reverse()\n\n      return {\n        data: revProcessedDepositIdInfo,\n        max: calculatePagesCount(pageSize, totalCount)\n      }\n\n    } catch (e) {\n      return {}\n    }\n  }, [jackpotContract, pageSize, pageNumber, chainId])\n\n  return { onPotDepositList: handlePotDepositList }\n}\n\nexport const usePotWinnerList = (potAddress: string, pageSize = 10, pageNumber: number, chainId: number) => {\n  const jackpotContract = useJackpotWithCheck(potAddress)\n\n  const handlePotWinnerList = useCallback(async () => {\n    try {// session id\n      const sessionId = await jackpotContract.session_id()\n      const sessionIdBN = sessionId? new BigNumber(sessionId.toString()) : new BigNumber(\"0\")\n      const previousSessionId = sessionIdBN.isEqualTo(0)? 0 : sessionIdBN.minus(1).toNumber()\n\n      // enumeration\n      const prevSessionIdArr = Array.from(Array(sessionIdBN.toNumber()).keys())\n\n      // get ids based on page number\n      const currentPageIdsArr = paginationOnPageNumber(prevSessionIdArr, pageSize, pageNumber)\n\n      // multicall for ids\n      const calls = currentPageIdsArr.map((id) => ({\n        address: (jackpotContract.address),\n        name: 'getCompleteHistory',\n        params: [id],\n      }))\n      const prevSessionIdInfo = await multicall(chainId, jackpotAvaxAbi, calls)\n      \n      // 0: uint256: _num_winner\n      // 1: uint256: randomness\n      // 2: address[]: winners\n      // 3: uint256[]: amounts\n      // 4: uint256: timestamp 1647593170\n      const processedWinnerList = prevSessionIdInfo.map((id, mapIndex) => (\n          id[2].map((winner, index) => ({\n            session: mapIndex,\n            address: winner,\n            winnings: new BigNumber(id[3][index].toString()).toJSON(),\n            time: new BigNumber(id[4].toString()).toJSON(),\n          }))\n        )\n      ).reduce((prev, curr) => [... prev, ...curr])\n      const revProcessedWinnerList = processedWinnerList.reverse()\n\n      const totalCountBN = prevSessionIdInfo.map((id) => new BigNumber(id[0].toString())).reduce(\n        (prev: BigNumber, curr: BigNumber) => prev.plus(curr)\n      )\n      const totalCount = (totalCountBN.isNaN() === false)? totalCountBN.toNumber() : 0\n\n      return {\n        data: revProcessedWinnerList,\n        max: calculatePagesCount(pageSize, totalCount)\n      }\n    } catch (e) {\n      return {}\n    }\n  }, [jackpotContract, pageSize, pageNumber, chainId])\n\n  return { onPotWinnerList : handlePotWinnerList }\n}","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport useRefresh from 'hooks/useRefresh'\nimport { CardBody, Flex, Text, CardRibbon, CardHeader, Heading, CardFooter, useModal, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Pagination from 'components/Pagination/Pagination'\nimport {getFullDisplayBalance, getFullDisplayBalanceFull} from 'utils/formatBalance'\nimport { MultiPotConfig } from 'config/constants/types'\nimport { useNetworkChainId } from 'state/hooks'\nimport { shortenAddress } from 'utils'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useUserDepositedBalance } from '../../hooks/useUserPotInfo'\nimport { StyledCard, StyledCardInner } from '../styleds'\nimport DepositListRow from './DepositListRow'\nimport { usePotDepositList } from '../../hooks/usePotDepositWinnerList'\n\nconst PotInfoText = styled(Text)`\n  font-size: 16px;\n  font-weight: bold;\n  color: #FFFFFF;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 22px;\n  }\n`\nconst PotRewardInfoText = styled(Text)`\n  font-size: 11px;\n  font-weight: bold;\n  color: #FFFFFF;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 17px;\n  }\n`\nconst CardAutoColumn = styled(AutoColumn)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst MText = styled(Text)`\n  color: #FFFFFF;\n  font-size: 18px !important;\n  font-weight: bold;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 25px;\n  }\n`\nconst PotDetailCardBody = styled(CardBody)`\n  padding: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\nconst DepositListCardBody = styled(CardBody)`\n  padding: 24px 0px;\n  background: #333333;\n  overflow: auto;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\nconst DepositListCardHeader = styled(CardHeader)`\n  background: #525252;\n  border-radius: 5px 5px 0 0;\n  padding: 15px;\n`\nconst PotDepositHeading = styled(Heading).attrs({ as: 'h3' })`\n  font-size: 25px;\n  text-align: center;\n  color: #FFFFFF;\n  padding-bottom: 0px;\n  margin-bottom: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 30px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\nconst MRowFixed = styled(RowFixed)`\n  margin-right: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 90px;\n  }\n`\n\nconst PotDetailDepositList: React.FC<{ pot: MultiPotConfig; potData; account: string; potPrizeTotalDepositData }> = ({pot, potData, account, potPrizeTotalDepositData}) => {\n  const { t } = useTranslation()\n  const chainId = useNetworkChainId()\n  const { potAddress = undefined, stakingToken = undefined, earningToken = undefined } = { ...pot }\n  const { fastRefresh } = useRefresh()\n  const { potTotalDepositData, potTotalRewardData  } = potPrizeTotalDepositData\n  const potTotalDeposit = potTotalDepositData\n  const potTotalReward = potTotalRewardData\n\n  const tokenInit = {\n    symbol: \"\",\n    address: \"\",\n    decimals: 0\n  }\n  // const stakingTokenAddress = stakingToken && stakingToken.address ? (stakingToken.address[chainId]) : ''\n  // const earningTokenAddress = earningToken && earningToken.address ? (earningToken.address[chainId]) : ''\n  const finalPotAddress = (potAddress)? potAddress[chainId] : \"\"\n  const stakingTokenSymbolDecimal = stakingToken || tokenInit\n  const earningTokenSymbolDecimal = earningToken || tokenInit\n\n  const { onUserDepositedBalance: handleUserDepositedBalance } = useUserDepositedBalance(finalPotAddress, account)\n\n  let totalDepositFormatted = t(\"Loading...\")\n  let totalReward = t(\"Loading...\")\n  let firstWinnerFormatted = t(\"Loading...\")\n  let secondWinnerFormatted = t(\"Loading...\")\n  let thirdWinnerFormatted = t(\"Loading...\")\n  let platformFormatted = t(\"Loading...\")\n  let participantFormatted = t(\"Loading...\")\n\n  const winnerFiatFormatted = t(\"Loading...\")\n  const musPoolFiatFormatted = t(\"Loading...\")\n  const referralFiatFormatted = t(\"Loading...\")\n  const devPoolFiatFormatted = t(\"Loading...\")\n  const participantFiatFormatted = t(\"Loading...\")\n\n  const [userProbability, setUserProbability] = useState(new BigNumber(\"0\"))\n  const [depositListCurrentPage, setDepositListCurrentPage] = useState(1)\n  const [depositListMax, setDepositListMax] = useState(0)\n  const [depositList, setDepositList] = useState([])\n\n  const { onPotDepositList: handlePotDepositList } = usePotDepositList(finalPotAddress, 10, depositListCurrentPage, chainId)\n\n  const calculateRewardsContribution = () => {\n    // in token\n    const firstWinner = potTotalReward.times(0.45)\n    const secondWinner = potTotalReward.times(0.20)\n    const thirdWinner = potTotalReward.times(0.15)\n    const platform = potTotalReward.times(0.05)\n    const participant = potTotalReward.times(0.20)\n\n    firstWinnerFormatted = getFullDisplayBalanceFull(firstWinner, earningTokenSymbolDecimal.decimals, 4)\n    secondWinnerFormatted = getFullDisplayBalanceFull(secondWinner, earningTokenSymbolDecimal.decimals, 4)\n    thirdWinnerFormatted = getFullDisplayBalanceFull(thirdWinner, earningTokenSymbolDecimal.decimals, 4)\n    platformFormatted = getFullDisplayBalanceFull(platform, earningTokenSymbolDecimal.decimals, 4)\n    participantFormatted = getFullDisplayBalanceFull(participant, earningTokenSymbolDecimal.decimals, 4)\n  }\n\n  useEffect(() => {\n    const calculateWinRate = async (totalDepositBN: BigNumber) => {\n      const result = await handleUserDepositedBalance()\n      const userDepositedBalanceBN = new BigNumber(result.toString())\n      const winRate = (userDepositedBalanceBN.div(totalDepositBN)).times(100)\n      if (winRate.isNaN() === false && winRate.isFinite() === true) {\n        setUserProbability(winRate)\n      }\n    }\n    const getDepositList = async () => {\n      const depositListResult = await handlePotDepositList()\n      if (depositListResult && Object.keys(depositListResult).length > 0) {\n        setDepositList(depositListResult.data)\n        setDepositListMax(depositListResult.max)\n      }\n    }\n  \n    getDepositList()\n    calculateWinRate(potTotalDeposit)\n  }, [handleUserDepositedBalance, handlePotDepositList, potTotalDeposit, fastRefresh])\n\n  if (potTotalDeposit)\n  {\n    totalDepositFormatted = getFullDisplayBalance(potTotalDeposit, stakingTokenSymbolDecimal.decimals, 4)\n\n    if (potTotalReward.isPositive() && potTotalReward.isNaN() === false) {\n      totalReward = getFullDisplayBalance(potTotalReward, earningTokenSymbolDecimal.decimals, 4)\n      calculateRewardsContribution()\n    }\n  }\n\n  const amountFormat = (amount: string) => {\n    const amountArr = amount.split(\".\")\n    console.log(amountArr)\n    amountArr[1] = amountArr[1].substr(0, 4)\n    const formattedAmount = amountArr.join(\".\")\n    return formattedAmount\n  }\n\n  return (\n    <AutoRow justify='center' style={{padding: '20px 2rem', background: '#000000'}}>\n      <CardAutoColumn justify=\"space-between\">\n        <StyledCard minWidth='23px' maxWidth='440px' marginSm='00 12px 16px' minWidthSm='470px' maxWidthSm='490px'>\n          <StyledCardInner>\n            <PotDetailCardBody>\n              <Flex flexDirection=\"column\">\n                <AutoColumn style={{padding: '0 0px'}}>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotInfoText>\n                        {t('Total Deposit')}\n                      </PotInfoText>\n                    </RowFixed>\n                    <RowFixed>\n                      <PotInfoText>\n                        {`${totalDepositFormatted} ${stakingTokenSymbolDecimal.symbol}`}\n                      </PotInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed />\n                    {/* <RowFixed>\n                      <PotInfoText style={{fontSize: '17px'}}>{`(~$${getFullDisplayBalance(potTotalDeposit.times(1), 18, 2)})`}</PotInfoText>\n                    </RowFixed> */}\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotInfoText>\n                        {t('Total Rewards')}\n                      </PotInfoText>\n                    </RowFixed>\n                    <RowFixed>\n                      <PotInfoText>\n                        {`${totalReward} ${stakingTokenSymbolDecimal.symbol}`}\n                      </PotInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed />\n                    {/* <RowFixed>\n                      <PotInfoText style={{fontSize: '17px'}}>{`(~$${getFullDisplayBalance(potTotalReward.times(1), 18, 2)})`}</PotInfoText>\n                    </RowFixed> */}\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotInfoText>\n                        {t('Your Probability')}\n                      </PotInfoText>\n                    </RowFixed>\n                    <RowFixed>\n                      <PotInfoText>\n                        {`${userProbability.toFixed(4)} %`}\n                      </PotInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                </AutoColumn>\n                <AutoColumn style={{padding: '0 0px', marginTop: '10px'}}>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotRewardInfoText style={{textDecoration: 'underline'}}>\n                        {t('Rewards Contribution')}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        40% {t('First Place')}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        {`${firstWinnerFormatted} ${stakingTokenSymbolDecimal.symbol}`}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        20% {t(`Second Place`)}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        {`${secondWinnerFormatted} ${earningTokenSymbolDecimal.symbol}`}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        15% {t('Third Place')}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        {`${thirdWinnerFormatted} ${earningTokenSymbolDecimal.symbol}`}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        5% {t(`Platform`)}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        {`${platformFormatted} ${stakingTokenSymbolDecimal.symbol}`}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                  <RowBetween>\n                    <RowFixed>\n                      <PotRewardInfoText>\n                        20% {t('All Participant')}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                    <RowFixed style={{marginLeft: '5px'}}>\n                      <PotRewardInfoText>\n                        {`${participantFormatted} ${stakingTokenSymbolDecimal.symbol}`}\n                      </PotRewardInfoText>\n                    </RowFixed>\n                  </RowBetween>\n                </AutoColumn>\n              </Flex>\n            </PotDetailCardBody>\n          </StyledCardInner>\n        </StyledCard>\n      </CardAutoColumn>\n      <CardAutoColumn justify=\"space-between\">\n        <StyledCard maxWidth='440px' margin='0 0px 24px' minWidthMd='690px' maxWidthMd='690px' maxWidthSm='440px'>\n          <StyledCardInner>\n            <DepositListCardHeader>\n              <Flex alignItems=\"center\" justifyContent=\"center\">\n                <PotDepositHeading color='body' scale=\"lg\">\n                  {t(`DEPOSIT LIST`)}\n                </PotDepositHeading>\n              </Flex>\n            </DepositListCardHeader>\n            <DepositListCardBody>\n              <Flex flexDirection=\"column\">\n                <AutoColumn style={{padding: '0 16px'}}>\n                  <RowBetween>\n                    <RowFixed>\n                      <MText>\n                        {t(`Address`)}\n                      </MText>\n                    </RowFixed>\n                    <MRowFixed>\n                      <MText>\n                        {t(`Amount`)}\n                      </MText>\n                    </MRowFixed>\n                    <DateRowFixed>\n                      <MText>\n                        {t(`Date`)}\n                      </MText>\n                    </DateRowFixed>\n                  </RowBetween>\n                  {depositList.map((deposit, i) =>\n                    <DepositListRow key={deposit.tx_id} address={shortenAddress(deposit.player)} amount={getFullDisplayBalance(deposit.amount, stakingTokenSymbolDecimal.decimals, 4)} symbol={stakingTokenSymbolDecimal.symbol} date={deposit.created_at} txId={deposit.tx_id}/>\n                  )}\n                </AutoColumn>\n                <Pagination className=\"pagination-bar\" currentPage={depositListCurrentPage} totalCount={depositListMax * 10} pageSize={10} onPageChange={page => setDepositListCurrentPage(page)} useWhite />\n              </Flex>\n            </DepositListCardBody>\n          </StyledCardInner>\n        </StyledCard>\n      </CardAutoColumn>\n    </AutoRow>\n  )\n}\n\nexport default PotDetailDepositList","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, LinkExternal } from '@pancakeswap/uikit'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useNetworkChainId } from 'state/hooks'\nimport { BLOCK_EXPLORER } from 'config/constants/chains'\n\nconst MText = styled(Text)`\n  color: #000000;\n  font-size: 13px !important;\n  font-weight: bold;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 18px !important;\n  }\n`\nconst AddressRowFixed = styled(RowFixed)`\n  margin-right: 10px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 0px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\n\nfunction LastWinnerList({ sessionId, address, amount, symbol, date, txId }: { sessionId: string, address: string; amount: string, symbol: string, date: number, txId: string }) {\n  const { t } = useTranslation()\n  const chainId = useNetworkChainId()\n\n  // const dateStr = new Date(date).toLocaleString()\n  // can use new Intl.DateTimeFormat(locale, options).format(date) as well\n  const dateFormat: Intl.DateTimeFormatOptions = {\n    month: '2-digit', // numeric, 2-digit, long, short, narrow\n    day: 'numeric', // numeric, 2-digit\n    year: 'numeric', // numeric, 2-digit\n    hour: '2-digit', // numeric, 2-digit\n    minute: 'numeric', // numeric, 2-digit\n    second: 'numeric', // numeric, 2-digit\n  }\n  const dateStr = new Date(date * 1000).toLocaleString(undefined, dateFormat)\n\n  return (\n    <RowBetween>\n      <AddressRowFixed>\n        <MText>\n          {`#${sessionId}`}\n        </MText>\n      </AddressRowFixed>\n      <AddressRowFixed>\n        <MText>\n          {`${address}`}\n        </MText>\n      </AddressRowFixed>\n      <RowFixed>\n        {/* <LinkExternal external href={`${BLOCK_EXPLORER[chainId]}/tx/${txId}`}> */}\n          <MText >\n            {`${amount} ${symbol}`}\n          </MText>\n        {/* </LinkExternal> */}\n      </RowFixed>\n      <DateRowFixed>\n        <MText>\n          {`${dateStr}`}\n        </MText>\n      </DateRowFixed>\n    </RowBetween>\n  )\n}\n\nexport default LastWinnerList\n","import BigNumber from 'bignumber.js'\nimport React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport useRefresh from 'hooks/useRefresh'\nimport Pagination from 'components/Pagination/Pagination'\nimport { CardBody, Flex, Text, CardRibbon, CardHeader, Heading, CardFooter, Card, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { shortenAddress } from 'utils'\nimport { useNetworkChainId } from 'state/hooks'\nimport { MultiPotConfig } from 'config/constants/types'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport { StyledCard, StyledCardInner } from '../styleds'\nimport LastWinnerList from './LastWinnerList'\nimport { usePotWinnerList } from '../../hooks/usePotDepositWinnerList'\n\nconst StyledAutoRow = styled(AutoRow)`\n  padding: 20px 2rem;\n  background: #E5E5E5;\n  justify-content: center;\n`\nconst TabBox = styled(Box)`\n  border-bottom: 3px solid #910101;\n`\nconst TabText = styled(Text)`\n  color: #262626;\n  font-weight: bold;\n  font-size: 25px;\n`\nconst MText = styled(Text)`\n  color: #000000;\n  font-weight: bold;\n`\nconst CardAutoColumn = styled(AutoColumn)`\n  margin-left: auto;\n  margin-right: auto;\n`\nconst WinnerCardHeader = styled(CardHeader)`\n  background: transparent;\n  border-radius: 5px 5px 0 0;\n  padding-top: 0px;\n`\nconst TrophyImg = styled.img`\n  max-width: 50%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 100%;\n  }\n`\nconst WinnerListCardBody = styled(CardBody)`\n  padding: 24px 0px;\n  background: #FFFFFF;\n  overflow: auto\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\nconst MRowFixed = styled(RowFixed)`\n  margin-right: 0px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 90px;\n  }\n`\nconst DateRowFixed = styled(RowFixed)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\n\nconst PotWinnerList: React.FC<{ pot: MultiPotConfig; potData; account: string }> = ({pot, potData, account}) => {\n  const { t } = useTranslation()\n  const { slowRefresh } = useRefresh()\n  const { potAddress = undefined, stakingToken = undefined, earningToken = undefined } = { ...pot }\n  const chainId = useNetworkChainId()\n\n  const tokenInit = {\n    symbol: \"\",\n    address: \"\",\n    decimals: 0\n  }\n  const finalPotAddress = (potAddress)? potAddress[chainId] : \"\"\n  const stakingTokenSymbolDecimal = stakingToken || tokenInit\n  const earningTokenSymbolDecimal = earningToken || tokenInit\n\n  const [winnerList, setWinnerList] = useState([])\n  const [winnerListPage, setWinnerListPage] = useState(1)\n  const [winnerListMax, setWinnerListMax] = useState(0)\n\n\n  const { onPotWinnerList : handlePotWinnerList } = usePotWinnerList(finalPotAddress, 10, winnerListPage, chainId)\n\n  useEffect(() => {\n    const getWinnerList = async () => {\n      const winnerListResult = await handlePotWinnerList()\n      if (winnerListResult && Object.keys(winnerListResult).length > 0) {\n        setWinnerList(winnerListResult.data)\n        setWinnerListMax(winnerListResult.max)\n      }\n    }\n    getWinnerList()\n  }, [handlePotWinnerList])\n\n  return (\n    <>\n      <AutoRow justify='center' style={{padding: '20px 2rem', background: '#E5E5E5'}}>\n        <AutoColumn>\n          <TabBox>\n              <Flex p='1px'>\n                <TabText>\n                  {t(`WINNER`)}\n                </TabText>\n              </Flex>\n          </TabBox>\n        </AutoColumn>\n      </AutoRow>\n      <StyledAutoRow>\n        <CardAutoColumn justify=\"space-between\">\n          <StyledCard minWidth='230px' maxWidth='440px' marginSm='0 12px 16px' minWidthSm='680px'>\n            <StyledCardInner>\n              <WinnerCardHeader>\n                <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                  <TrophyImg src=\"/images/trophy.png\" width=\"auto\" height=\"auto\" alt=\"\" />\n                </Flex>\n              </WinnerCardHeader>\n              <WinnerListCardBody>\n                <Flex flexDirection=\"column\">\n                  <AutoColumn style={{padding: '0 16px'}}>\n                    <RowBetween>\n                      <RowFixed>\n                        <MText>\n                          {t(`#`)}\n                        </MText>\n                      </RowFixed>\n                      <RowFixed>\n                        <MText>\n                          {t(`Address`)}\n                        </MText>\n                      </RowFixed>\n                      <MRowFixed>\n                        <MText>\n                          {t(`Amount`)}\n                        </MText>\n                      </MRowFixed>\n                      <DateRowFixed>\n                        <MText>\n                          {t(`Date`)}\n                        </MText>\n                      </DateRowFixed>\n                    </RowBetween>\n                    {winnerList.map((winner, i) =>\n                        <LastWinnerList sessionId={(winner.session + 10000).toString()} address={shortenAddress(winner.address)} amount={getFullDisplayBalance(new BigNumber(winner.winnings.toString()), earningTokenSymbolDecimal.decimals, 4)} symbol={stakingTokenSymbolDecimal.symbol} date={Number(winner.time)} txId={winner.tx_id}/>\n                    )}\n                  </AutoColumn>\n                  <Pagination className=\"pagination-bar\" currentPage={winnerListPage} totalCount={winnerListMax * 10} pageSize={10} onPageChange={page => setWinnerListPage(page)} useWhite={false} />\n                </Flex>\n              </WinnerListCardBody>\n            </StyledCardInner>\n          </StyledCard>\n        </CardAutoColumn>\n      </StyledAutoRow>\n    </>\n  )\n}\n\nexport default PotWinnerList","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react'\nimport { RouteComponentProps, Redirect, useHistory } from \"react-router-dom\";\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport useRefresh from 'hooks/useRefresh'\nimport { AppBodyPot } from 'components/App'\nimport { useJackpotWithCheck } from 'hooks/useContractMulti'\nimport pots from 'config/constants/potsMulti'\nimport { useNetworkChainId } from 'state/hooks'\nimport { usePotData } from \"../../contexts/PotDetail\";\nimport { usePotTotalRewardTotalDeposit } from './hooks/usePotTotalRewardTotalDeposit'\nimport PotAction from './components/PotAction'\nimport PotDetailDepositList from './components/PotDetailDepositList'\nimport PotWinnerList from './components/PotWinnerList'\n\nconst PotDetailMulti: (props: RouteComponentProps<{ address: string }>) => JSX.Element = (props: RouteComponentProps<{ address: string }>) => {\n  const {\n    match: {\n      params: { address }\n    }\n  } = props\n\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const chainId = useNetworkChainId()\n  const history = useHistory()\n\n  const contract = useJackpotWithCheck(address)\n  const potData = usePotData(contract, address)\n  const _pot = (pots.filter((pot) => pot.potAddress[chainId] === address))[0]\n  const { potId = 0, potAddress = \"\", isClosed = false } = {..._pot}\n  const [potTotalDeposit, setPotTotalDeposit] = useState(new BigNumber(\"0\"))\n  const [potTotalReward, setPotTotalReward] = useState(new BigNumber(\"0\"))\n  const isClosedRef = useRef(isClosed)\n\n  const { onPotTotalRewardTotalDeposit : handlePotTotalRewardTotalDeposit } = usePotTotalRewardTotalDeposit((potAddress)? potAddress[chainId] : \"\", chainId)\n\n  useEffect(() => {\n    const checkValid = () => {\n      if (typeof _pot === 'undefined' || !_pot) {\n        // history.push('/pot')\n        return <Redirect to=\"/pot\" />\n      }\n      return undefined;\n    }\n    checkValid()\n  }, [_pot])\n\n  useEffect(() => {\n    const getTotalRewardTotalDeposit = async () => {\n      const potTotalRewardResult = await handlePotTotalRewardTotalDeposit()\n      if (potTotalRewardResult && Object.keys(potTotalRewardResult).length > 0) {\n        if (potTotalRewardResult.totalReward.isNaN() === false && potTotalRewardResult.totalReward.isPositive()) {\n          setPotTotalReward(potTotalRewardResult.totalReward)\n        }\n        if (potTotalRewardResult.totalDeposit.isNaN() === false) {\n          setPotTotalDeposit(potTotalRewardResult.totalDeposit)\n        }\n      }\n    }\n\n    getTotalRewardTotalDeposit()\n  }, [handlePotTotalRewardTotalDeposit, fastRefresh])\n\n  return (\n    <>\n      {(contract === null || typeof _pot === 'undefined') && <Redirect to=\"/pot\" />}\n      <AppBodyPot>\n        <PotAction\n          pot={_pot}\n          potData={potData}\n          account={account}\n          potPrizeTotalDepositData={{\n            \"potTotalDepositData\": potTotalDeposit,\n            \"potTotalRewardData\": potTotalReward\n          }}\n        />\n        <PotDetailDepositList\n          pot={_pot}\n          potData={potData}\n          account={account}\n          potPrizeTotalDepositData={{\n            \"potTotalDepositData\": potTotalDeposit,\n            \"potTotalRewardData\": potTotalReward\n          }}\n        />\n        <PotWinnerList\n          pot={_pot}\n          potData={potData}\n          account={account}\n        />\n      </AppBodyPot>\n    </>\n  )\n}\n\nexport default PotDetailMulti","import BigNumber from 'bignumber.js'\nimport { AutoVault } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | AutoVault['userData']\n  | {\n    allowance: number | string\n    stakingTokenBalance: number | string\n    userShares: number | string\n    userAmount: number | string\n    pendingReward: number | string\n  }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    userShares: userData ? new BigNumber(userData.userShares) : BIG_ZERO,\n    userAmount: userData ? new BigNumber(userData.userAmount) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformAutoVault = (vault: AutoVault): AutoVault => {\n  const { totalShares, userData, ...rest } = vault\n\n  return {\n    ...rest,\n    totalShares: new BigNumber(totalShares),\n    userData: transformUserData(userData),\n  } as AutoVault\n}\n","import BigNumber from 'bignumber.js'\nimport { Maximizer } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Maximizer['userData']\n  | {\n    allowance: number | string\n    stakingTokenBalance: number | string\n    stakedBalance: number | string\n    pendingReward: number | string\n    pendingRewardPlatform: number | string\n  }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n    pendingRewardPlatform: userData ? new BigNumber(userData.pendingRewardPlatform) : BIG_ZERO,\n  }\n}\n\nexport const transformMaximizer = (maximizer: Maximizer): Maximizer => {\n  const { totalStaked, userData, ...rest } = maximizer\n\n  return {\n    ...rest,\n    totalStaked: new BigNumber(totalStaked),\n    userData: transformUserData(userData),\n  } as Maximizer\n}\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-height: 60px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n  isZeroPtPb: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1 0 50px;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon) <{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  color: #910101;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout, isZeroPtPb }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell className={(isZeroPtPb)? \"pool-cell pt-0 pb-0\" : \"pool-cell\"} role=\"cell\">\n      <ArrowIcon width=\"75px\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenImage } from 'components/TokenImage'\nimport { getAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport BaseCell, { CellContent } from './BaseCell'\nimport ExpandActionCell from './ExpandActionCell'\n\ninterface NameCellProps {\n  pool: any\n  expanded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  justify-content: center;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst StyledText = styled(Text)`\n  padding-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n`\n\nconst StyledButton = styled(Button)`\n  color: white;\n  background-color: black;\n  border-radius: 32px;\n  width: 150px;\n  white-space: normal;\n`\n\nconst StyledContent = styled(CellContent)`\n  margin-left: 20px;\n`\n\n// token pair with extra token styled\nconst TokenPairExtraWrapper = styled.div`\n  max-width: 80px;\n  max-height: 80px;\n  width: 100%;\n  position: relative;\n  min-width: 70px;\n  min-height: 80px;\n`\n\nconst TokenPairExtraPrimaryImages = styled(TokenImage)`\n  position: absolute;\n  width: 92%;\n  inset: 0px auto auto 0px;\n  z-index: 5;\n`\n\nconst TokenPairExtraSecondaryImages = styled(TokenImage)`\n  position: absolute;\n  width: 50%;\n  inset: auto 0px 0px auto;\n  z-index: 6;\n`\n\nconst TokenPairExtraThirdImages = styled(TokenImage)`\n  position: absolute;\n  width: 50%;\n  inset: auto -17px 0px auto;\n  z-index: 7;\n`\n\nconst MaximizerTokenWrapper = styled.div`\n  max-width: 120px;\n  max-height: 80px;\n  width: 100%;\n  position: relative;\n  min-width: 90px;\n  min-height: 80px;\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool, expanded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { stakingToken, isAutoVault, earningTokens: { extra = undefined } = {}, isMaximizer } = pool\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningToken = ('vaultId' in pool || 'maximizerId' in pool) ? pool.earningTokens.main : pool.earningToken\n  const tokenImg = ('stakingTImage' in pool) ? pool.stakingTImage : ('maximiserTImage' in pool) ? pool.maximiserTImage : pool.vaultTImage\n  let poolLabel = t('Stake')\n\n  if ('vaultId' in pool) {\n    if ('extra' in pool.earningTokens) {\n      poolLabel = t('Auto Compound')\n    }\n  }\n\n  // to get image url from token\n  const getImageUrlFromToken = (token: Token) => {\n    const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n    return `/images/tokens/${address}.svg`\n  }\n\n  return (\n    <StyledCell className=\"pool-cell\" role=\"cell\">\n      {isAutoVault ? (\n        <TokenPairExtraWrapper className=\"ml-auto\">\n          <TokenPairExtraPrimaryImages src={getImageUrlFromToken(stakingToken)} token={stakingToken} width={80} height={80} />\n          <TokenPairExtraSecondaryImages src={getImageUrlFromToken(earningToken)} token={earningToken} width={40} height={40} />\n          {extra && <TokenPairExtraThirdImages src={getImageUrlFromToken(extra)} token={extra} width={40} height={40} />}\n        </TokenPairExtraWrapper>\n      ) : isMaximizer ? (\n        <MaximizerTokenWrapper className=\"ml-auto\">\n          <img width={120} height={80} src={tokenImg} alt='logo' className=\"ml-auto \" />\n          <TokenPairExtraSecondaryImages src={getImageUrlFromToken(earningToken)} token={earningToken} width={40} height={40} />\n          {extra && <TokenPairExtraThirdImages src={getImageUrlFromToken(extra)} token={extra} width={40} height={40} />}\n        </MaximizerTokenWrapper>\n      ) : (\n        <img width={80} height={80} src={tokenImg} alt='logo' className=\"ml-auto \" />\n      )}\n      <StyledContent>\n        <StyledText bold={!isXs && !isSm} small={isXs || isSm}>\n          {stakingTokenSymbol}\n        </StyledText>\n        <StyledButton padding=\"20px\" variant=\"tertiary\" scale=\"md\">\n          {poolLabel}\n        </StyledButton>\n      </StyledContent>\n      <div className=\"show-arrow hide-pool-ifDesktop hide-arrow-mobile\" style={{ marginLeft: 'auto' }}>\n        <ExpandActionCell expanded={expanded} isFullLayout={false} isZeroPtPb />\n      </div>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import React, { useState, useEffect } from 'react'\nimport { Flex, Skeleton, FlexProps } from '@pancakeswap/uikit'\nimport Balance from 'components/Balance'\nimport axios from 'axios'\nimport useRefresh from 'hooks/useRefresh'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: any\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, ...props }) => {\n  const { slowRefresh } = useRefresh()\n  const { sousId, isFinished, isAutoVault, contractAddress, isMaximizer, maximizerId } = pool\n  const [apr, setApr] = useState(0)\n  const baseUrl = `${process.env.REACT_APP_DOMAIN_LINK}pool/${sousId}/apr`\n  const vaultUrl = `${process.env.REACT_APP_DOMAIN_LINK}vault/${getAddress(contractAddress)}/apy`\n  const maximizerUrl = `${process.env.REACT_APP_DOMAIN_LINK}maximizer/${maximizerId}/apr`\n\n  useEffect(() => {\n    const getApr = async (): Promise<void> => {\n      const apiBase = (isAutoVault) ? vaultUrl : (isMaximizer) ? maximizerUrl : baseUrl\n      await axios.get(apiBase).then((response) => {\n        if (response && response.status === 200) {\n          const respData = response.data.data\n          if (isAutoVault) {\n            setApr(+respData.APYCake + +respData.APRToken)\n          } else if (isMaximizer) {\n            setApr(+respData.APRCake + +respData.APRToken)\n          } else {\n            setApr(respData.APR)\n          }\n        }\n      }).catch(error => {\n        // console.log('error', error)\n      })\n    }\n\n    getApr()\n  }, [baseUrl, apr, slowRefresh, isAutoVault, vaultUrl, isMaximizer, maximizerUrl])\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {!isFinished ? (\n        <>\n          <Balance\n            fontSize=\"20px\"\n            isDisabled={isFinished}\n            value={apr}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: any\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  flex-direction: row;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 1 0 70px;\n  }\n`\n\nconst StyledText = styled(Text)`\n  padding-top: 20px;\n  text-align: center;\n  color: #98A1B9;\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n\n  let tvlLabel = t('APR')\n  if ('vaultId' in pool) {\n    if ('extra' in pool.earningTokens) {\n      tvlLabel = t('APY')\n    }\n  }\n\n  return (\n    <StyledCell className=\"pool-cell\" role=\"cell\">\n      <CellContent>\n        <Apr pool={pool} />\n        <StyledText>\n          {tvlLabel}\n        </StyledText>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo, useState, useEffect } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport useRefresh from 'hooks/useRefresh'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: any\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst StyledText = styled(Text)`\n  padding-top: 20px;\n  text-align: center;\n  color: #98A1B9;\n`\n\nconst StyledUsdValue = styled(Text)`\n  padding-top: 10px;\n  text-align: center;\n  color: black;\n  font-size: 15px;\n`\n\nconst StyledBalance = styled(Balance)`\n  color: black;\n  font-size: 17px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { slowRefresh } = useRefresh()\n  const [usd, setUsd] = useState(0)\n  const { stakingToken, totalStaked, isAutoVault, isMaximizer, sousId, maximizerId, contractAddress } = pool\n  const baseUrl = `${process.env.REACT_APP_DOMAIN_LINK}pool/${sousId}/apr`\n  const vaultUrl = `${process.env.REACT_APP_DOMAIN_LINK}vault/${getAddress(contractAddress)}/apy`\n  const maximizerUrl = `${process.env.REACT_APP_DOMAIN_LINK}maximizer/${maximizerId}/apr`\n\n  const totalStakedBalance = useMemo(() => {\n    const totalBal = ('vaultId' in pool) ? new BigNumber(pool.totalTokenInVault) : totalStaked\n    const balNumber = getBalanceNumber(totalBal, stakingToken.decimals)\n    return balNumber\n  }, [pool, totalStaked, stakingToken.decimals])\n\n  useEffect(() => {\n    const getUsdValue = async (): Promise<void> => {\n      const apiBase = (isAutoVault) ? vaultUrl : (isMaximizer) ? maximizerUrl : baseUrl\n      await axios.get(apiBase).then((response) => {\n        if (response && response.status === 200) {\n          const respData = response.data.data\n          setUsd(respData.totalUsd)\n        }\n      }).catch(error => {\n        // console.log('error', error)\n      })\n    }\n\n    getUsdValue()\n  }, [baseUrl, slowRefresh, isAutoVault, vaultUrl, isMaximizer, maximizerUrl])\n\n  return (\n    <StyledCell className=\"pool-cell\" role=\"cell\">\n      <CellContent>\n        {totalStakedBalance && totalStakedBalance >= 0 ? (\n          <Flex alignItems=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n            <StyledBalance value={totalStakedBalance} decimals={6} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : totalStakedBalance === 0 ? (\n          <Flex alignItems=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n            <StyledBalance value={0} decimals={6} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n        <StyledUsdValue>\n          <span style={{ fontFamily: 'cursive' }}> ~ </span> {parseFloat(usd.toString()).toFixed(4)} USD\n        </StyledUsdValue>\n        <StyledText>\n          {t('TVL')}\n        </StyledText>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport Balance from 'components/Balance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface DepositedCellProps {\n  pool: any\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 80px;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst StyledText = styled(Text)`\n  padding-top: 20px;\n  font-weight: 700px !important;\n  text-align: center;\n  color: #98A1B9;\n`\n\nconst DepositedCell: React.FC<DepositedCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { stakingToken, userData } = pool\n  const vaultStakedBalance = userData?.userAmount ? userData?.userAmount : BIG_ZERO\n  const stakedBalance = useMemo(() => {\n    const vaultBalance = ('vaultId' in pool) ? vaultStakedBalance : BIG_ZERO\n    const poolBalance = (userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO)\n    return ('vaultId' in pool) ? vaultBalance : poolBalance\n  }, [pool, userData, vaultStakedBalance])\n  const stakedTokenBalance = useMemo(() => {\n    return getBalanceNumber(stakedBalance, stakingToken.decimals)\n  }, [stakingToken.decimals, stakedBalance])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) :\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Balance fontSize=\"17px\" value={stakedTokenBalance} decimals={6} />\n          </Flex>\n        }\n        <StyledText>\n          {t('Deposited')}\n        </StyledText>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default DepositedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  text-align: center;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  updateUserBalance,\n  updateUserPendingReward,\n  updateVaultUserBalance,\n  updateVaultUserPendingReward,\n  fetchVaultPublicDataAsync,\n  updateMaximizerUserPendingReward,\n  updateMaximizerUserPendingRewardPlatform\n} from 'state/actions'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport { useStakingContract, useAutoVaultContract, useMaximizerContract } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (harvestContract, sousId, isAutoVault, isMaximizer) => {\n  const contractCall = (isAutoVault) ? harvestContract.claim({\n    gasLimit: 800000\n  }) : (isMaximizer) ? harvestContract.withdraw(sousId, 0, {\n    gasLimit: 800000\n  }) : harvestContract.claim(sousId, '0', options)\n  const tx = await contractCall\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isAutoVault, isMaximizer, contractAddress, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const stakingContract = useStakingContract()\n  const vaultContract = useAutoVaultContract(contractAddress)\n  const maximizerContract = useMaximizerContract(contractAddress)\n\n  const handleHarvest = useCallback(async () => {\n    const harvestContract = (isAutoVault) ? vaultContract : (isMaximizer) ? maximizerContract : stakingContract\n    await harvestPool(harvestContract, sousId, isAutoVault, isMaximizer)\n    if (isAutoVault) {\n      dispatch(fetchVaultPublicDataAsync())\n      dispatch(updateVaultUserBalance(sousId, account))\n      dispatch(updateVaultUserPendingReward(sousId, account))\n    } else if (isMaximizer) {\n      dispatch(updateMaximizerUserPendingReward(sousId, account))\n      dispatch(updateMaximizerUserPendingRewardPlatform(sousId, account))\n    } else {\n      dispatch(updateUserPendingReward(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    }\n  }, [isAutoVault, vaultContract, stakingContract, sousId, dispatch, account, isMaximizer, maximizerContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\n\ninterface CollectModalProps {\n  pool: any\n  formattedBalance: string\n  formattedBalanceExtra?: string\n  stakingToken: Token\n  earningToken: Token\n  earningTokenExtra?: Token\n  isBnbPool: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  pool,\n  formattedBalance,\n  formattedBalanceExtra,\n  stakingToken,\n  earningToken,\n  earningTokenExtra,\n  isBnbPool,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const poolID = ('vaultId' in pool) ? pool.vaultId : ('maximizerId' in pool) ? pool.maximizerId : pool.sousId\n  const { onReward } = useHarvestPool(poolID, pool.isAutoVault, pool.isMaximizer, getAddress(pool.contractAddress), isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // harvesting\n    try {\n      await onReward()\n      toastSuccess(\n        `${t('Harvested')}!`,\n        t('Your %symbol% earnings have been sent to your wallet!', { symbol: stakingToken.symbol }),\n      )\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal\n      title={`${t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {pool.isMaximizer ?\n            <>\n              <Heading>\n                {formattedBalanceExtra} {earningTokenExtra.symbol}\n              </Heading>\n            </>\n            : null}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { CmsModal, Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface LearnMoreModalProps {\n  content: string\n  onDismiss?: () => void\n  // TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\nconst MModal = styled(CmsModal)`\n  border: none;\n  max-width: 70vh;\n  max-height: 70vh;\n\n  h2 {\n    color: white;\n  }\n  svg {\n    fill: white;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 500px;\n  }\n`\n\nconst LearnMoreModal: React.FC<LearnMoreModalProps> = ({ content, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n\n  return (\n    <MModal title={t('Learn More')} onDismiss={onDismiss} headerBackground='#910101'>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <div style={{color: 'black'}} dangerouslySetInnerHTML={{ __html: content}} />\n      </Flex>\n    </MModal>\n  )\n}\n\nexport default LearnMoreModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, useModal, Skeleton, Heading, Flex } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport LearnMoreModal from '../../PoolCard/Modals/LearnMoreModal'\n\ninterface HarvestActionProps {\n  pool: any\n  userDataLoaded: boolean\n  cmsContent: string\n}\n\nconst StyledActionText = styled(Text)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 41px;\n  color: #910101;\n`\n\nconst StyledHeading = styled(Heading)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 25px;\n  line-height: 75px;\n  text-transform: uppercase;\n  color: #910101;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`\n\nconst FlexBreakLine = styled.div`\n  flex-basis: 100%;\n  height: 0;\n`\n\nconst StyledBalance = styled(Balance)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 25px !important;\n  color: #910101;\n`\n\nconst TempButton = styled(Button)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 47px;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 5px;\n  padding: 30px;\n  width: 250px;\n  height: 60px;\n  background-color: #910101;\n`\n\nconst LearnMoreText = styled(Text)`\n  color: #910101;\n  font-weight: bold;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  pool,\n  userDataLoaded,\n  cmsContent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { userData, poolCategory, earningTokenPrice, stakingToken } = pool\n  let rewardToken = pool.earningToken\n  let extraRewardToken\n  if ('vaultId' in pool) {\n    if ('extra' in pool.earningTokens) {\n      rewardToken = pool.earningTokens.extra\n    } else {\n      rewardToken = pool.earningTokens.main\n    }\n  }\n  if ('maximizerId' in pool) {\n    rewardToken = pool.earningTokens.main\n    extraRewardToken = pool.earningTokens.extra\n  }\n  const earningToken = rewardToken\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningsExtra = userData?.pendingRewardPlatform ? new BigNumber(userData.pendingRewardPlatform) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningExtraTokenBalance = getBalanceNumber(earningsExtra, extraRewardToken ? extraRewardToken.decimals : 18)\n  const hasEarnings = earnings.gt(0)\n  const formattedBalance = formatNumber(earningTokenBalance, 4, 4)\n  const formattedBalanceExtra = formatNumber(earningExtraTokenBalance, 4, 4)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Learn More modal\n  const [onLearnMore] = useModal(<LearnMoreModal content={cmsContent} />)\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      pool={pool}\n      formattedBalance={formattedBalance}\n      formattedBalanceExtra={formattedBalanceExtra}\n      stakingToken={stakingToken}\n      earningToken={earningToken}\n      earningTokenExtra={extraRewardToken}\n      isBnbPool={isBnbPool}\n    />,\n  )\n\n  const actionTitle =\n    <StyledActionText as=\"span\">\n      {t('Pending Rewards:')}\n    </StyledActionText>\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles >{actionTitle}</ActionTitles>\n        <ActionContent>\n          {extraRewardToken ?\n            (\n              <>\n                <StyledHeading>0 {earningToken.symbol} + 0 {extraRewardToken.symbol}</StyledHeading>\n              </>\n            )\n            :\n            <StyledHeading>0 {earningToken.symbol}</StyledHeading>\n          }\n          <FlexBreakLine />\n          <Button disabled>{t('HARVEST')}</Button>\n        </ActionContent>\n        <Flex justifyContent=\"center\" alignItems=\"center\">\n          <LearnMoreText color=\"textSubtle\" mt=\"6px\" style={{ textDecoration: \"underline\" }} onClick={onLearnMore}>\n            {t('Learn more')}\n          </LearnMoreText>\n        </Flex>\n      </ActionContainer >\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n        <Flex justifyContent=\"center\" alignItems=\"center\">\n          <LearnMoreText color=\"textSubtle\" mt=\"6px\" style={{ textDecoration: \"underline\" }} onClick={onLearnMore}>\n            {t('Learn more')}\n          </LearnMoreText>\n        </Flex>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <StyledHeading>\n          <>\n            {hasEarnings ? (\n              <>\n                {extraRewardToken ?\n                  <>\n                    <StyledBalance lineHeight=\"1\" decimals={4} value={earningTokenBalance} unit={earningToken.symbol} />\n                    +\n                    <StyledBalance lineHeight=\"1\" decimals={4} value={earningExtraTokenBalance} unit={extraRewardToken.symbol} />\n                  </>\n                  : <StyledBalance lineHeight=\"1\" decimals={4} value={earningTokenBalance} unit={earningToken.symbol} />}\n              </>\n            ) : (\n              <>\n                0 {earningToken.symbol} {extraRewardToken ? <> + 0 {extraRewardToken.symbol} </> : null}\n              </>\n            )}\n          </>\n        </StyledHeading>\n        <FlexBreakLine />\n        <TempButton disabled={!hasEarnings} onClick={onPresentCollect}>\n          {t('HARVEST')}\n        </TempButton>\n      </ActionContent>\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <LearnMoreText color=\"textSubtle\" mt=\"6px\" style={{ textDecoration: \"underline\" }} onClick={onLearnMore}>\n          {t('Learn more')}\n        </LearnMoreText>\n      </Flex>\n    </ActionContainer >\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n  border-radius: 0;\n  border: 0;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  text-align: right;\n  color: #910101;\n  box-shadow: none;\n  padding: 0;\n  background-color: transparent;\n  text-transform: uppercase;\n  white-space: nowrap;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"md\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateVaultUserBalance,\n  updateVaultUserShares,\n  updateVaultUserAmount,\n  fetchVaultPublicDataAsync,\n  fetchMaximizerPublicDataAsync,\n  updateMaximizerUserStakedBalance,\n  updateMaximizerUserBalance,\n  updateMaximizerUserPendingReward,\n  updateMaximizerUserPendingRewardPlatform,\n  updateUserPendingReward,\n  updateVaultUserPendingReward\n} from 'state/actions'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useStakingContract, useAutoVaultContract, useMaximizerContract } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst onStake = async (depositContract, sousId, amount, decimals = 18, isAutoVault, isMaximizer) => {\n  const contractCall = (isAutoVault) ? depositContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasLimit: 800000\n  }) : (isMaximizer) ? depositContract.deposit(sousId, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasLimit: 800000\n  }) : depositContract.stake(sousId, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const tx = await contractCall\n  const receipt = await tx.wait()\n}\n\nconst useStakePool = (sousId: number, isAutoVault, isMaximizer, contractAddress, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const stakingContract = useStakingContract()\n  const vaultContract = useAutoVaultContract(contractAddress)\n  const maximizerContract = useMaximizerContract(contractAddress)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      const depositContract = (isAutoVault) ? vaultContract : (isMaximizer) ? maximizerContract : stakingContract\n      await onStake(depositContract, sousId, amount, decimals, isAutoVault, isMaximizer)\n      if (isAutoVault) {\n        dispatch(fetchVaultPublicDataAsync())\n        dispatch(updateVaultUserBalance(sousId, account))\n        dispatch(updateVaultUserShares(sousId, account))\n        dispatch(updateVaultUserAmount(sousId, account))\n        dispatch(updateVaultUserPendingReward(sousId, account))\n      } else if (isMaximizer) {\n        dispatch(fetchMaximizerPublicDataAsync())\n        dispatch(updateMaximizerUserStakedBalance(sousId, account))\n        dispatch(updateMaximizerUserBalance(sousId, account))\n        dispatch(updateMaximizerUserPendingReward(sousId, account))\n        dispatch(updateMaximizerUserPendingRewardPlatform(sousId, account))\n      } else {\n        dispatch(updateUserStakedBalance(sousId, account))\n        dispatch(updateUserBalance(sousId, account))\n        dispatch(updateUserPendingReward(sousId, account))\n      }\n    },\n    [isAutoVault, isMaximizer, vaultContract, stakingContract, maximizerContract, sousId, dispatch, account],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport {\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateVaultUserBalance,\n  updateVaultUserAmount,\n  updateVaultUserPendingReward,\n  updateVaultUserShares,\n  fetchVaultPublicDataAsync,\n  fetchMaximizerPublicDataAsync,\n  updateMaximizerUserStakedBalance,\n  updateMaximizerUserBalance,\n  updateMaximizerUserPendingReward,\n  updateMaximizerUserPendingRewardPlatform\n} from 'state/actions'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport { useStakingContract, useAutoVaultContract, useMaximizerContract } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst onUnstake = async (withdrawContract, sousId, amount, decimals = 18, isAutoVault, isMaximizer, userShares, maxAmount) => {\n  const unstakeAmt = new BigNumber(amount).times(BIG_TEN.pow(decimals)).dividedBy(maxAmount).times(userShares).toFixed(0)\n  const contractCall = (isAutoVault) ? withdrawContract.withdraw(unstakeAmt, {\n    gasLimit: 800000\n  }) : (isMaximizer) ? withdrawContract.withdraw(sousId, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasLimit: 800000\n  }) : withdrawContract.claim(sousId, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const tx = await contractCall\n  const receipt = await tx.wait()\n}\n\nconst useUnstakePool = (sousId, isAutoVault, isMaximizer, contractAddress, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const stakingContract = useStakingContract()\n  const vaultContract = useAutoVaultContract(contractAddress)\n  const maximizerContract = useMaximizerContract(contractAddress)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number, userShares: string, maxAmount: string) => {\n      const withdrawContract = (isAutoVault) ? vaultContract : (isMaximizer) ? maximizerContract : stakingContract\n      await onUnstake(withdrawContract, sousId, amount, decimals, isAutoVault, isMaximizer, userShares, maxAmount)\n      if (isAutoVault) {\n        dispatch(fetchVaultPublicDataAsync())\n        dispatch(updateVaultUserAmount(sousId, account))\n        dispatch(updateVaultUserBalance(sousId, account))\n        dispatch(updateVaultUserPendingReward(sousId, account))\n        dispatch(updateVaultUserShares(sousId, account))\n      } else if (isMaximizer) {\n        dispatch(fetchMaximizerPublicDataAsync())\n        dispatch(updateMaximizerUserStakedBalance(sousId, account))\n        dispatch(updateMaximizerUserBalance(sousId, account))\n        dispatch(updateMaximizerUserPendingReward(sousId, account))\n        dispatch(updateMaximizerUserPendingRewardPlatform(sousId, account))\n      } else {\n        dispatch(updateUserStakedBalance(sousId, account))\n        dispatch(updateUserBalance(sousId, account))\n        dispatch(updateUserPendingReward(sousId, account))\n      }\n    },\n    [isAutoVault, isMaximizer, vaultContract, stakingContract, maximizerContract, sousId, dispatch, account],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Button, BalanceInput, AutoRenewIcon, LinkExternal, MetamaskIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: any\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StartText = styled(Text)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 41px;\n  color: #910101;\n`\n\nconst EndText = styled(Text)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 41px;\n  text-align: right;\n  color: #910101;\n`\n\nconst StyledBalance = styled(BalanceInput)`\n  padding: 0;\n  width: 472px;\n  height: 50px;\n  border: none transparent;\n  border-radius: 0;\n  background: transparent;\n  box-shadow: none;\n`\n\nconst StyledFlex = styled(Flex)`\n  width: 100%;\n  height: 46px;\n`\n\nconst TempButton = styled(Button)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 47px;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 5px;\n  padding: 30px;\n  width: 250px;\n  height: 60px;\n  background-color: #910101;\n  margin-left: 30px;\n  margin-right: 60px;\n`\n\nconst StyledInputFlex = styled(Flex)`\n  border-bottom: 2px solid #910101;\n`\n\nconst InfoFlex = styled(Flex)`\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 30px;\n    margin-right: 60px;\n    flex-direction: row;\n  }\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  isRemovingStake = false,\n  onDismiss = () => null,\n}) => {\n  const { stakingToken, userData, contractAddress } = pool\n  const poolID = ('vaultId' in pool) ? pool.vaultId : ('maximizerId' in pool) ? pool.maximizerId : pool.sousId\n  const earningToken = ('vaultId' in pool || 'maximizerId' in pool) ? pool.earningTokens.main : pool.earningToken\n  const { t } = useTranslation()\n  const { onStake } = useStakePool(poolID, pool.isAutoVault, pool.isMaximizer, getAddress(pool.contractAddress), isBnbPool)\n  const { onUnstake } = useUnstakePool(poolID, pool.isAutoVault, pool.isMaximizer, getAddress(pool.contractAddress), pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return ('vaultId' in pool) ? userData.userAmount : userData.stakedBalance\n    }\n\n    return stakingTokenBalance\n  }\n\n  const { account } = useWeb3React()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const earningTokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n    const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n    setStakeAmount(amountToStake)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals, userData?.userShares, getCalculatedStakingLimit())\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        setStakeAmount('')\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        setStakeAmount('')\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <>\n      <StyledFlex alignItems=\"center\" justifyContent=\"space-between\" mb=\"0px\">\n        <StartText>\n          {t('Balance:')}\n        </StartText>\n        <EndText>\n          {getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals, 4)}\n          {stakingToken.symbol}\n        </EndText>\n      </StyledFlex>\n      <StyledInputFlex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledBalance\n          value={stakeAmount}\n          placeholder={t(\"Enter amount\")}\n          onUserInput={handleStakeInputChange}\n          decimals={stakingToken.decimals}\n          className=\"custom\"\n        />\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </StyledInputFlex>\n      <TempButton\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"40px\"\n      >\n        {pendingTx ? t('Confirming') : (isRemovingStake ? t('Withdraw') : t('Deposit'))}\n      </TempButton>\n      <InfoFlex justifyContent=\"center\" alignItems=\"center\" mt=\"0.5rem\">\n        <LinkExternal href={`${BASE_BSC_SCAN_URL}/address/${getAddress(earningToken.address)}`} bold={false} small fontSize=\"12px\">\n          {t('See Token Info')}\n        </LinkExternal>\n        <span style={{ paddingLeft: '1rem' }} />\n        <LinkExternal\n          href={`${BASE_BSC_SCAN_URL}/address/${getAddress(contractAddress)}`}\n          bold={false}\n          small\n          fontSize=\"12px\"\n        >\n          {t('View Contract')}\n        </LinkExternal>\n        <span style={{ paddingLeft: '1rem' }} />\n        {account && isMetaMaskInScope && earningTokenAddress && (\n          <Flex justifyContent=\"flex-end\">\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(getAddress(stakingToken.address), stakingToken.symbol.includes('LP') ? 'CAKE-LP' : stakingToken.symbol, stakingToken.decimals)}\n            >\n              <Text color=\"primary\" fontSize=\"12px\">\n                {t('Add to Metamask')}\n              </Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n      </InfoFlex>\n    </>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = {\n  grid: {\n    width: \"auto\",\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\nexport default function GridContainer(props) {\n  const classes = useStyles()\n  const { children, className, ...rest } = props\n  const classN = `${classes.grid} ${className} `\n  return (\n    <Grid container {...rest} className={classN}>\n      {children}\n    </Grid>\n  )\n}\n\nGridContainer.defaultProps = {\n  className: \"\",\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    position: \"relative\",\n    width: \"100%\",\n    minHeight: \"1px\",\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    flexBasis: \"auto\",\n  },\n}))\n\nexport default function GridItem(props) {\n  const classes = useStyles()\n  const { children, className, ...rest } = props\n  const classN = `${classes.grid} ${className} `\n  return (\n    <Grid item {...rest} className={classN}>\n      {children}\n    </Grid>\n  )\n}\n\nGridItem.defaultProps = {\n  className: \"\",\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n","import React from 'react'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { Tabs, Tab } from '@material-ui/core'\nimport GridContainer from './GridContainer'\nimport GridItem from './GridItem'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flexContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n    },\n  },\n  horizontalDisplay: {\n    display: \"block\",\n  },\n  root: {\n    paddingLeft: 0,\n    marginBottom: 0,\n    overflow: \"visible !important\",\n    lineHeight: \"24px\",\n    position: \"relative\",\n    display: \"block\",\n    color: \"inherit\",\n  },\n  fixed: {\n    overflow: \"visible !important\",\n  },\n  displayNone: {\n    display: \"none !important\",\n  },\n  tabIcon: {\n    width: \"70px\",\n    height: \"70px\",\n    display: \"block\",\n    \"&, & *\": {\n      letterSpacing: \"normal !important\",\n    },\n  },\n  pills: {\n    position: \"relative\",\n    display: \"block\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    transition: \"all .3s\",\n    fontSize: \"20px\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    lineHeight: \"41px\",\n    color: \"#910101\",\n    textTransform: \"none\",\n  },\n  horizontalPills: {\n    float: \"none\",\n    \"& + button\": {\n      margin: \"10px 0\",\n    },\n  },\n  tabWrapper: {\n    color: \"inherit\",\n    position: \"relative\",\n    width: \"100px\",\n    height: \"100px\",\n  },\n  contentWrapper: {\n  },\n  tabContent: {\n    paddingLeft: \"40px\"\n  },\n  tabContentNoPadding: {\n    paddingLeft: \"0px\",\n    paddingTop: \"20px\",\n  },\n  red: {\n    background: \"#910101\",\n    color: \"white\",\n    boxShadow: \"0px 3px 10px rgba(0, 0, 0, 0.5)\",\n  }\n}))\n\nexport default function NavPills(props) {\n  const { tabs, color, horizontal, alignCenter, active1, tabNoPadding } = props\n  const [active, setActive] = React.useState(active1)\n  const handleChange = (event, value) => {\n    setActive(value)\n  }\n  const classes = useStyles()\n  const flexContainerClasses = classNames({\n    [classes.flexContainer]: true,\n    [classes.horizontalDisplay]: horizontal !== undefined\n  })\n\n  const tabButtons = (\n    <Tabs\n      classes={{\n        root: classes.root,\n        fixed: classes.fixed,\n        flexContainer: flexContainerClasses,\n        indicator: classes.displayNone,\n      }}\n      value={active}\n      onChange={handleChange}\n      centered={alignCenter}\n    >\n      {tabs.map((prop, key) => {\n        const icon = { icon: null }\n        const newKey = `${key}-tabs`\n        if (prop.tabIcon !== undefined) {\n          if (key === active) {\n            icon.icon = <img src={prop.tabIcon.white} className={classes.tabIcon} alt='logo' />\n          } else {\n            icon.icon = <img src={prop.tabIcon.red} className={classes.tabIcon} alt='logo' />\n          }\n        }\n        const pillsClasses = classNames({\n          [classes.pills]: true,\n          [classes.horizontalPills]: horizontal !== undefined,\n        })\n        return (\n          <Tab\n            label={prop.tabButton}\n            key={newKey}\n            {...icon}\n            classes={{\n              root: pillsClasses,\n              selected: classes[color],\n              wrapper: classes.tabWrapper,\n            }}\n          />\n        )\n      })}\n    </Tabs>\n  )\n\n  const tabContent = (\n    <div className={classes.contentWrapper}>\n      {tabs.map((prop, key) => {\n        const tabKey = `${key}-tab`\n        if (key === active) {\n          const tabContentStyle = tabNoPadding ? classes.tabContentNoPadding : classes.tabContent;\n          return (\n            <div className={tabContentStyle} key={tabKey}>\n              {prop.tabContent}\n            </div>\n          )\n        }\n        return null\n      })}\n    </div>\n  )\n\n  return horizontal !== undefined ? (\n    <GridContainer>\n      <GridItem {...horizontal.tabsGrid}>{tabButtons}</GridItem>\n      <GridItem {...horizontal.contentGrid}>{tabContent}</GridItem>\n    </GridContainer>\n  ) : (\n    <div>\n      {tabButtons}\n      {tabContent}\n    </div>\n  )\n}\n\nNavPills.defaultProps = {\n  active1: 0,\n  color: \"red\",\n}\n\nNavPills.propTypes = {\n  // index of the default active pill\n  active1: PropTypes.number,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabButton: PropTypes.string,\n      tabIcon: PropTypes.objectOf(PropTypes.string),\n      tabContent: PropTypes.node,\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\n    \"red\",\n  ]),\n  horizontal: PropTypes.shape({\n    tabsGrid: PropTypes.objectOf(PropTypes.number),\n    contentGrid: PropTypes.objectOf(PropTypes.number),\n  }),\n  alignCenter: PropTypes.bool,\n  tabNoPadding: PropTypes.bool,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Skeleton, Flex, LinkExternal, MetamaskIcon, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { registerToken } from 'utils/wallet'\nimport { ActionContainer, ActionContent } from './styles'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport NavPills from '../../NavPills'\n\n\ninterface StackedActionProps {\n  pool: any\n  userDataLoaded: boolean\n}\n\nconst TempButton = styled(Button)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 47px;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 5px;\n  padding: 30px;\n  width: 250px;\n  height: 60px;\n  background-color: #910101;\n`\n\nconst InfoFlex = styled(Flex)`\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    stakingToken,\n    userData,\n    isAutoVault,\n    isMaximizer,\n    contractAddress\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const earningToken = ('vaultId' in pool || 'maximizerId' in pool) ? pool.earningTokens.main : pool.earningToken\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const spenderAddress = getAddress(contractAddress)\n  const approveId = ('vaultId' in pool) ? pool.vaultId : ('maximizerId' in pool) ? pool.maximizerId : pool.sousId\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    approveId,\n    isMaximizer ? stakingToken.symbol : earningToken.symbol,\n    isAutoVault,\n    isMaximizer,\n    spenderAddress\n  )\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const earningTokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionContent>\n          <ConnectWalletButton />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionContent style={{ marginTop: '20px' }}>\n          <TempButton disabled={requestedPoolApproval} onClick={handlePoolApprove}>\n            {t('Approve')}\n          </TempButton>\n          <InfoFlex justifyContent=\"center\" alignItems=\"center\" mt=\"0.5rem\">\n            <LinkExternal href={`${BASE_BSC_SCAN_URL}/address/${getAddress(stakingToken.address)}`} bold={false} small fontSize=\"12px\">\n              {t('See Token Info')}\n            </LinkExternal>\n            <span style={{ paddingLeft: '1rem' }} />\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${getAddress(contractAddress)}`}\n              bold={false}\n              small\n              fontSize=\"12px\"\n            >\n              {t('View Contract')}\n            </LinkExternal>\n            <span style={{ paddingLeft: '1rem' }} />\n            {account && isMetaMaskInScope && earningTokenAddress && (\n              <Flex justifyContent=\"flex-end\">\n                <Button\n                  variant=\"text\"\n                  p=\"0\"\n                  height=\"auto\"\n                  onClick={() => registerToken(getAddress(stakingToken.address), stakingToken.symbol.includes('LP') ? 'CAKE-LP' : stakingToken.symbol, stakingToken.decimals)}\n                >\n                  <Text color=\"primary\" fontSize=\"12px\">\n                    {t('Add to Metamask')}\n                  </Text>\n                  <MetamaskIcon ml=\"4px\" />\n                </Button>\n              </Flex>\n            )}\n          </InfoFlex>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  const tabOpt = [\n    {\n      tabButton: t(\"Deposit\"),\n      tabIcon: {\n        red: '/images/deposit-icon-red.png',\n        white: '/images/deposit-icon-white.png',\n      },\n      tabContent: (\n        <StakeModal\n          isBnbPool={isBnbPool}\n          pool={pool}\n          stakingTokenBalance={stakingTokenBalance}\n          stakingTokenPrice={pool.stakingTokenPrice}\n        />\n      ),\n    },\n    {\n      tabButton: t(\"Withdrawal\"),\n      tabIcon: {\n        red: '/images/withdrawal-icon-red.png',\n        white: '/images/withdrawal-icon-white.png',\n      },\n      tabContent: (\n        <StakeModal\n          stakingTokenBalance={stakingTokenBalance}\n          isBnbPool={isBnbPool}\n          pool={pool}\n          stakingTokenPrice={pool.stakingTokenPrice}\n          isRemovingStake\n        />\n      ),\n    },\n  ]\n\n  const horizontalOpt = {\n    tabsGrid: { xs: 12, sm: 4, md: 3 },\n    contentGrid: { xs: 12, sm: 8, md: 9 },\n  }\n\n  return (\n    <ActionContainer>\n      <ActionContent className=\"pool-nav\">\n        <div className=\"hide-ifMobile\">\n          <NavPills\n            color=\"red\"\n            horizontal={horizontalOpt}\n            tabs={tabOpt}\n          />\n        </div>\n        <div className=\"show-ifMobile hide-ifDesktop\">\n          <NavPills\n            color=\"red\"\n            tabs={tabOpt}\n            tabNoPadding\n          />\n        </div>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, updateVaultUserAllowance, updateMaximizerUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol, isAutoVault, isMaximizer, spenderAddress) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(spenderAddress, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      if (isAutoVault) {\n        dispatch(updateVaultUserAllowance(sousId, account))\n      } else if (isMaximizer) {\n        dispatch(updateMaximizerUserAllowance(sousId, account))\n      } else {\n        dispatch(updateUserAllowance(sousId, account))\n      }\n\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [lpContract, spenderAddress, isAutoVault, isMaximizer, dispatch, sousId, account, toastSuccess, t, earningTokenSymbol, toastError])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    min-height: 339px;\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 10px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 20px 35px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid #910101;\n  padding-top: 30px;\n  flex-flow: wrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: any\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n  cmsContent: string\n}\n\nconst VerticalLine = styled.div`\n  width: 1px;\n  height: 260px;\n  border: 2px solid #910101;\n  background: #910101;\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ pool, userDataLoaded, expanded, cmsContent }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledActionPanel className=\"pool-action-container\" expanded={expanded}>\n      <ActionContainer className=\"pool-action-container-child\">\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n        <VerticalLine className=\"hide-vline-ifMobile\" />\n        <Harvest pool={pool} userDataLoaded={userDataLoaded} cmsContent={cmsContent} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport DepositedCell from './Cells/DepositedCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: any\n  account: string\n  userDataLoaded: boolean\n  cmsContent: string\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n  padding: 20px;\n  padding-bottom: 0px;\n`\n\nconst StyledRowMobile = styled.div`\n  background-color: transparent;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  padding: 20px;\n  padding-bottom: 0px;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded, cmsContent }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <div className=\"hide-pool-ifMobile\">\n        <StyledRow className=\"pool-row\" role=\"row\" onClick={toggleExpanded}>\n          <NameCell pool={pool} expanded={expanded} />\n          <DepositedCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n          <AprCell pool={pool} />\n          {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n          <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} isZeroPtPb={false} />\n        </StyledRow>\n      </div>\n\n      <div className=\"show-pool-ifMobile hide-pool-ifDesktop\">\n        <StyledRowMobile className=\"pool-row\" role=\"row\" onClick={toggleExpanded}>\n          <NameCell pool={pool} expanded={expanded} />\n          <div className=\"pool-child-row\">\n            <DepositedCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n            <AprCell pool={pool} />\n            <TotalStakedCell pool={pool} />\n          </div>\n        </StyledRowMobile>\n      </div>\n\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n          cmsContent={cmsContent}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: any\n  userDataLoaded: boolean\n  account: string\n  cmsContent: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: 15px;\n  background-color: ${({ theme }) => theme.card.background};\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: 15px;\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n  margin-top: 1rem;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account, cmsContent }) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const poolKey = ('sousId' in pools) ? pools.sousId : pools.vaultId\n\n  return (\n    <>\n      {pools.map((pool) => (\n        <StyledTableBorder>\n          <StyledTable role=\"table\" ref={tableWrapperEl}>\n            <PoolRow\n              key={poolKey}\n              pool={pool}\n              account={account}\n              userDataLoaded={userDataLoaded}\n              cmsContent={cmsContent}\n            />\n          </StyledTable>\n        </StyledTableBorder>\n      ))}\n    </>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport partition from 'lodash/partition'\nimport { useFetchPublicPoolsData, usePools } from 'state/pools/hooks'\nimport { useFetchPublicVaultData, useVaults } from 'state/vaults/hooks'\nimport { useFetchPublicMaximizerData, useMaximizers } from 'state/maximizers/hooks'\nimport Page from 'components/Layout/Page'\nimport Loading from 'components/Loading'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { useCmsContent } from \"./hooks/useCmsContent\"\n\n\nconst PoolWrapper = styled.div`\n  background-color: #910101;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 6\n\ninterface BannerProps {\n  content: string\n}\n\nconst Banner: React.FC<BannerProps> = ({ content }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <div className='banner-wrapper-area hide-ifMobile'>\n        <div className='container'>\n          <div className='row align-items-center m-0'>\n            <div className='col-xl-8 col-lg-6 col-md-12 p-0'>\n              <div className='banner-wrapper-content'>\n                <h3>{t(\"DEPOSIT & EARN MORE MUS\")}</h3>\n                <div className='banner-wrapper-content' dangerouslySetInnerHTML={{ __html: content }} />\n              </div>\n            </div>\n            <div className='col-xl-4 col-lg-6 col-md-12 p-0'>\n              <div className='banner-wrapper-image'>\n                <img src='/images/decor-img.png' alt='banner' />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n// CMS interface\ntype cmsBaseObj = {\n  content: string,\n  language: string,\n  page: string,\n  key: string\n}\n\ntype cmsObj = {\n  banner?: cmsBaseObj,\n  staking?: cmsBaseObj\n}\n\nconst Pools: React.FC = () => {\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const { vaults, userDataLoaded: vaultUserDataLoaded } = useVaults(account)\n  const { maximizers, userDataLoaded: maximizerUserDataLoaded } = useMaximizers(account)\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const chosenPoolsLength = useRef(0)\n  const { t, currentLanguage } = useTranslation()\n\n  // cms content\n  const { onCmsContent: handleCmsContent } = useCmsContent(\"staking\", currentLanguage.locale)\n  const [cmsContent, setCmsContent] = useState(() => {\n    const init: cmsObj = {\n      banner: {\n        content: \"\",\n        language: \"\",\n        page: \"\",\n        key: \"\"\n      },\n      staking: {\n        content: \"\",\n        language: \"\",\n        page: \"\",\n        key: \"\"\n      }\n    }\n    return init\n  })\n  useEffect(() => {\n    const getCms = async () => {\n      const result = await handleCmsContent()\n      if (Object.keys(result).length > 0) {\n        setCmsContent(result)\n      }\n    }\n    getCms()\n  }, [handleCmsContent])\n\n  const pools = useMemo(() => {\n    const vaultPool = vaults.map((vault) => {\n      const v = { ...vault }\n      v.isAutoVault = true\n      return v\n    })\n    const maximizerPool = maximizers.map((maximizer) => {\n      const m = { ...maximizer }\n      m.isMaximizer = true\n      return m\n    })\n    const allPools = [...poolsWithoutAutoVault, ...vaultPool, ...maximizerPool]\n    return allPools\n  }, [poolsWithoutAutoVault, vaults, maximizers])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n\n  useFetchPublicPoolsData()\n  useFetchPublicVaultData()\n  useFetchPublicMaximizerData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const sortPools = (poolsToSort: any) => {\n    return poolsToSort\n  }\n\n  let chosenPools = openPools\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} cmsContent={cmsContent.staking.content} />\n\n  return (\n    <>\n      <Banner content={cmsContent.banner.content} />\n      <PoolWrapper className=\"pool-container\">\n        <h1 className=\"page-red-header hide-ifMobile\">{t(\"STAKING\")}</h1>\n        <Page className=\"pools-wrapper\">\n          {account && !userDataLoaded && !vaultUserDataLoaded && !maximizerUserDataLoaded && (\n            <Flex justifyContent=\"center\" mb=\"4px\">\n              <Loading />\n            </Flex>\n          )}\n          {tableLayout}\n          <div ref={loadMoreRef} />\n        </Page>\n      </PoolWrapper>\n    </>\n  )\n}\n\nexport default Pools\n","import { useCallback, useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nexport const useCmsContent = (_page: string, _locale: string) => {\n  const handleCmsContent = useCallback(async () => {\n    try {\n      const baseUrl = `${process.env.REACT_APP_MUSASHIBO_LINK}/api/frontend/get-content`\n\n      const response = await axios.get(baseUrl, {\n        params: {\n          page    : _page,\n          language: _locale\n        }\n      })\n\n      const {data} = await response?.data\n      return data\n    } catch (e) {\n      return {}\n    }\n  }, [_locale, _page])\n\n  return { onCmsContent: handleCmsContent }\n}","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchVaultPublicDataAsync,\n  fetchVaultUserDataAsync,\n} from '.'\nimport { State, AutoVault } from '../types'\nimport { transformAutoVault } from './helpers'\n\nexport const useFetchPublicVaultData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchVaultPublicData = async () => {\n      dispatch(fetchVaultPublicDataAsync())\n    }\n\n    fetchVaultPublicData()\n  }, [dispatch, slowRefresh])\n}\n\nexport const useVaults = (account): { vaults: AutoVault[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchVaultUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { vaults, userDataLoaded } = useSelector((state: State) => ({\n    vaults: state.vaults.data,\n    userDataLoaded: state.vaults.userDataLoaded,\n  }))\n  return { vaults: vaults.map(transformAutoVault), userDataLoaded }\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchMaximizerPublicDataAsync,\n  fetchMaximizerUserDataAsync,\n} from '.'\nimport { State, Maximizer } from '../types'\nimport { transformMaximizer } from './helpers'\n\nexport const useFetchPublicMaximizerData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchMaximizerPublicData = async () => {\n      dispatch(fetchMaximizerPublicDataAsync())\n    }\n\n    fetchMaximizerPublicData()\n  }, [dispatch, slowRefresh])\n}\n\nexport const useMaximizers = (account): { maximizers: Maximizer[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchMaximizerUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { maximizers, userDataLoaded } = useSelector((state: State) => ({\n    maximizers: state.maximizers.data,\n    userDataLoaded: state.maximizers.userDataLoaded,\n  }))\n  return { maximizers: maximizers.map(transformMaximizer), userDataLoaded }\n}\n","import BigNumber from 'bignumber.js'\nimport { MultiPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | MultiPool['userData']\n  | {\n    allowance: number | string\n    stakingTokenBalance: number | string\n    userAmount: number | string\n    pendingReward: number | string\n  }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    userAmount: userData ? new BigNumber(userData.userAmount) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformMultiPool = (mPool: MultiPool): MultiPool => {\n  const { userData, ...rest } = mPool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n  } as MultiPool\n}\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-height: 60px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n  isZeroPtPb: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1 0 50px;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon) <{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  color: #910101;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout, isZeroPtPb }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell className={(isZeroPtPb)? \"pool-cell pt-0 pb-0\" : \"pool-cell\"} role=\"cell\">\n      <ArrowIcon width=\"75px\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenImage } from 'components/TokenImage'\nimport { getAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport BaseCell, { CellContent } from './BaseCell'\nimport ExpandActionCell from './ExpandActionCell'\n\ninterface NameCellProps {\n  pool: any\n  expanded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  justify-content: center;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst StyledText = styled(Text)`\n  padding-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n`\n\nconst StyledButton = styled(Button)`\n  color: white;\n  background-color: black;\n  border-radius: 32px;\n  width: 150px;\n  white-space: normal;\n`\n\nconst StyledContent = styled(CellContent)`\n  margin-left: 20px;\n`\n\n// token pair with extra token styled\nconst TokenPairExtraWrapper = styled.div`\n  max-width: 80px;\n  max-height: 80px;\n  width: 100%;\n  position: relative;\n  min-width: 70px;\n  min-height: 80px;\n`\n\nconst TokenPairExtraPrimaryImages = styled(TokenImage)`\n  position: absolute;\n  width: 92%;\n  inset: 0px auto auto 0px;\n  z-index: 5;\n`\n\nconst TokenPairExtraSecondaryImages = styled(TokenImage)`\n  position: absolute;\n  width: 50%;\n  inset: auto 0px 0px auto;\n  z-index: 6;\n`\n\nconst TokenPairExtraThirdImages = styled(TokenImage)`\n  position: absolute;\n  width: 50%;\n  inset: auto -17px 0px auto;\n  z-index: 7;\n`\n\nconst MaximizerTokenWrapper = styled.div`\n  max-width: 120px;\n  max-height: 80px;\n  width: 100%;\n  position: relative;\n  min-width: 90px;\n  min-height: 80px;\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool, expanded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { stakingToken, isAutoVault, earningTokens: { extra = undefined } = {}, isMaximizer } = pool\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningToken = ('vaultId' in pool || 'maximizerId' in pool) ? pool.earningTokens.main : pool.earningToken\n  const tokenImg = ('stakingTImage' in pool) ? pool.stakingTImage : ('maximiserTImage' in pool) ? pool.maximiserTImage : pool.vaultTImage\n  let poolLabel = t('Stake')\n\n  if ('vaultId' in pool) {\n    if ('extra' in pool.earningTokens) {\n      poolLabel = t('Auto Compound')\n    }\n  }\n\n  // to get image url from token\n  const getImageUrlFromToken = (token: Token) => {\n    const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n    return `/images/tokens/${address}.svg`\n  }\n\n  return (\n    <StyledCell className=\"pool-cell\" role=\"cell\">\n      {isAutoVault ? (\n        <TokenPairExtraWrapper className=\"ml-auto\">\n          <TokenPairExtraPrimaryImages src={getImageUrlFromToken(stakingToken)} token={stakingToken} width={80} height={80} />\n          <TokenPairExtraSecondaryImages src={getImageUrlFromToken(earningToken)} token={earningToken} width={40} height={40} />\n          {extra && <TokenPairExtraThirdImages src={getImageUrlFromToken(extra)} token={extra} width={40} height={40} />}\n        </TokenPairExtraWrapper>\n      ) : isMaximizer ? (\n        <MaximizerTokenWrapper className=\"ml-auto\">\n          <img width={120} height={80} src={tokenImg} alt='logo' className=\"ml-auto \" />\n          <TokenPairExtraSecondaryImages src={getImageUrlFromToken(earningToken)} token={earningToken} width={40} height={40} />\n          {extra && <TokenPairExtraThirdImages src={getImageUrlFromToken(extra)} token={extra} width={40} height={40} />}\n        </MaximizerTokenWrapper>\n      ) : (\n        <img width={80} height={80} src={tokenImg} alt='logo' className=\"ml-auto \" />\n      )}\n      <StyledContent>\n        <StyledText bold={!isXs && !isSm} small={isXs || isSm}>\n          {stakingTokenSymbol}\n        </StyledText>\n        <StyledButton padding=\"20px\" variant=\"tertiary\" scale=\"md\">\n          {poolLabel}\n        </StyledButton>\n      </StyledContent>\n      <div className=\"show-arrow hide-pool-ifDesktop hide-arrow-mobile\" style={{ marginLeft: 'auto' }}>\n        <ExpandActionCell expanded={expanded} isFullLayout={false} isZeroPtPb />\n      </div>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React, { useState, useEffect } from 'react'\nimport { Flex, Skeleton, FlexProps } from '@pancakeswap/uikit'\nimport Balance from 'components/Balance'\nimport axios from 'axios'\nimport useRefresh from 'hooks/useRefresh'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: any\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, ...props }) => {\n  const { slowRefresh } = useRefresh()\n  const { sousId, isFinished, isAutoVault, contractAddress, isMaximizer, maximizerId, apy } = pool\n  const [apr, setApr] = useState(0)\n  const baseUrl = `${process.env.REACT_APP_DOMAIN_LINK}pool/${sousId}/apr`\n  const vaultUrl = `${process.env.REACT_APP_DOMAIN_LINK}vault/${getAddress(contractAddress)}/apy`\n  const maximizerUrl = `${process.env.REACT_APP_DOMAIN_LINK}maximizer/${maximizerId}/apr`\n\n  // check if apy is valid, i.e. true = valid\n  const checkAPYValid = () => {\n    const apyFloat = parseFloat(apy)\n    return Number.isNaN(apyFloat) === false && apyFloat >= 0\n  }\n\n  useEffect(() => {\n    const getApr = async (): Promise<void> => {\n      const apiBase = (isAutoVault) ? vaultUrl : (isMaximizer) ? maximizerUrl : baseUrl\n      await axios.get(apiBase).then((response) => {\n        if (response && response.status === 200) {\n          const respData = response.data.data\n          if (isAutoVault) {\n            setApr(+respData.APYCake + +respData.APRToken)\n          } else if (isMaximizer) {\n            setApr(+respData.APRCake + +respData.APRToken)\n          } else {\n            setApr(respData.APR)\n          }\n        }\n      }).catch(error => {\n        // console.log('error', error)\n      })\n    }\n\n    // getApr()\n  }, [baseUrl, apr, slowRefresh, isAutoVault, vaultUrl, isMaximizer, maximizerUrl])\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {!isFinished && checkAPYValid() === true ? (\n        <>\n          <Balance\n            fontSize=\"20px\"\n            isDisabled={isFinished}\n            value={parseFloat(apy)}\n            decimals={1}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: any\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  flex-direction: row;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 1 0 70px;\n  }\n`\n\nconst StyledText = styled(Text)`\n  padding-top: 20px;\n  text-align: center;\n  color: #98A1B9;\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n\n  let tvlLabel = t('APR')\n  if ('vaultId' in pool) {\n    if ('extra' in pool.earningTokens) {\n      tvlLabel = t('APY')\n    }\n  }\n\n  return (\n    <StyledCell className=\"pool-cell\" role=\"cell\">\n      <CellContent>\n        <Apr pool={pool} />\n        <StyledText>\n          {tvlLabel}\n        </StyledText>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo, useState, useEffect } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport useRefresh from 'hooks/useRefresh'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: any\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst StyledText = styled(Text)`\n  padding-top: 20px;\n  text-align: center;\n  color: #98A1B9;\n`\n\nconst StyledUsdValue = styled(Text)`\n  padding-top: 10px;\n  text-align: center;\n  color: black;\n  font-size: 15px;\n`\n\nconst StyledBalance = styled(Balance)`\n  color: black;\n  font-size: 17px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { slowRefresh } = useRefresh()\n  const [usd, setUsd] = useState(0)\n  const { stakingToken, totalStaked, isAutoVault, isMaximizer, sousId, maximizerId, contractAddress } = pool\n  const baseUrl = `${process.env.REACT_APP_DOMAIN_LINK}pool/${sousId}/apr`\n  const vaultUrl = `${process.env.REACT_APP_DOMAIN_LINK}vault/${getAddress(contractAddress)}/apy`\n  const maximizerUrl = `${process.env.REACT_APP_DOMAIN_LINK}maximizer/${maximizerId}/apr`\n\n  const totalStakedBalance = useMemo(() => {\n    const totalBal = ('vaultId' in pool) ? new BigNumber(pool.totalTokenInVault) : totalStaked\n    const balNumber = getBalanceNumber(totalBal, stakingToken.decimals)\n    return balNumber\n  }, [pool, totalStaked, stakingToken.decimals])\n\n  useEffect(() => {\n    const getUsdValue = async (): Promise<void> => {\n      const apiBase = (isAutoVault) ? vaultUrl : (isMaximizer) ? maximizerUrl : baseUrl\n      await axios.get(apiBase).then((response) => {\n        if (response && response.status === 200) {\n          const respData = response.data.data\n          setUsd(respData.totalUsd)\n        }\n      }).catch(error => {\n        // console.log('error', error)\n      })\n    }\n\n    getUsdValue()\n  }, [baseUrl, slowRefresh, isAutoVault, vaultUrl, isMaximizer, maximizerUrl])\n\n  return (\n    <StyledCell className=\"pool-cell\" role=\"cell\">\n      <CellContent>\n        {totalStakedBalance && totalStakedBalance >= 0 ? (\n          <Flex alignItems=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n            <StyledBalance value={totalStakedBalance} decimals={6} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : totalStakedBalance === 0 ? (\n          <Flex alignItems=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n            <StyledBalance value={0} decimals={6} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n        {/* <StyledUsdValue>\n          <span style={{ fontFamily: 'cursive' }}> ~ </span> {parseFloat(usd.toString()).toFixed(4)} USD\n        </StyledUsdValue> */}\n        <StyledText>\n          {t('TVL')}\n        </StyledText>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport Balance from 'components/Balance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface DepositedCellProps {\n  pool: any\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 80px;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst StyledText = styled(Text)`\n  padding-top: 20px;\n  font-weight: 700px !important;\n  text-align: center;\n  color: #98A1B9;\n`\n\nconst DepositedCell: React.FC<DepositedCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { stakingToken, userData } = pool\n  const vaultStakedBalance = userData?.userAmount ? userData?.userAmount : BIG_ZERO\n  const stakedBalance = useMemo(() => {\n    const vaultBalance = ('vaultId' in pool) ? vaultStakedBalance : BIG_ZERO\n    const poolBalance = (userData?.userAmount ? new BigNumber(userData.userAmount) : BIG_ZERO)\n    return ('vaultId' in pool) ? vaultBalance : poolBalance\n  }, [pool, userData, vaultStakedBalance])\n  const stakedTokenBalance = useMemo(() => {\n    return getBalanceNumber(stakedBalance, stakingToken.decimals)\n  }, [stakingToken.decimals, stakedBalance])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) :\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Balance fontSize=\"17px\" value={stakedTokenBalance} decimals={6} />\n          </Flex>\n        }\n        <StyledText>\n          {t('Deposited')}\n        </StyledText>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default DepositedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  text-align: center;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  updateMultiPoolUserBalance,\n  updateMultiPoolUserPendingReward,\n  updateVaultUserBalance,\n  updateVaultUserPendingReward,\n  fetchVaultPublicDataAsync,\n  updateMaximizerUserPendingReward,\n  updateMaximizerUserPendingRewardPlatform\n} from 'state/actions'\nimport { useNetworkChainId } from 'state/hooks'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport { useAutoVaultContract, useMaximizerContract } from 'hooks/useContract'\nimport { useStakingContractWithCheck } from 'hooks/useContractMulti'\n\nconst options = {\n  gasLimit: 6000000,\n}\n\nconst harvestPool = async (harvestContract, sousId, isAutoVault, isMaximizer) => {\n  const contractCall = (isAutoVault) ? harvestContract.claim({\n    gasLimit: 800000\n  }) : (isMaximizer) ? harvestContract.withdraw(sousId, 0, {\n    gasLimit: 800000\n  }) : harvestContract.claim()\n  const tx = await contractCall\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isAutoVault, isMaximizer, contractAddress, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const chainId = useNetworkChainId()\n  const { account } = useWeb3React()\n  const stakingContract = useStakingContractWithCheck(contractAddress)\n  const vaultContract = useAutoVaultContract(contractAddress)\n  const maximizerContract = useMaximizerContract(contractAddress)\n\n  const handleHarvest = useCallback(async () => {\n    const harvestContract = (isAutoVault) ? vaultContract : (isMaximizer) ? maximizerContract : stakingContract\n    await harvestPool(harvestContract, sousId, isAutoVault, isMaximizer)\n    if (isAutoVault) {\n      dispatch(fetchVaultPublicDataAsync())\n      dispatch(updateVaultUserBalance(sousId, account))\n      dispatch(updateVaultUserPendingReward(sousId, account))\n    } else if (isMaximizer) {\n      dispatch(updateMaximizerUserPendingReward(sousId, account))\n      dispatch(updateMaximizerUserPendingRewardPlatform(sousId, account))\n    } else {\n      dispatch(updateMultiPoolUserPendingReward(chainId, sousId, account))\n      dispatch(updateMultiPoolUserBalance(chainId, sousId, account))\n    }\n  }, [isAutoVault, vaultContract, stakingContract, sousId, dispatch, account, isMaximizer, maximizerContract, chainId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useNetworkChainId } from 'state/hooks'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\n\ninterface CollectModalProps {\n  pool: any\n  formattedBalance: string\n  formattedBalanceExtra?: string\n  stakingToken: Token\n  earningToken: Token\n  earningTokenExtra?: Token\n  isBnbPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  pool,\n  formattedBalance,\n  formattedBalanceExtra,\n  stakingToken,\n  earningToken,\n  earningTokenExtra,\n  isBnbPool,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { contractAddress } = pool\n  const chainId = useNetworkChainId()\n  const poolID = ('vaultId' in pool) ? pool.vaultId : ('maximizerId' in pool) ? pool.maximizerId : pool.sousId\n  const finalContractAddress = (contractAddress)? contractAddress[chainId] : \"\"\n  const { onReward } = useHarvestPool(poolID, pool.isAutoVault, pool.isMaximizer, (finalContractAddress), isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // harvesting\n    try {\n      await onReward()\n      toastSuccess(\n        `${t('Harvested')}!`,\n        t('Your %symbol% earnings have been sent to your wallet!', { symbol: stakingToken.symbol }),\n      )\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal\n      title={`${t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {pool.isMaximizer ?\n            <>\n              <Heading>\n                {formattedBalanceExtra} {earningTokenExtra.symbol}\n              </Heading>\n            </>\n            : null}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { CmsModal, Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface LearnMoreModalProps {\n  content: string\n  onDismiss?: () => void\n  // TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\nconst MModal = styled(CmsModal)`\n  border: none;\n  max-width: 70vh;\n  max-height: 70vh;\n\n  h2 {\n    color: white;\n  }\n  svg {\n    fill: white;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 500px;\n  }\n`\n\nconst LearnMoreModal: React.FC<LearnMoreModalProps> = ({ content, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n\n  return (\n    <MModal title={t('Learn More')} onDismiss={onDismiss} headerBackground='#910101'>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <div style={{color: 'black'}} dangerouslySetInnerHTML={{ __html: content}} />\n      </Flex>\n    </MModal>\n  )\n}\n\nexport default LearnMoreModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, useModal, Skeleton, Heading, Flex } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport LearnMoreModal from '../../PoolCard/Modals/LearnMoreModal'\n\ninterface HarvestActionProps {\n  pool: any\n  userDataLoaded: boolean\n  cmsContent: string\n}\n\nconst StyledActionText = styled(Text)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 41px;\n  color: #910101;\n`\n\nconst StyledHeading = styled(Heading)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 25px;\n  line-height: 75px;\n  text-transform: uppercase;\n  color: #910101;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`\n\nconst FlexBreakLine = styled.div`\n  flex-basis: 100%;\n  height: 0;\n`\n\nconst StyledBalance = styled(Balance)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 25px !important;\n  color: #910101;\n`\n\nconst TempButton = styled(Button)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 47px;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 5px;\n  padding: 30px;\n  width: 250px;\n  height: 60px;\n  background-color: #910101;\n`\n\nconst LearnMoreText = styled(Text)`\n  color: #910101;\n  font-weight: bold;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  pool,\n  userDataLoaded,\n  cmsContent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { userData, poolCategory, earningTokenPrice, stakingToken } = pool\n  let rewardToken = pool.earningTokens.main\n  let extraRewardToken\n  if ('vaultId' in pool) {\n    if ('extra' in pool.earningTokens) {\n      rewardToken = pool.earningTokens.extra\n    } else {\n      rewardToken = pool.earningTokens.main\n    }\n  }\n  if ('maximizerId' in pool) {\n    rewardToken = pool.earningTokens.main\n    extraRewardToken = pool.earningTokens.extra\n  }\n  const earningToken = rewardToken\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningsExtra = userData?.pendingRewardPlatform ? new BigNumber(userData.pendingRewardPlatform) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningExtraTokenBalance = getBalanceNumber(earningsExtra, extraRewardToken ? extraRewardToken.decimals : 18)\n  const hasEarnings = earnings.gt(0)\n  const formattedBalance = formatNumber(earningTokenBalance, 4, 4)\n  const formattedBalanceExtra = formatNumber(earningExtraTokenBalance, 4, 4)\n\n  // Learn More modal\n  const [onLearnMore] = useModal(<LearnMoreModal content={cmsContent} />)\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      pool={pool}\n      formattedBalance={formattedBalance}\n      formattedBalanceExtra={formattedBalanceExtra}\n      stakingToken={stakingToken}\n      earningToken={earningToken}\n      earningTokenExtra={extraRewardToken}\n    />,\n  )\n\n  const actionTitle =\n    <StyledActionText as=\"span\">\n      {t('Pending Rewards:')}\n    </StyledActionText>\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles >{actionTitle}</ActionTitles>\n        <ActionContent>\n          {extraRewardToken ?\n            (\n              <>\n                <StyledHeading>0 {earningToken.symbol} + 0 {extraRewardToken.symbol}</StyledHeading>\n              </>\n            )\n            :\n            <StyledHeading>0 {earningToken.symbol}</StyledHeading>\n          }\n          <FlexBreakLine />\n          <Button disabled>{t('HARVEST')}</Button>\n        </ActionContent>\n        {/* <Flex justifyContent=\"center\" alignItems=\"center\">\n          <LearnMoreText color=\"textSubtle\" mt=\"6px\" style={{ textDecoration: \"underline\" }} onClick={onLearnMore}>\n            {t('Learn more')}\n          </LearnMoreText>\n        </Flex> */}\n      </ActionContainer >\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n        {/* <Flex justifyContent=\"center\" alignItems=\"center\">\n          <LearnMoreText color=\"textSubtle\" mt=\"6px\" style={{ textDecoration: \"underline\" }} onClick={onLearnMore}>\n            {t('Learn more')}\n          </LearnMoreText>\n        </Flex> */}\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <StyledHeading>\n          <>\n            {hasEarnings ? (\n              <>\n                {extraRewardToken ?\n                  <>\n                    <StyledBalance lineHeight=\"1\" decimals={4} value={earningTokenBalance} unit={earningToken.symbol} />\n                    +\n                    <StyledBalance lineHeight=\"1\" decimals={4} value={earningExtraTokenBalance} unit={extraRewardToken.symbol} />\n                  </>\n                  : <StyledBalance lineHeight=\"1\" decimals={4} value={earningTokenBalance} unit={earningToken.symbol} />}\n              </>\n            ) : (\n              <>\n                0 {earningToken.symbol} {extraRewardToken ? <> + 0 {extraRewardToken.symbol} </> : null}\n              </>\n            )}\n          </>\n        </StyledHeading>\n        <FlexBreakLine />\n        <TempButton disabled={!hasEarnings} onClick={onPresentCollect}>\n          {t('HARVEST')}\n        </TempButton>\n      </ActionContent>\n      {/* <Flex justifyContent=\"center\" alignItems=\"center\">\n        <LearnMoreText color=\"textSubtle\" mt=\"6px\" style={{ textDecoration: \"underline\" }} onClick={onLearnMore}>\n          {t('Learn more')}\n        </LearnMoreText>\n      </Flex> */}\n    </ActionContainer >\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n  border-radius: 0;\n  border: 0;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  text-align: right;\n  color: #910101;\n  box-shadow: none;\n  padding: 0;\n  background-color: transparent;\n  text-transform: uppercase;\n  white-space: nowrap;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"md\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  updateMultiPoolUserAmount,\n  updateMultiPoolUserBalance,\n  updateMultiPoolUserPendingReward,\n  updateVaultUserBalance,\n  updateVaultUserShares,\n  updateVaultUserAmount,\n  fetchVaultPublicDataAsync,\n  fetchMaximizerPublicDataAsync,\n  updateMaximizerUserStakedBalance,\n  updateMaximizerUserBalance,\n  updateMaximizerUserPendingReward,\n  updateMaximizerUserPendingRewardPlatform,\n  updateVaultUserPendingReward\n} from 'state/actions'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useAutoVaultContract, useMaximizerContract } from 'hooks/useContract'\nimport { useStakingContractWithCheck } from 'hooks/useContractMulti'\nimport { useNetworkChainId } from 'state/hooks'\n\nconst options = {\n  gasLimit: 600000,\n}\n\nconst onStake = async (depositContract, sousId, amount, decimals = 18, isAutoVault, isMaximizer) => {\n  const contractCall = (isAutoVault) ? depositContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasLimit: 800000\n  }) : (isMaximizer) ? depositContract.deposit(sousId, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasLimit: 800000\n  }) : depositContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const tx = await contractCall\n  const receipt = await tx.wait()\n}\n\nconst useStakePool = (sousId: number, isAutoVault, isMaximizer, contractAddress, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const chainId = useNetworkChainId()\n  const stakingContract = useStakingContractWithCheck(contractAddress)\n  const vaultContract = useAutoVaultContract(contractAddress)\n  const maximizerContract = useMaximizerContract(contractAddress)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      const depositContract = (isAutoVault) ? vaultContract : (isMaximizer) ? maximizerContract : stakingContract\n      await onStake(depositContract, sousId, amount, decimals, isAutoVault, isMaximizer)\n      if (isAutoVault) {\n        dispatch(fetchVaultPublicDataAsync())\n        dispatch(updateVaultUserBalance(sousId, account))\n        dispatch(updateVaultUserShares(sousId, account))\n        dispatch(updateVaultUserAmount(sousId, account))\n        dispatch(updateVaultUserPendingReward(sousId, account))\n      } else if (isMaximizer) {\n        dispatch(fetchMaximizerPublicDataAsync())\n        dispatch(updateMaximizerUserStakedBalance(sousId, account))\n        dispatch(updateMaximizerUserBalance(sousId, account))\n        dispatch(updateMaximizerUserPendingReward(sousId, account))\n        dispatch(updateMaximizerUserPendingRewardPlatform(sousId, account))\n      } else {\n        dispatch(updateMultiPoolUserAmount(chainId, sousId, account))\n        dispatch(updateMultiPoolUserBalance(chainId, sousId, account))\n        dispatch(updateMultiPoolUserPendingReward(chainId, sousId, account))\n      }\n    },\n    [isAutoVault, isMaximizer, vaultContract, stakingContract, maximizerContract, sousId, dispatch, account, chainId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport {\n  updateMultiPoolUserAmount,\n  updateMultiPoolUserBalance,\n  updateMultiPoolUserPendingReward,\n  updateVaultUserBalance,\n  updateVaultUserAmount,\n  updateVaultUserPendingReward,\n  updateVaultUserShares,\n  fetchVaultPublicDataAsync,\n  fetchMaximizerPublicDataAsync,\n  updateMaximizerUserStakedBalance,\n  updateMaximizerUserBalance,\n  updateMaximizerUserPendingReward,\n  updateMaximizerUserPendingRewardPlatform\n} from 'state/actions'\nimport { useNetworkChainId } from 'state/hooks'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport { useStakingContract, useAutoVaultContract, useMaximizerContract } from 'hooks/useContract'\nimport { useStakingContractWithCheck } from 'hooks/useContractMulti'\n\nconst options = {\n  gasLimit: 600000,\n}\n\nconst onUnstake = async (withdrawContract, sousId, amount, decimals = 18, isAutoVault, isMaximizer, userShares, maxAmount) => {\n  const unstakeAmt = new BigNumber(amount).times(BIG_TEN.pow(decimals)).dividedBy(maxAmount).times(userShares).toFixed(0)\n  const contractCall = (isAutoVault) ? withdrawContract.withdraw(unstakeAmt, {\n    gasLimit: 800000\n  }) : (isMaximizer) ? withdrawContract.withdraw(sousId, new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasLimit: 800000\n  }) : withdrawContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const tx = await contractCall\n  const receipt = await tx.wait()\n}\n\nconst useUnstakePool = (sousId, isAutoVault, isMaximizer, contractAddress, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const chainId = useNetworkChainId()\n  const stakingContract = useStakingContractWithCheck(contractAddress)\n  const vaultContract = useAutoVaultContract(contractAddress)\n  const maximizerContract = useMaximizerContract(contractAddress)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number, userShares: string, maxAmount: string) => {\n      const withdrawContract = (isAutoVault) ? vaultContract : (isMaximizer) ? maximizerContract : stakingContract\n      await onUnstake(withdrawContract, sousId, amount, decimals, isAutoVault, isMaximizer, userShares, maxAmount)\n      if (isAutoVault) {\n        dispatch(fetchVaultPublicDataAsync())\n        dispatch(updateVaultUserAmount(sousId, account))\n        dispatch(updateVaultUserBalance(sousId, account))\n        dispatch(updateVaultUserPendingReward(sousId, account))\n        dispatch(updateVaultUserShares(sousId, account))\n      } else if (isMaximizer) {\n        dispatch(fetchMaximizerPublicDataAsync())\n        dispatch(updateMaximizerUserStakedBalance(sousId, account))\n        dispatch(updateMaximizerUserBalance(sousId, account))\n        dispatch(updateMaximizerUserPendingReward(sousId, account))\n        dispatch(updateMaximizerUserPendingRewardPlatform(sousId, account))\n      } else {\n        dispatch(updateMultiPoolUserAmount(chainId, sousId, account))\n        dispatch(updateMultiPoolUserBalance(chainId, sousId, account))\n        dispatch(updateMultiPoolUserPendingReward(chainId, sousId, account))\n      }\n    },\n    [isAutoVault, isMaximizer, vaultContract, stakingContract, maximizerContract, sousId, dispatch, account, chainId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Button, BalanceInput, AutoRenewIcon, LinkExternal, MetamaskIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { BLOCK_EXPLORER } from 'config/constants/chains'\nimport { useNetworkChainId } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: any\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StartText = styled(Text)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 41px;\n  color: #910101;\n`\n\nconst EndText = styled(Text)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 41px;\n  text-align: right;\n  color: #910101;\n`\n\nconst StyledBalance = styled(BalanceInput)`\n  padding: 0;\n  width: 472px;\n  height: 50px;\n  border: none transparent;\n  border-radius: 0;\n  background: transparent;\n  box-shadow: none;\n`\n\nconst StyledFlex = styled(Flex)`\n  width: 100%;\n  height: 46px;\n`\n\nconst TempButton = styled(Button)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 47px;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 5px;\n  padding: 30px;\n  width: 250px;\n  height: 60px;\n  background-color: #910101;\n  margin-left: 30px;\n  margin-right: 60px;\n`\n\nconst StyledInputFlex = styled(Flex)`\n  border-bottom: 2px solid #910101;\n`\n\nconst InfoFlex = styled(Flex)`\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 30px;\n    margin-right: 60px;\n    flex-direction: row;\n  }\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  isRemovingStake = false,\n  onDismiss = () => null,\n}) => {\n  const { stakingToken, userData, contractAddress } = pool\n  const chainId = useNetworkChainId()\n  const poolID = ('vaultId' in pool) ? pool.vaultId : ('maximizerId' in pool) ? pool.maximizerId : pool.poolId\n  const earningToken = pool.earningTokens.main\n\n  const stakingTokenAddress = stakingToken && stakingToken.address ? (stakingToken.address[chainId]) : ''\n  const earningTokenAddress = earningToken && earningToken.address ? (earningToken.address[chainId]) : ''\n  const finalContractAddress = (contractAddress)? contractAddress[chainId] : \"\"\n  // const stakingTokenSymbolDecimal = stakingToken || tokenInit\n  // const earningTokenSymbolDecimal = earningToken || tokenInit\n\n  const { t } = useTranslation()\n  const { onStake } = useStakePool(poolID, pool.isAutoVault, pool.isMaximizer, (finalContractAddress), isBnbPool)\n  const { onUnstake } = useUnstakePool(poolID, pool.isAutoVault, pool.isMaximizer, (finalContractAddress), pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.userAmount\n    }\n\n    return stakingTokenBalance\n  }\n\n  const { account } = useWeb3React()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n\n  const handleStakeInputChange = (input: string) => {\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n    const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n    setStakeAmount(amountToStake)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals, userData?.userShares, getCalculatedStakingLimit())\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        setStakeAmount('')\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        setStakeAmount('')\n        onDismiss()\n      } catch (e) {\n        console.log(e)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <>\n      <StyledFlex alignItems=\"center\" justifyContent=\"space-between\" mb=\"0px\">\n        <StartText>\n          {t('Balance:')}\n        </StartText>\n        <EndText>\n          {getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals, 4)}\n          {stakingToken.symbol}\n        </EndText>\n      </StyledFlex>\n      <StyledInputFlex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledBalance\n          value={stakeAmount}\n          placeholder={t(\"Enter amount\")}\n          onUserInput={handleStakeInputChange}\n          decimals={stakingToken.decimals}\n          className=\"custom\"\n        />\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </StyledInputFlex>\n      <TempButton\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"40px\"\n      >\n        {pendingTx ? t('Confirming') : (isRemovingStake ? t('Withdraw') : t('Deposit'))}\n      </TempButton>\n      <InfoFlex justifyContent=\"center\" alignItems=\"center\" mt=\"0.5rem\">\n        <LinkExternal href={`${BLOCK_EXPLORER[chainId]}/address/${earningTokenAddress}`} bold={false} small fontSize=\"12px\">\n          {t('See Token Info')}\n        </LinkExternal>\n        <span style={{ paddingLeft: '1rem' }} />\n        <LinkExternal\n          href={`${BLOCK_EXPLORER[chainId]}/address/${finalContractAddress}`}\n          bold={false}\n          small\n          fontSize=\"12px\"\n        >\n          {t('View Contract')}\n        </LinkExternal>\n        <span style={{ paddingLeft: '1rem' }} />\n        {account && isMetaMaskInScope && earningTokenAddress && (\n          <Flex justifyContent=\"flex-end\">\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(stakingTokenAddress, stakingToken.symbol.includes('LP') ? 'CAKE-LP' : stakingToken.symbol, stakingToken.decimals)}\n            >\n              <Text color=\"primary\" fontSize=\"12px\">\n                {t('Add to Metamask')}\n              </Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n      </InfoFlex>\n    </>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = {\n  grid: {\n    width: \"auto\",\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\nexport default function GridContainer(props) {\n  const classes = useStyles()\n  const { children, className, ...rest } = props\n  const classN = `${classes.grid} ${className} `\n  return (\n    <Grid container {...rest} className={classN}>\n      {children}\n    </Grid>\n  )\n}\n\nGridContainer.defaultProps = {\n  className: \"\",\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    position: \"relative\",\n    width: \"100%\",\n    minHeight: \"1px\",\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    flexBasis: \"auto\",\n  },\n}))\n\nexport default function GridItem(props) {\n  const classes = useStyles()\n  const { children, className, ...rest } = props\n  const classN = `${classes.grid} ${className} `\n  return (\n    <Grid item {...rest} className={classN}>\n      {children}\n    </Grid>\n  )\n}\n\nGridItem.defaultProps = {\n  className: \"\",\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n","import React from 'react'\n// nodejs library that concatenates classes\nimport classNames from 'classnames'\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types'\n\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { Tabs, Tab } from '@material-ui/core'\nimport GridContainer from './GridContainer'\nimport GridItem from './GridItem'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flexContainer: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n    },\n  },\n  horizontalDisplay: {\n    display: \"block\",\n  },\n  root: {\n    paddingLeft: 0,\n    marginBottom: 0,\n    overflow: \"visible !important\",\n    lineHeight: \"24px\",\n    position: \"relative\",\n    display: \"block\",\n    color: \"inherit\",\n  },\n  fixed: {\n    overflow: \"visible !important\",\n  },\n  displayNone: {\n    display: \"none !important\",\n  },\n  tabIcon: {\n    width: \"70px\",\n    height: \"70px\",\n    display: \"block\",\n    \"&, & *\": {\n      letterSpacing: \"normal !important\",\n    },\n  },\n  pills: {\n    position: \"relative\",\n    display: \"block\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    transition: \"all .3s\",\n    fontSize: \"20px\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    lineHeight: \"41px\",\n    color: \"#910101\",\n    textTransform: \"none\",\n  },\n  horizontalPills: {\n    float: \"none\",\n    \"& + button\": {\n      margin: \"10px 0\",\n    },\n  },\n  tabWrapper: {\n    color: \"inherit\",\n    position: \"relative\",\n    width: \"100px\",\n    height: \"100px\",\n  },\n  contentWrapper: {\n  },\n  tabContent: {\n    paddingLeft: \"40px\"\n  },\n  tabContentNoPadding: {\n    paddingLeft: \"0px\",\n    paddingTop: \"20px\",\n  },\n  red: {\n    background: \"#910101\",\n    color: \"white\",\n    boxShadow: \"0px 3px 10px rgba(0, 0, 0, 0.5)\",\n  }\n}))\n\nexport default function NavPills(props) {\n  const { tabs, color, horizontal, alignCenter, active1, tabNoPadding } = props\n  const [active, setActive] = React.useState(active1)\n  const handleChange = (event, value) => {\n    setActive(value)\n  }\n  const classes = useStyles()\n  const flexContainerClasses = classNames({\n    [classes.flexContainer]: true,\n    [classes.horizontalDisplay]: horizontal !== undefined\n  })\n\n  const tabButtons = (\n    <Tabs\n      classes={{\n        root: classes.root,\n        fixed: classes.fixed,\n        flexContainer: flexContainerClasses,\n        indicator: classes.displayNone,\n      }}\n      value={active}\n      onChange={handleChange}\n      centered={alignCenter}\n    >\n      {tabs.map((prop, key) => {\n        const icon = { icon: null }\n        const newKey = `${key}-tabs`\n        if (prop.tabIcon !== undefined) {\n          if (key === active) {\n            icon.icon = <img src={prop.tabIcon.white} className={classes.tabIcon} alt='logo' />\n          } else {\n            icon.icon = <img src={prop.tabIcon.red} className={classes.tabIcon} alt='logo' />\n          }\n        }\n        const pillsClasses = classNames({\n          [classes.pills]: true,\n          [classes.horizontalPills]: horizontal !== undefined,\n        })\n        return (\n          <Tab\n            label={prop.tabButton}\n            key={newKey}\n            {...icon}\n            classes={{\n              root: pillsClasses,\n              selected: classes[color],\n              wrapper: classes.tabWrapper,\n            }}\n          />\n        )\n      })}\n    </Tabs>\n  )\n\n  const tabContent = (\n    <div className={classes.contentWrapper}>\n      {tabs.map((prop, key) => {\n        const tabKey = `${key}-tab`\n        if (key === active) {\n          const tabContentStyle = tabNoPadding ? classes.tabContentNoPadding : classes.tabContent;\n          return (\n            <div className={tabContentStyle} key={tabKey}>\n              {prop.tabContent}\n            </div>\n          )\n        }\n        return null\n      })}\n    </div>\n  )\n\n  return horizontal !== undefined ? (\n    <GridContainer>\n      <GridItem {...horizontal.tabsGrid}>{tabButtons}</GridItem>\n      <GridItem {...horizontal.contentGrid}>{tabContent}</GridItem>\n    </GridContainer>\n  ) : (\n    <div>\n      {tabButtons}\n      {tabContent}\n    </div>\n  )\n}\n\nNavPills.defaultProps = {\n  active1: 0,\n  color: \"red\",\n}\n\nNavPills.propTypes = {\n  // index of the default active pill\n  active1: PropTypes.number,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      tabButton: PropTypes.string,\n      tabIcon: PropTypes.objectOf(PropTypes.string),\n      tabContent: PropTypes.node,\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\n    \"red\",\n  ]),\n  horizontal: PropTypes.shape({\n    tabsGrid: PropTypes.objectOf(PropTypes.number),\n    contentGrid: PropTypes.objectOf(PropTypes.number),\n  }),\n  alignCenter: PropTypes.bool,\n  tabNoPadding: PropTypes.bool,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Skeleton, Flex, LinkExternal, MetamaskIcon, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { BLOCK_EXPLORER } from 'config/constants/chains'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContractMulti'\nimport { registerToken } from 'utils/wallet'\nimport { useNetworkChainId } from 'state/hooks'\nimport { ActionContainer, ActionContent } from './styles'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport { useApprovePool } from '../../../hooks/useApprove'\nimport NavPills from '../../NavPills'\n\n\ninterface StackedActionProps {\n  pool: any\n  userDataLoaded: boolean\n}\n\nconst TempButton = styled(Button)`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 47px;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 5px;\n  padding: 30px;\n  width: 250px;\n  height: 60px;\n  background-color: #910101;\n`\n\nconst InfoFlex = styled(Flex)`\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    stakingToken,\n    earningTokens,\n    userData,\n    isAutoVault = false,\n    isMaximizer = false,\n    contractAddress\n  } = pool\n  const chainId = useNetworkChainId()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const earningToken =  earningTokens.main\n  const stakingTokenContract = useERC20(stakingToken.address ? (stakingToken.address[chainId]) : '')\n  const spenderAddress = contractAddress? (contractAddress[chainId]) : ''\n  const approveId = ('vaultId' in pool) ? pool.vaultId : ('maximizerId' in pool) ? pool.maximizerId : pool.poolId\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    approveId,\n    isMaximizer ? stakingToken.symbol : earningToken.symbol,\n    isAutoVault,\n    isMaximizer,\n    spenderAddress\n  )\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const stakingTokenAddress = stakingToken.address ? (stakingToken.address[chainId]) : ''\n  const earningTokenAddress = earningToken.address ? (earningToken.address[chainId]) : ''\n\n  const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionContent>\n          <ConnectWalletButton />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionContent style={{ marginTop: '20px' }}>\n          <TempButton disabled={requestedPoolApproval} onClick={handlePoolApprove}>\n            {t('Approve')}\n          </TempButton>\n          <InfoFlex justifyContent=\"center\" alignItems=\"center\" mt=\"0.5rem\">\n            <LinkExternal href={`${BLOCK_EXPLORER[chainId]}/address/${stakingTokenAddress}`} bold={false} small fontSize=\"12px\">\n              {t('See Token Info')}\n            </LinkExternal>\n            <span style={{ paddingLeft: '1rem' }} />\n            <LinkExternal\n              href={`${BLOCK_EXPLORER[chainId]}/address/${(contractAddress[chainId])}`}\n              bold={false}\n              small\n              fontSize=\"12px\"\n            >\n              {t('View Contract')}\n            </LinkExternal>\n            <span style={{ paddingLeft: '1rem' }} />\n            {account && isMetaMaskInScope && earningTokenAddress && (\n              <Flex justifyContent=\"flex-end\">\n                <Button\n                  variant=\"text\"\n                  p=\"0\"\n                  height=\"auto\"\n                  onClick={() => registerToken(stakingTokenAddress, stakingToken.symbol.includes('LP') ? 'CAKE-LP' : stakingToken.symbol, stakingToken.decimals)}\n                >\n                  <Text color=\"primary\" fontSize=\"12px\">\n                    {t('Add to Metamask')}\n                  </Text>\n                  <MetamaskIcon ml=\"4px\" />\n                </Button>\n              </Flex>\n            )}\n          </InfoFlex>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  const tabOpt = [\n    {\n      tabButton: t(\"Deposit\"),\n      tabIcon: {\n        red: '/images/deposit-icon-red.png',\n        white: '/images/deposit-icon-white.png',\n      },\n      tabContent: (\n        <StakeModal\n          isBnbPool={isBnbPool}\n          pool={pool}\n          stakingTokenBalance={stakingTokenBalance}\n          stakingTokenPrice={pool.stakingTokenPrice}\n        />\n      ),\n    },\n    {\n      tabButton: t(\"Withdrawal\"),\n      tabIcon: {\n        red: '/images/withdrawal-icon-red.png',\n        white: '/images/withdrawal-icon-white.png',\n      },\n      tabContent: (\n        <StakeModal\n          stakingTokenBalance={stakingTokenBalance}\n          isBnbPool={isBnbPool}\n          pool={pool}\n          stakingTokenPrice={pool.stakingTokenPrice}\n          isRemovingStake\n        />\n      ),\n    },\n  ]\n\n  const horizontalOpt = {\n    tabsGrid: { xs: 12, sm: 4, md: 3 },\n    contentGrid: { xs: 12, sm: 8, md: 9 },\n  }\n\n  return (\n    <ActionContainer>\n      <ActionContent className=\"pool-nav\">\n        <div className=\"hide-ifMobile\">\n          <NavPills\n            color=\"red\"\n            horizontal={horizontalOpt}\n            tabs={tabOpt}\n          />\n        </div>\n        <div className=\"show-ifMobile hide-ifDesktop\">\n          <NavPills\n            color=\"red\"\n            tabs={tabOpt}\n            tabNoPadding\n          />\n        </div>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, updateVaultUserAllowance, updateMaximizerUserAllowance, updateMultiPoolUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useNetworkChainId } from 'state/hooks'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol, isAutoVault, isMaximizer, spenderAddress) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const chainId = useNetworkChainId()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(spenderAddress, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      if (isAutoVault) {\n        dispatch(updateVaultUserAllowance(sousId, account))\n      } else if (isMaximizer) {\n        dispatch(updateMaximizerUserAllowance(sousId, account))\n      } else {\n        dispatch(updateMultiPoolUserAllowance(chainId, sousId, account))\n      }\n\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [lpContract, spenderAddress, isAutoVault, isMaximizer, dispatch, sousId, account, toastSuccess, t, earningTokenSymbol, toastError, chainId])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    min-height: 339px;\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 10px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 20px 35px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid #910101;\n  padding-top: 30px;\n  flex-flow: wrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: any\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n  cmsContent: string\n}\n\nconst VerticalLine = styled.div`\n  width: 1px;\n  height: 260px;\n  border: 2px solid #910101;\n  background: #910101;\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ pool, userDataLoaded, expanded, cmsContent }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledActionPanel className=\"pool-action-container\" expanded={expanded}>\n      <ActionContainer className=\"pool-action-container-child\">\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n        <VerticalLine className=\"hide-vline-ifMobile\" />\n        <Harvest pool={pool} userDataLoaded={userDataLoaded} cmsContent={cmsContent} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport DepositedCell from './Cells/DepositedCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: any\n  account: string\n  userDataLoaded: boolean\n  cmsContent: string\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n  padding: 20px;\n  padding-bottom: 0px;\n`\n\nconst StyledRowMobile = styled.div`\n  background-color: transparent;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  padding: 20px;\n  padding-bottom: 0px;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded, cmsContent }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(true)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <div className=\"hide-pool-ifMobile\">\n        <StyledRow className=\"pool-row\" role=\"row\" onClick={toggleExpanded}>\n          <NameCell pool={pool} expanded={expanded} />\n          <DepositedCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n          <AprCell pool={pool} />\n          {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n          <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} isZeroPtPb={false} />\n        </StyledRow>\n      </div>\n\n      <div className=\"show-pool-ifMobile hide-pool-ifDesktop\">\n        <StyledRowMobile className=\"pool-row\" role=\"row\" onClick={toggleExpanded}>\n          <NameCell pool={pool} expanded={expanded} />\n          <div className=\"pool-child-row\">\n            <DepositedCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n            <AprCell pool={pool} />\n            <TotalStakedCell pool={pool} />\n          </div>\n        </StyledRowMobile>\n      </div>\n\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n          cmsContent={cmsContent}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: any\n  userDataLoaded: boolean\n  account: string\n  cmsContent: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: 15px;\n  background-color: ${({ theme }) => theme.card.background};\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: 15px;\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n  margin-top: 1rem;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account, cmsContent }) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const poolKey = ('sousId' in pools) ? pools.sousId : pools.vaultId\n\n  return (\n    <>\n      {pools.map((pool) => (\n        <StyledTableBorder>\n          <StyledTable role=\"table\" ref={tableWrapperEl}>\n            <PoolRow\n              key={poolKey}\n              pool={pool}\n              account={account}\n              userDataLoaded={userDataLoaded}\n              cmsContent={cmsContent}\n            />\n          </StyledTable>\n        </StyledTableBorder>\n      ))}\n    </>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport partition from 'lodash/partition'\nimport { useFetchPublicPoolsData, usePools } from 'state/pools/hooks'\nimport { useFetchPublicVaultData, useVaults } from 'state/vaults/hooks'\nimport { useFetchPublicMultiPoolData, useMultiPool } from 'state/multiPool/hooks'\nimport { useFetchPublicMaximizerData, useMaximizers } from 'state/maximizers/hooks'\nimport Page from 'components/Layout/Page'\nimport Loading from 'components/Loading'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { useCmsContent } from \"./hooks/useCmsContent\"\n\n\nconst PoolWrapper = styled.div`\n  background-color: #910101;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 6\n\ninterface BannerProps {\n  content: string\n}\n\nconst Banner: React.FC<BannerProps> = ({ content }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <div className='banner-wrapper-area hide-ifMobile'>\n        <div className='container'>\n          <div className='row align-items-center m-0'>\n            <div className='col-xl-8 col-lg-6 col-md-12 p-0'>\n              <div className='banner-wrapper-content'>\n                <h3>{t(\"DEPOSIT & EARN MORE TIME\")}</h3>\n                <div className='banner-wrapper-content'>\n                  <p>\n                    {t('Musashi offers \"Farming\" and \"Staking\" for users to earn more TIME tokens.')}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className='col-xl-4 col-lg-6 col-md-12 p-0'>\n              <div className='banner-wrapper-image'>\n                <img src='/images/decor-img.png' alt='banner' />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n// CMS interface\ntype cmsBaseObj = {\n  content: string,\n  language: string,\n  page: string,\n  key: string\n}\n\ntype cmsObj = {\n  banner?: cmsBaseObj,\n  staking?: cmsBaseObj\n}\n\nconst Pools: React.FC = () => {\n  const { account } = useWeb3React()\n  // const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  // const { vaults, userDataLoaded: vaultUserDataLoaded } = useVaults(account)\n  // const { maximizers, userDataLoaded: maximizerUserDataLoaded } = useMaximizers(account)\n  const { multiPools, userDataLoaded: multiPoolUserDataLoaded } = useMultiPool(account)\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const chosenPoolsLength = useRef(0)\n  const { t, currentLanguage } = useTranslation()\n\n  // cms content\n  const { onCmsContent: handleCmsContent } = useCmsContent(\"staking\", currentLanguage.locale)\n  const [cmsContent, setCmsContent] = useState(() => {\n    const init: cmsObj = {\n      banner: {\n        content: \"\",\n        language: \"\",\n        page: \"\",\n        key: \"\"\n      },\n      staking: {\n        content: \"\",\n        language: \"\",\n        page: \"\",\n        key: \"\"\n      }\n    }\n    return init\n  })\n  useEffect(() => {\n    const getCms = async () => {\n      const result = await handleCmsContent()\n      if (Object.keys(result).length > 0) {\n        setCmsContent(result)\n      }\n    }\n    getCms()\n  }, [handleCmsContent])\n\n  // const pools = useMemo(() => {\n  //   const vaultPool = vaults.map((vault) => {\n  //     const v = { ...vault }\n  //     v.isAutoVault = true\n  //     return v\n  //   })\n  //   const maximizerPool = maximizers.map((maximizer) => {\n  //     const m = { ...maximizer }\n  //     m.isMaximizer = true\n  //     return m\n  //   })\n  //   const allPools = [...poolsWithoutAutoVault, ...vaultPool, ...maximizerPool]\n  //   return allPools\n  // }, [poolsWithoutAutoVault, vaults, maximizers])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  // const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n\n  useFetchPublicMultiPoolData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const sortPools = (poolsToSort: any) => {\n    return poolsToSort\n  }\n\n  let chosenPools = multiPools\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={multiPoolUserDataLoaded} cmsContent={cmsContent.staking.content} />\n\n  return (\n    <>\n      <Banner content={cmsContent.banner.content} />\n      <PoolWrapper className=\"pool-container\">\n        <h1 className=\"page-red-header hide-ifMobile\">{t(\"STAKING\")}</h1>\n        <Page className=\"pools-wrapper\">\n          {account && !multiPoolUserDataLoaded && (\n            <Flex justifyContent=\"center\" mb=\"4px\">\n              <Loading />\n            </Flex>\n          )}\n          {tableLayout}\n          <div ref={loadMoreRef} />\n        </Page>\n      </PoolWrapper>\n    </>\n  )\n}\n\nexport default Pools\n","import { useCallback, useEffect, useState } from 'react'\nimport axios from \"axios\"\n\nexport const useCmsContent = (_page: string, _locale: string) => {\n  const handleCmsContent = useCallback(async () => {\n    try {\n      const baseUrl = `${process.env.REACT_APP_MUSASHIBO_LINK}/api/frontend/get-content`\n\n      const response = await axios.get(baseUrl, {\n        params: {\n          page    : _page,\n          language: _locale\n        }\n      })\n\n      const {data} = await response?.data\n      return data\n    } catch (e) {\n      return {}\n    }\n  }, [_locale, _page])\n\n  return { onCmsContent: handleCmsContent }\n}","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { useNetworkChainId } from 'state/hooks'\nimport {\n  fetchMultiPoolPublicDataAsync,\n  fetchMultiPoolUserDataAsync,\n} from '.'\nimport { State, MultiPool } from '../types'\nimport { transformMultiPool } from './helpers'\n\nexport const useFetchPublicMultiPoolData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const chainId = useNetworkChainId()\n\n  useEffect(() => {\n    const fetchMultiPoolPublicData = async () => {\n      dispatch(fetchMultiPoolPublicDataAsync(chainId))\n    }\n\n    fetchMultiPoolPublicData()\n  }, [dispatch, slowRefresh, chainId])\n}\n\nexport const useMultiPool = (account): { multiPools: MultiPool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const chainId = useNetworkChainId()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchMultiPoolUserDataAsync(chainId, account))\n    }\n  }, [account, dispatch, fastRefresh, chainId])\n\n  const { multiPools, userDataLoaded } = useSelector((state: State) => ({\n    multiPools: state.multiPools.data,\n    userDataLoaded: state.multiPools.userDataLoaded,\n  }))\n  return { multiPools: multiPools.map(transformMultiPool), userDataLoaded }\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useActiveWeb3ReactV2 } from 'hooks/useActiveWeb3React'\nimport { CHAIN_ID } from 'config/constants/chains'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { useUpdateNetwork } from 'state/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport Menu from './components/Menu'\nimport Footer from './components/Footer'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport history from './routerHistory'\nimport PotDetail from './views/PotDetail'\nimport PotDetailMulti from './views/PotDetailMulti'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport MultiPools from './views/MultiPools'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Pot = lazy(() => import('./views/Pot'))\nconst PotMulti = lazy(() => import('./views/PotMulti'))\nconst Bridge = lazy(() => import('./views/Bridge'))\nconst Referral = lazy(() => import('./views/Referral'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  useUpdateNetwork()\n  usePollBlockNumber()\n  useEagerConnect(window.location.pathname.replace('/', ''))\n\n  const { chainId } = useActiveWeb3ReactV2()\n\n  return (\n    <Router history={history}>\n      <div className=\"master-container\">\n        <Menu />\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/pools\">\n              {chainId === CHAIN_ID.BSC?\n                <Pools />\n              :\n                <MultiPools />\n              }\n            </Route>\n            {/* <Route exact strict path=\"/referral\">\n              <Referral />\n            </Route> */}\n            {/* <Route path=\"/bridge\">\n              <Bridge />\n            </Route> */}\n            <Route exact strict path=\"/pot\" component={chainId !== CHAIN_ID.BSC? PotMulti : Pot} />\n            <Route exact strict path=\"/pot/:address\" component={chainId !== CHAIN_ID.BSC? PotDetailMulti : PotDetail} />\n\n            {/* <Route exact strict path=\"/referral/:address\" component={Referral} /> */}\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            {/* <Route exact strict path=\"/zap\" component={Swap} />\n            <Route exact strict path=\"/zap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} /> */}\n            {/* <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} /> */}\n\n            {/* Redirect */}\n            <Redirect exact from=\"/\" to=\"/pot\" />\n            {/* <Redirect exact from=\"/\" to=\"/pools\" /> */}\n            {/* <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route> */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n        <ToastListener />\n        <DatePickerPortal />\n      </div>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport PotDetailContextProvider from 'contexts/PotDetail'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <PotDetailContextProvider>\n                    <ModalProvider>{children}</ModalProvider>\n                  </PotDetailContextProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useState, useEffect } from 'react';\n\nconst GoTop = () => {\n  const [isVisible, setisVisible] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener('scroll', function () {\n      toggleVisibility();\n    });\n  }, []);\n\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 300) {\n      setisVisible(true);\n    } else {\n      setisVisible(false);\n    }\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {isVisible && (\n        <div role=\"presentation\" className='go-top active' onClick={scrollToTop}>\n          <i className='bx bx-chevron-up' />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default GoTop;\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\nimport GoTop from './components/Shared/GoTop'\n\nimport './css/animate.min.css'\nimport './css/bootstrap.min.css'\nimport './css/boxicons.min.css'\nimport './css/fontawesome.min.css'\nimport './css/meanmenu.min.css'\nimport './css/style.css'\nimport './css/responsive.css'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n        <GoTop />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.musashi,\n    earningToken: tokens.musashi,\n    contractAddress: {\n      97: '',\n      56: '0x024Ece00965833Ea0D096A03f25E9b07e80DD88A',\n    },\n    stakingTImage: '/images/tokenM.png?v=1',\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0',\n    sortOrder: 1,\n    isFinished: false,\n  }\n]\n\nexport default pools\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\nimport stakingABI from 'config/abi/stakingABI.json'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = poolsConfig.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'getUserRewardByAddress',\n    params: [account, p.sousId],\n  }))\n  const userInfo = await multicall(stakingABI, calls)\n  const stakedBalances = poolsConfig.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index][3].toString()).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...stakedBalances }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = poolsConfig.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'getUserRewardByAddress',\n    params: [account, p.sousId],\n  }))\n  const res = await multicall(stakingABI, calls)\n  const pendingRewards = poolsConfig.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index][1].toString()).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...pendingRewards }\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ethers } from 'ethers'\nimport getRpcUrl, { getEthRpc } from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nconst ETH_RPC_URL = getEthRpc()\nexport const ethRpcProvider = new ethers.providers.JsonRpcProvider(ETH_RPC_URL)\n\nexport default null\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n"],"sourceRoot":""}